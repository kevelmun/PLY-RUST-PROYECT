
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDE CADENA CHAR COLON COMMA COMMENT DIVEQUAL DIVIDE DOT EQ EQUALS FLOAT FLOAT_32 FLOAT_64 GE GT HASH INTEGER KW_ABSTRACT KW_AS KW_ASYNC KW_AWAIT KW_BECOME KW_BOOLEAN KW_BOX KW_BREAK KW_CHARACTER KW_CONST KW_CONTINUE KW_CRATE KW_DO KW_DYN KW_ELSE KW_ENUM KW_EXPECT KW_EXTERN KW_FALSE KW_FINAL KW_FN KW_FOR KW_FROM KW_HASHMAP KW_IF KW_IMPL KW_IN KW_INSERT KW_IO KW_LET KW_LINKEDLIST KW_LOOP KW_MACRO KW_MATCH KW_MOD KW_MOVE KW_MUT KW_NEW KW_OVERRIDE KW_PRINT KW_PRIV KW_PUB KW_PUSH_BACK KW_READ_LINE KW_REF KW_REMOVE KW_RETURN KW_SELFTYPE KW_SELFVALUE KW_STATIC KW_STATICLIFETIME KW_STDIN KW_STRING KW_STRUCT KW_SUPER KW_TRAIT KW_TRUE KW_TRY KW_TYPE KW_TYPEOF KW_UNION KW_UNSAFE KW_UNSIZED KW_USE KW_VIRTUAL KW_WHERE KW_WHILE KW_YIELD LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MINUSEQUAL MODULUS MODULUSEQUAL NE ORE OREXE PLUS PLUSEQUAL QMARK QUOTE RBRACE RBRACKET RPAREN SEMI SIG_INT_128 SIG_INT_16 SIG_INT_32 SIG_INT_64 SIG_INT_8 TIMES TIMESEQUAL UNSIG_INT_128 UNSIG_INT_16 UNSIG_INT_32 UNSIG_INT_64 UNSIG_INT_8 VARIABLEmain_rule : father_rule\n    | father_rule main_rulefather_rule : print\n    | dvariable\n    | function\n    | variables\n    | control_str\n    | expression\n    | void\n    | data_str\n    | array\n    | linkedlist_methods\n    | hashmap_methods\n    | initialization\n    | input\n    | assignation\n    | declare_data_typeexpression : expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | expression DIVIDE expression\n    | LPAREN expression RPAREN\n    | numbernumber : INTEGER\n    | FLOAT\n    | VARIABLEdata_type : UNSIG_INT_8\n                | UNSIG_INT_16\n                | UNSIG_INT_32\n                | UNSIG_INT_64\n                | UNSIG_INT_128\n                | SIG_INT_8\n                | SIG_INT_16\n                | SIG_INT_32\n                | SIG_INT_64\n                | SIG_INT_128\n                | FLOAT_32\n                | FLOAT_64\n                | KW_BOOLEAN\n                | KW_STRINGassign_operators : EQUALS\n                        | TIMESEQUAL \n                        | DIVEQUAL\n                        | MODULUSEQUAL\n                        | PLUSEQUAL \n                        | MINUSEQUALdata : CADENA\n    | INTEGER\n    | CHAR\n    | FLOAT\n    | KW_FALSE\n    | KW_TRUE\n    | tuplecomparator :\n    | EQ\n    | NE\n    | GE\n    | LE\n    | GT\n    | LTlogic : LOR\n    | LANDlvariable : VARIABLE logic VARIABLEconditional : VARIABLE comparator data\n    | LPAREN lvariable RPAREN comparator datamdata : data\n    | data COMMA mdataprint : KW_PRINT LNOT LPAREN CADENA RPAREN SEMI\n    | KW_PRINT LNOT LPAREN CADENA COMMA VARIABLE RPAREN SEMI\n    | KW_PRINT LNOT LPAREN CADENA COMMA VARIABLE COLON COLON LT data_type GT LPAREN RPAREN RPAREN SEMIdvariable : KW_LET VARIABLE SEMIarray : KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET SEMI\n    | LBRACKET mdata RBRACKET\n    | LBRACKET data SEMI data RBRACKET\n    | KW_LET VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET mdata RBRACKET SEMI\n    | KW_LET VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET data SEMI data RBRACKET SEMIvariables : VARIABLE \n    | VARIABLE COMMA variableswhile : KW_WHILE VARIABLE comparator data LBRACE main_rule RBRACEtuple : LPAREN mdata RPARENinitialization : let_initialization SEMI \n    | const_initialization SEMI \n    | data_str SEMI\n    | input_init SEMIlet_initialization : KW_LET VARIABLE EQUALS data\n    | KW_LET VARIABLE COLON data_type EQUALS data\n    | KW_LET KW_MUT VARIABLE EQUALS data\n    | KW_LET KW_MUT VARIABLE COLON data_type EQUALS data\n    | KW_LET VARIABLE EQUALS expression_var\n    | KW_LET VARIABLE COLON data_type EQUALS expression_var\n    | KW_LET KW_MUT VARIABLE EQUALS expression_var\n    | KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_varconst_initialization : KW_CONST VARIABLE COLON data_type EQUALS dataarguments : void\n    | variablesfunction : KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACEcontrol_str : for_str\n    | for_str_tagged\n    | if\n    | else\n    | else_if\n    | whilefor_str : KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE\n    | KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACEfor_str_tagged : label COLON for_strrange : INTEGER DOT DOT INTEGER\n    | VARIABLE DOT DOT VARIABLElabel : QUOTE VARIABLEdata_str : array\n    | hashmap\n    | linkedlisthashmap : KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN\n    | KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN\n    | KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN\n    | KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPARENhashmap_methods : VARIABLE hashmap_insert\n    | VARIABLE hashmap_removehashmap_insert : DOT KW_INSERT LPAREN mdata RPAREN SEMIhashmap_remove : DOT KW_REMOVE LPAREN AND data RPAREN SEMIvoid : linkedlist : KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN\n                  | KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPARENlinkedlist : KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN\n                  | KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPARENlinkedlist_methods : VARIABLE linkedlist_push\n    | VARIABLE linkedlist_removelinkedlist_push : DOT KW_PUSH_BACK LPAREN data RPAREN SEMIlinkedlist_remove : DOT KW_REMOVE LPAREN INTEGER RPAREN SEMIif : KW_IF conditional LBRACE main_rule RBRACEelse : KW_ELSE LBRACE main_rule RBRACEelse_if : KW_ELSE KW_IF conditional LBRACE main_rule RBRACEfunction : KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACEexpression_var : expression\n                      | datareturn : main_rule\n              | KW_RETURN expression_var SEMI\n              | main_rule KW_RETURN expression_var SEMIinput_init : KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPARENinput : VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMIassignation : VARIABLE assign_operators numberdeclare_data_type : KW_LET VARIABLE COLON data_type SEMI'
    
_lr_action_items = {'KW_PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,181,182,198,208,209,211,213,217,219,240,247,253,254,256,257,271,273,275,276,279,290,294,305,309,310,313,327,328,330,345,350,352,354,355,356,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-83,-26,-125,-126,-116,-117,-81,-82,-84,18,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,18,-130,18,-141,-74,18,18,-129,18,-68,18,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,18,-114,-123,-113,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'KW_LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,181,182,198,208,209,211,213,217,219,240,247,253,254,256,257,271,273,275,276,279,281,282,290,294,302,303,305,309,310,313,327,328,330,345,350,352,354,355,356,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-83,-26,-125,-126,-116,-117,-81,-82,-84,21,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,21,-130,21,-141,-74,21,21,-129,21,-68,21,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,295,295,-96,-112,295,295,21,-114,-123,-113,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'KW_FN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,181,182,198,208,209,211,213,217,219,240,247,253,254,256,257,271,273,275,276,279,290,294,305,309,310,313,327,328,330,345,350,352,354,355,356,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-83,-26,-125,-126,-116,-117,-81,-82,-84,22,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,22,-130,22,-141,-74,22,22,-129,22,-68,22,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,22,-114,-123,-113,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,36,38,40,41,42,43,44,46,47,48,49,50,53,54,55,56,57,58,60,61,62,63,64,65,66,68,80,81,82,87,88,89,93,94,95,96,98,99,100,105,106,107,110,111,116,117,118,139,164,178,179,180,181,182,186,194,198,199,208,209,211,213,217,219,221,239,240,243,247,253,254,256,257,271,273,275,276,279,290,294,295,305,309,310,313,319,327,328,330,331,345,350,352,354,355,356,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,53,-26,67,69,-97,-98,-99,-100,-101,-102,-23,-110,-111,83,86,90,-24,-25,91,92,53,53,53,53,-83,-26,99,-125,-126,-116,-117,53,-41,-42,-43,-44,-45,-46,109,-81,-82,-84,127,20,86,-18,-19,-20,-21,-22,-77,-78,-140,-71,53,99,-73,172,-105,20,53,53,215,-61,-62,-130,20,220,53,-141,53,-74,20,20,-129,20,-68,252,53,20,272,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,308,20,-114,-123,-113,53,-115,-124,-132,53,-75,-139,-121,-70,-76,-122,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,32,38,41,42,46,47,48,49,50,51,53,55,56,57,58,69,79,80,81,82,86,88,89,90,93,94,95,96,98,99,100,101,102,103,104,105,106,107,111,112,113,117,118,119,120,121,122,123,124,125,130,134,136,137,139,164,177,181,182,190,194,198,199,208,209,211,213,214,217,218,219,232,239,240,247,253,254,256,257,258,259,260,261,271,273,275,276,279,286,287,288,290,294,305,307,309,310,311,313,319,320,327,328,330,331,336,338,345,347,350,352,354,355,356,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,19,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,79,87,-24,-25,19,19,19,19,-83,97,-26,-125,-126,-116,-117,110,79,-81,-82,-84,-54,19,87,-54,-18,-19,-20,-21,-22,-77,-78,133,134,135,136,-140,-71,139,-73,79,79,-105,19,79,-55,-56,-57,-58,-59,-60,79,79,79,79,194,139,-54,-130,19,79,194,-141,139,-74,19,19,-129,79,19,79,-68,79,139,19,-131,-127,-128,-118,-72,280,281,282,283,-104,-103,-79,-69,-119,301,302,303,-96,-112,19,321,-114,-123,79,-113,194,334,-115,-124,-132,194,79,346,-75,353,-139,-121,-70,-76,-122,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,107,108,111,117,118,181,182,198,208,209,211,213,217,219,240,247,253,254,256,257,271,273,275,276,279,281,282,290,294,299,302,303,305,309,310,313,322,323,327,328,330,345,350,352,354,355,356,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-83,-26,-125,-126,-116,-117,-81,-82,-84,32,-18,-19,-20,-21,-22,-77,-78,-140,-71,137,147,-73,-105,32,-130,32,-141,-74,32,32,-129,32,-68,32,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,32,32,-96,-112,311,32,32,32,-114,-123,-113,137,147,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'KW_FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,84,88,93,94,95,96,98,99,100,105,106,111,117,118,181,182,198,208,209,211,213,217,219,240,247,253,254,256,257,271,273,275,276,279,290,294,305,309,310,313,327,328,330,345,350,352,354,355,356,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-83,-26,-125,-126,-116,-117,-81,-82,-84,36,36,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,36,-130,36,-141,-74,36,36,-129,36,-68,36,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,36,-114,-123,-113,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'KW_IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,39,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,181,182,198,208,209,211,213,217,219,240,247,253,254,256,257,271,273,275,276,279,290,294,305,309,310,313,327,328,330,345,350,352,354,355,356,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,89,-24,-25,-83,-26,-125,-126,-116,-117,-81,-82,-84,38,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,38,-130,38,-141,-74,38,38,-129,38,-68,38,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,38,-114,-123,-113,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'KW_ELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,181,182,198,208,209,211,213,217,219,240,247,253,254,256,257,271,273,275,276,279,290,294,305,309,310,313,327,328,330,345,350,352,354,355,356,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-83,-26,-125,-126,-116,-117,-81,-82,-84,39,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,39,-130,39,-141,-74,39,39,-129,39,-68,39,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,39,-114,-123,-113,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'KW_WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,181,182,198,208,209,211,213,217,219,240,247,253,254,256,257,271,273,275,276,279,290,294,305,309,310,313,327,328,330,345,350,352,354,355,356,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-83,-26,-125,-126,-116,-117,-81,-82,-84,40,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,40,-130,40,-141,-74,40,40,-129,40,-68,40,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,40,-114,-123,-113,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,32,41,42,46,47,48,49,50,53,55,56,57,58,60,61,62,63,64,65,66,79,80,81,82,86,88,90,93,94,95,96,98,99,100,105,106,107,111,112,113,116,117,118,119,120,121,122,123,124,125,130,134,135,136,137,139,164,177,181,182,190,194,198,199,208,209,211,213,214,217,218,219,232,239,240,245,247,253,254,256,257,271,273,275,276,279,290,294,305,309,310,311,313,319,327,328,330,331,336,345,350,352,354,355,356,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,41,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,73,-24,-25,41,41,41,41,-83,-26,-125,-126,-116,-117,41,-41,-42,-43,-44,-45,-46,73,-81,-82,-84,-54,41,-54,-18,-19,-20,-21,-22,-77,-78,-140,-71,144,-73,73,73,174,-105,41,73,-55,-56,-57,-58,-59,-60,73,73,189,73,73,144,144,-54,-130,41,73,228,-141,144,-74,41,41,-129,73,41,73,-68,73,144,41,274,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,41,-114,-123,73,-113,144,-115,-124,-132,144,73,-75,-139,-121,-70,-76,-122,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,32,41,42,46,47,48,49,50,53,55,56,57,58,60,61,62,63,64,65,66,79,80,81,82,86,88,90,93,94,95,96,98,99,100,105,106,107,111,112,113,117,118,119,120,121,122,123,124,125,130,134,136,137,139,164,177,181,182,190,194,198,199,208,209,211,213,214,217,218,219,232,239,240,247,253,254,256,257,271,273,275,276,279,290,294,305,309,310,311,313,319,327,328,330,331,336,345,350,352,354,355,356,],[42,42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,42,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,75,-24,-25,42,42,42,42,-83,-26,-125,-126,-116,-117,42,-41,-42,-43,-44,-45,-46,75,-81,-82,-84,-54,42,-54,-18,-19,-20,-21,-22,-77,-78,-140,-71,145,-73,75,75,-105,42,75,-55,-56,-57,-58,-59,-60,75,75,75,75,145,145,-54,-130,42,75,229,-141,145,-74,42,42,-129,75,42,75,-68,75,145,42,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,42,-114,-123,75,-113,145,-115,-124,-132,145,75,-75,-139,-121,-70,-76,-122,]),'KW_CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,181,182,198,208,209,211,213,217,219,240,247,253,254,256,257,271,273,275,276,279,290,294,305,309,310,313,327,328,330,345,350,352,354,355,356,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-83,-26,-125,-126,-116,-117,-81,-82,-84,43,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,43,-130,43,-141,-74,43,43,-129,43,-68,43,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,43,-114,-123,-113,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'QUOTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,181,182,198,208,209,211,213,217,219,240,247,253,254,256,257,271,273,275,276,279,290,294,305,309,310,313,327,328,330,345,350,352,354,355,356,],[44,44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-83,-26,-125,-126,-116,-117,-81,-82,-84,44,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,44,-130,44,-141,-74,44,44,-129,44,-68,44,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,44,-114,-123,-113,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,45,50,53,55,56,57,58,80,81,82,93,94,95,96,98,99,100,105,106,111,117,181,198,208,213,219,247,253,254,256,257,271,273,275,276,279,290,294,309,310,313,327,328,330,345,350,352,354,355,356,],[-120,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-2,-83,-26,-125,-126,-116,-117,-81,-82,-84,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,-130,-141,-74,-129,-68,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,-114,-123,-113,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,45,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,128,175,181,182,198,208,209,211,213,216,217,219,240,242,244,247,248,253,254,256,257,269,271,273,275,276,279,290,294,305,309,310,313,317,318,327,328,330,341,345,348,350,352,354,355,356,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-2,-83,-26,-125,-126,-116,-117,-81,-82,-84,-120,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,-120,181,213,-130,-120,-141,-74,-120,-120,-129,247,-120,-68,-120,271,273,-131,275,-127,-128,-118,-72,290,-104,-103,-79,-69,-119,-96,-112,-120,-114,-123,-113,330,-135,-115,-124,-132,-136,-75,-137,-139,-121,-70,-76,-122,]),'KW_RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,45,50,53,55,56,57,58,80,81,82,93,94,95,96,98,99,100,105,106,111,117,181,198,208,213,219,247,253,254,256,257,271,273,275,276,279,290,294,305,309,310,313,318,327,328,330,345,350,352,354,355,356,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-97,-98,-99,-100,-101,-102,-23,-110,-111,-24,-25,-2,-83,-26,-125,-126,-116,-117,-81,-82,-84,-18,-19,-20,-21,-22,-77,-78,-140,-71,-73,-105,-130,-141,-74,-129,-68,-131,-127,-128,-118,-72,-104,-103,-79,-69,-119,-96,-112,319,-114,-123,-113,331,-115,-124,-132,-75,-139,-121,-70,-76,-122,]),'PLUS':([8,20,29,41,42,52,53,93,94,95,96,98,144,145,146,228,229,],[46,-26,-23,-24,-25,46,-26,46,46,46,46,-22,-24,-25,46,-24,-25,]),'MINUS':([8,20,29,41,42,52,53,93,94,95,96,98,144,145,146,207,228,229,],[47,-26,-23,-24,-25,47,-26,47,47,47,47,-22,-24,-25,47,241,-24,-25,]),'TIMES':([8,20,29,41,42,52,53,93,94,95,96,98,144,145,146,228,229,],[48,-26,-23,-24,-25,48,-26,48,48,48,48,-22,-24,-25,48,-24,-25,]),'DIVIDE':([8,20,29,41,42,52,53,93,94,95,96,98,144,145,146,228,229,],[49,-26,-23,-24,-25,49,-26,49,49,49,49,-22,-24,-25,49,-24,-25,]),'SEMI':([10,11,29,30,31,33,34,35,41,42,53,67,71,72,73,74,75,76,77,78,93,94,95,96,98,111,141,142,144,145,146,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,171,185,197,203,204,208,222,223,225,226,233,234,249,250,255,257,267,268,294,298,309,310,313,324,327,328,332,333,337,340,343,345,349,351,352,355,356,],[50,-109,-23,-110,-111,80,81,82,-24,-25,-26,106,112,-47,-48,-49,-50,-51,-52,-53,-18,-19,-20,-21,-22,-73,-85,-89,-24,-25,-133,198,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-80,219,232,-87,-91,-74,253,254,256,257,-86,-90,-93,276,279,-72,-88,-92,-112,-138,-114,-123,-113,336,-115,-124,341,-134,345,348,350,-75,354,355,-121,-76,-122,]),'LNOT':([18,],[51,]),'COMMA':([20,71,72,73,74,75,76,77,78,99,115,132,144,145,171,228,229,324,],[54,113,-47,-48,-49,-50,-51,-52,-53,54,113,186,-48,-50,-80,-48,-50,113,]),'DOT':([20,172,174,210,212,278,],[59,210,212,243,245,293,]),'EQUALS':([20,67,109,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,184,206,263,284,289,308,],[61,107,164,199,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,218,239,285,299,304,322,]),'TIMESEQUAL':([20,],[62,]),'DIVEQUAL':([20,],[63,]),'MODULUSEQUAL':([20,],[64,]),'PLUSEQUAL':([20,],[65,]),'MINUSEQUAL':([20,],[66,]),'KW_MUT':([21,187,],[68,221,]),'RPAREN':([29,41,42,52,53,72,73,74,75,76,77,78,93,94,95,96,98,99,100,110,111,114,115,126,132,144,145,166,167,168,170,171,188,189,191,208,215,220,224,228,229,252,257,280,283,296,297,301,314,315,334,335,342,345,346,353,355,],[-23,-24,-25,98,-26,-47,-48,-49,-50,-51,-52,-53,-18,-19,-20,-21,-22,-77,-78,-120,-73,171,-66,177,185,-24,-25,207,-94,-95,-67,-80,222,223,225,-74,-63,250,255,-24,-25,278,-72,294,298,309,310,313,327,328,342,343,349,-75,352,356,-76,]),'CADENA':([32,79,86,90,97,107,112,113,119,120,121,122,123,124,125,130,134,136,137,139,164,177,190,194,199,214,218,232,239,311,319,321,331,336,],[72,72,-54,-54,132,72,72,72,72,-55,-56,-57,-58,-59,-60,72,72,72,72,72,72,-54,72,72,72,72,72,72,72,72,72,335,72,72,]),'CHAR':([32,79,86,90,107,112,113,119,120,121,122,123,124,125,130,134,136,137,139,164,177,190,194,199,214,218,232,239,311,319,331,336,],[74,74,-54,-54,74,74,74,74,-55,-56,-57,-58,-59,-60,74,74,74,74,74,74,-54,74,74,74,74,74,74,74,74,74,74,74,]),'KW_FALSE':([32,79,86,90,107,112,113,119,120,121,122,123,124,125,130,134,136,137,139,164,177,190,194,199,214,218,232,239,311,319,331,336,],[76,76,-54,-54,76,76,76,76,-55,-56,-57,-58,-59,-60,76,76,76,76,76,76,-54,76,76,76,76,76,76,76,76,76,76,76,]),'KW_TRUE':([32,79,86,90,107,112,113,119,120,121,122,123,124,125,130,134,136,137,139,164,177,190,194,199,214,218,232,239,311,319,331,336,],[77,77,-54,-54,77,77,77,77,-55,-56,-57,-58,-59,-60,77,77,77,77,77,77,-54,77,77,77,77,77,77,77,77,77,77,77,]),'COLON':([37,67,91,92,109,138,140,143,193,195,196,201,202,220,236,237,251,300,308,312,316,329,],[84,108,131,-108,165,193,195,196,227,230,231,236,237,251,264,265,277,312,323,326,329,339,]),'LBRACE':([39,72,73,74,75,76,77,78,85,129,150,151,152,153,154,155,156,157,158,159,160,161,162,163,171,172,173,176,183,207,246,272,274,291,],[88,-47,-48,-49,-50,-51,-52,-53,118,182,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-80,209,211,-64,217,240,-65,-107,-106,305,]),'KW_READ_LINE':([59,],[101,]),'KW_PUSH_BACK':([59,],[102,]),'KW_REMOVE':([59,],[103,]),'KW_INSERT':([59,],[104,]),'RBRACKET':([70,71,72,73,74,75,76,77,78,115,169,170,171,192,262,324,325,344,],[111,-66,-47,-48,-49,-50,-51,-52,-53,-66,208,-67,-80,226,284,-66,337,351,]),'KW_IN':([83,],[116,]),'EQ':([86,90,177,],[120,120,120,]),'NE':([86,90,177,],[121,121,121,]),'GE':([86,90,177,],[122,122,122,]),'LE':([86,90,177,],[123,123,123,]),'GT':([86,90,150,151,152,153,154,155,156,157,158,159,160,161,162,163,177,235,241,266,306,],[124,124,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,124,263,270,289,320,]),'LT':([86,90,149,177,205,277,],[125,125,200,125,238,292,]),'KW_HASHMAP':([107,164,],[138,201,]),'KW_LINKEDLIST':([107,108,164,165,285,304,],[140,149,202,205,300,316,]),'KW_IO':([107,],[143,]),'UNSIG_INT_8':([108,131,147,165,200,238,270,292,],[150,150,150,150,150,150,150,150,]),'UNSIG_INT_16':([108,131,147,165,200,238,270,292,],[151,151,151,151,151,151,151,151,]),'UNSIG_INT_32':([108,131,147,165,200,238,270,292,],[152,152,152,152,152,152,152,152,]),'UNSIG_INT_64':([108,131,147,165,200,238,270,292,],[153,153,153,153,153,153,153,153,]),'UNSIG_INT_128':([108,131,147,165,200,238,270,292,],[154,154,154,154,154,154,154,154,]),'SIG_INT_8':([108,131,147,165,200,238,270,292,],[155,155,155,155,155,155,155,155,]),'SIG_INT_16':([108,131,147,165,200,238,270,292,],[156,156,156,156,156,156,156,156,]),'SIG_INT_32':([108,131,147,165,200,238,270,292,],[157,157,157,157,157,157,157,157,]),'SIG_INT_64':([108,131,147,165,200,238,270,292,],[158,158,158,158,158,158,158,158,]),'SIG_INT_128':([108,131,147,165,200,238,270,292,],[159,159,159,159,159,159,159,159,]),'FLOAT_32':([108,131,147,165,200,238,270,292,],[160,160,160,160,160,160,160,160,]),'FLOAT_64':([108,131,147,165,200,238,270,292,],[161,161,161,161,161,161,161,161,]),'KW_BOOLEAN':([108,131,147,165,200,238,270,292,],[162,162,162,162,162,162,162,162,]),'KW_STRING':([108,131,147,165,200,238,270,292,],[163,163,163,163,163,163,163,163,]),'LOR':([127,],[179,]),'LAND':([127,],[180,]),'AND':([133,135,],[187,190,]),'KW_NEW':([227,264,326,339,],[258,286,338,347,]),'KW_FROM':([227,230,264,265,],[259,260,287,288,]),'KW_STDIN':([231,],[261,]),'KW_EXPECT':([293,],[307,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main_rule':([0,2,88,118,182,209,211,217,240,305,],[1,45,128,175,216,242,244,248,269,318,]),'father_rule':([0,2,88,118,182,209,211,217,240,305,],[2,2,2,2,2,2,2,2,2,2,]),'print':([0,2,88,118,182,209,211,217,240,305,],[3,3,3,3,3,3,3,3,3,3,]),'dvariable':([0,2,88,118,182,209,211,217,240,305,],[4,4,4,4,4,4,4,4,4,4,]),'function':([0,2,88,118,182,209,211,217,240,305,],[5,5,5,5,5,5,5,5,5,5,]),'variables':([0,2,54,88,110,118,182,209,211,217,240,305,],[6,6,100,6,168,6,6,6,6,6,6,6,]),'control_str':([0,2,88,118,182,209,211,217,240,305,],[7,7,7,7,7,7,7,7,7,7,]),'expression':([0,2,19,46,47,48,49,88,107,118,139,164,182,194,199,209,211,217,239,240,305,319,331,],[8,8,52,93,94,95,96,8,146,8,52,146,8,52,146,8,8,8,146,8,8,146,146,]),'void':([0,2,88,110,118,182,209,211,217,240,305,],[9,9,9,167,9,9,9,9,9,9,9,]),'data_str':([0,2,88,118,182,209,211,217,240,305,],[10,10,10,10,10,10,10,10,10,10,]),'array':([0,2,88,118,182,209,211,217,240,281,282,302,303,305,],[11,11,11,11,11,11,11,11,11,296,297,314,315,11,]),'linkedlist_methods':([0,2,88,118,182,209,211,217,240,305,],[12,12,12,12,12,12,12,12,12,12,]),'hashmap_methods':([0,2,88,118,182,209,211,217,240,305,],[13,13,13,13,13,13,13,13,13,13,]),'initialization':([0,2,88,118,182,209,211,217,240,305,],[14,14,14,14,14,14,14,14,14,14,]),'input':([0,2,88,118,182,209,211,217,240,305,],[15,15,15,15,15,15,15,15,15,15,]),'assignation':([0,2,88,118,182,209,211,217,240,305,],[16,16,16,16,16,16,16,16,16,16,]),'declare_data_type':([0,2,88,118,182,209,211,217,240,305,],[17,17,17,17,17,17,17,17,17,17,]),'for_str':([0,2,84,88,118,182,209,211,217,240,305,],[23,23,117,23,23,23,23,23,23,23,23,]),'for_str_tagged':([0,2,88,118,182,209,211,217,240,305,],[24,24,24,24,24,24,24,24,24,24,]),'if':([0,2,88,118,182,209,211,217,240,305,],[25,25,25,25,25,25,25,25,25,25,]),'else':([0,2,88,118,182,209,211,217,240,305,],[26,26,26,26,26,26,26,26,26,26,]),'else_if':([0,2,88,118,182,209,211,217,240,305,],[27,27,27,27,27,27,27,27,27,27,]),'while':([0,2,88,118,182,209,211,217,240,305,],[28,28,28,28,28,28,28,28,28,28,]),'number':([0,2,19,46,47,48,49,60,88,107,118,139,164,182,194,199,209,211,217,239,240,305,319,331,],[29,29,29,29,29,29,29,105,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'hashmap':([0,2,88,118,182,209,211,217,240,305,],[30,30,30,30,30,30,30,30,30,30,]),'linkedlist':([0,2,88,118,182,209,211,217,240,305,],[31,31,31,31,31,31,31,31,31,31,]),'let_initialization':([0,2,88,118,182,209,211,217,240,305,],[33,33,33,33,33,33,33,33,33,33,]),'const_initialization':([0,2,88,118,182,209,211,217,240,305,],[34,34,34,34,34,34,34,34,34,34,]),'input_init':([0,2,88,118,182,209,211,217,240,305,],[35,35,35,35,35,35,35,35,35,35,]),'label':([0,2,88,118,182,209,211,217,240,305,],[37,37,37,37,37,37,37,37,37,37,]),'linkedlist_push':([20,],[55,]),'linkedlist_remove':([20,],[56,]),'hashmap_insert':([20,],[57,]),'hashmap_remove':([20,],[58,]),'assign_operators':([20,],[60,]),'mdata':([32,79,113,136,137,139,194,311,],[70,114,170,191,192,114,114,325,]),'data':([32,79,107,112,113,119,130,134,136,137,139,164,190,194,199,214,218,232,239,311,319,331,336,],[71,115,141,169,115,176,183,188,115,115,115,203,224,115,233,246,249,262,267,324,333,333,344,]),'tuple':([32,79,107,112,113,119,130,134,136,137,139,164,190,194,199,214,218,232,239,311,319,331,336,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'conditional':([38,89,],[85,129,]),'comparator':([86,90,177,],[119,130,214,]),'lvariable':([87,],[126,]),'expression_var':([107,164,199,239,319,331,],[142,204,234,268,332,340,]),'data_type':([108,131,147,165,200,238,270,292,],[148,184,197,206,235,266,291,306,]),'arguments':([110,],[166,]),'range':([116,],[173,]),'logic':([127,],[178,]),'return':([305,],[317,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main_rule","S'",1,None,None,None),
  ('main_rule -> father_rule','main_rule',1,'p_main_rule','pyacc.py',11),
  ('main_rule -> father_rule main_rule','main_rule',2,'p_main_rule','pyacc.py',12),
  ('father_rule -> print','father_rule',1,'p_father_rule','pyacc.py',17),
  ('father_rule -> dvariable','father_rule',1,'p_father_rule','pyacc.py',18),
  ('father_rule -> function','father_rule',1,'p_father_rule','pyacc.py',19),
  ('father_rule -> variables','father_rule',1,'p_father_rule','pyacc.py',20),
  ('father_rule -> control_str','father_rule',1,'p_father_rule','pyacc.py',21),
  ('father_rule -> expression','father_rule',1,'p_father_rule','pyacc.py',22),
  ('father_rule -> void','father_rule',1,'p_father_rule','pyacc.py',23),
  ('father_rule -> data_str','father_rule',1,'p_father_rule','pyacc.py',24),
  ('father_rule -> array','father_rule',1,'p_father_rule','pyacc.py',25),
  ('father_rule -> linkedlist_methods','father_rule',1,'p_father_rule','pyacc.py',26),
  ('father_rule -> hashmap_methods','father_rule',1,'p_father_rule','pyacc.py',27),
  ('father_rule -> initialization','father_rule',1,'p_father_rule','pyacc.py',28),
  ('father_rule -> input','father_rule',1,'p_father_rule','pyacc.py',29),
  ('father_rule -> assignation','father_rule',1,'p_father_rule','pyacc.py',30),
  ('father_rule -> declare_data_type','father_rule',1,'p_father_rule','pyacc.py',31),
  ('expression -> expression PLUS expression','expression',3,'p_expression','pyacc.py',37),
  ('expression -> expression MINUS expression','expression',3,'p_expression','pyacc.py',38),
  ('expression -> expression TIMES expression','expression',3,'p_expression','pyacc.py',39),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','pyacc.py',40),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','pyacc.py',41),
  ('expression -> number','expression',1,'p_expression','pyacc.py',42),
  ('number -> INTEGER','number',1,'p_number','pyacc.py',47),
  ('number -> FLOAT','number',1,'p_number','pyacc.py',48),
  ('number -> VARIABLE','number',1,'p_number','pyacc.py',49),
  ('data_type -> UNSIG_INT_8','data_type',1,'p_data_type','pyacc.py',53),
  ('data_type -> UNSIG_INT_16','data_type',1,'p_data_type','pyacc.py',54),
  ('data_type -> UNSIG_INT_32','data_type',1,'p_data_type','pyacc.py',55),
  ('data_type -> UNSIG_INT_64','data_type',1,'p_data_type','pyacc.py',56),
  ('data_type -> UNSIG_INT_128','data_type',1,'p_data_type','pyacc.py',57),
  ('data_type -> SIG_INT_8','data_type',1,'p_data_type','pyacc.py',58),
  ('data_type -> SIG_INT_16','data_type',1,'p_data_type','pyacc.py',59),
  ('data_type -> SIG_INT_32','data_type',1,'p_data_type','pyacc.py',60),
  ('data_type -> SIG_INT_64','data_type',1,'p_data_type','pyacc.py',61),
  ('data_type -> SIG_INT_128','data_type',1,'p_data_type','pyacc.py',62),
  ('data_type -> FLOAT_32','data_type',1,'p_data_type','pyacc.py',63),
  ('data_type -> FLOAT_64','data_type',1,'p_data_type','pyacc.py',64),
  ('data_type -> KW_BOOLEAN','data_type',1,'p_data_type','pyacc.py',65),
  ('data_type -> KW_STRING','data_type',1,'p_data_type','pyacc.py',66),
  ('assign_operators -> EQUALS','assign_operators',1,'p_assign_operators','pyacc.py',70),
  ('assign_operators -> TIMESEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',71),
  ('assign_operators -> DIVEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',72),
  ('assign_operators -> MODULUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',73),
  ('assign_operators -> PLUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',74),
  ('assign_operators -> MINUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',75),
  ('data -> CADENA','data',1,'p_data','pyacc.py',79),
  ('data -> INTEGER','data',1,'p_data','pyacc.py',80),
  ('data -> CHAR','data',1,'p_data','pyacc.py',81),
  ('data -> FLOAT','data',1,'p_data','pyacc.py',82),
  ('data -> KW_FALSE','data',1,'p_data','pyacc.py',83),
  ('data -> KW_TRUE','data',1,'p_data','pyacc.py',84),
  ('data -> tuple','data',1,'p_data','pyacc.py',85),
  ('comparator -> <empty>','comparator',0,'p_comparator','pyacc.py',88),
  ('comparator -> EQ','comparator',1,'p_comparator','pyacc.py',89),
  ('comparator -> NE','comparator',1,'p_comparator','pyacc.py',90),
  ('comparator -> GE','comparator',1,'p_comparator','pyacc.py',91),
  ('comparator -> LE','comparator',1,'p_comparator','pyacc.py',92),
  ('comparator -> GT','comparator',1,'p_comparator','pyacc.py',93),
  ('comparator -> LT','comparator',1,'p_comparator','pyacc.py',94),
  ('logic -> LOR','logic',1,'p_logic','pyacc.py',97),
  ('logic -> LAND','logic',1,'p_logic','pyacc.py',98),
  ('lvariable -> VARIABLE logic VARIABLE','lvariable',3,'p_logic_variable','pyacc.py',101),
  ('conditional -> VARIABLE comparator data','conditional',3,'p_conditional','pyacc.py',104),
  ('conditional -> LPAREN lvariable RPAREN comparator data','conditional',5,'p_conditional','pyacc.py',105),
  ('mdata -> data','mdata',1,'p_mdata','pyacc.py',108),
  ('mdata -> data COMMA mdata','mdata',3,'p_mdata','pyacc.py',109),
  ('print -> KW_PRINT LNOT LPAREN CADENA RPAREN SEMI','print',6,'p_print','pyacc.py',112),
  ('print -> KW_PRINT LNOT LPAREN CADENA COMMA VARIABLE RPAREN SEMI','print',8,'p_print','pyacc.py',113),
  ('print -> KW_PRINT LNOT LPAREN CADENA COMMA VARIABLE COLON COLON LT data_type GT LPAREN RPAREN RPAREN SEMI','print',15,'p_print','pyacc.py',114),
  ('dvariable -> KW_LET VARIABLE SEMI','dvariable',3,'p_declare_variable','pyacc.py',117),
  ('array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET SEMI','array',7,'p_array','pyacc.py',120),
  ('array -> LBRACKET mdata RBRACKET','array',3,'p_array','pyacc.py',121),
  ('array -> LBRACKET data SEMI data RBRACKET','array',5,'p_array','pyacc.py',122),
  ('array -> KW_LET VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET mdata RBRACKET SEMI','array',13,'p_array','pyacc.py',123),
  ('array -> KW_LET VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET data SEMI data RBRACKET SEMI','array',15,'p_array','pyacc.py',124),
  ('variables -> VARIABLE','variables',1,'p_variables','pyacc.py',127),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','pyacc.py',128),
  ('while -> KW_WHILE VARIABLE comparator data LBRACE main_rule RBRACE','while',7,'p_while','pyacc.py',131),
  ('tuple -> LPAREN mdata RPAREN','tuple',3,'p_tuple','pyacc.py',138),
  ('initialization -> let_initialization SEMI','initialization',2,'p_initialization','pyacc.py',142),
  ('initialization -> const_initialization SEMI','initialization',2,'p_initialization','pyacc.py',143),
  ('initialization -> data_str SEMI','initialization',2,'p_initialization','pyacc.py',144),
  ('initialization -> input_init SEMI','initialization',2,'p_initialization','pyacc.py',145),
  ('let_initialization -> KW_LET VARIABLE EQUALS data','let_initialization',4,'p_let_initialization','pyacc.py',149),
  ('let_initialization -> KW_LET VARIABLE COLON data_type EQUALS data','let_initialization',6,'p_let_initialization','pyacc.py',150),
  ('let_initialization -> KW_LET KW_MUT VARIABLE EQUALS data','let_initialization',5,'p_let_initialization','pyacc.py',151),
  ('let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS data','let_initialization',7,'p_let_initialization','pyacc.py',152),
  ('let_initialization -> KW_LET VARIABLE EQUALS expression_var','let_initialization',4,'p_let_initialization','pyacc.py',153),
  ('let_initialization -> KW_LET VARIABLE COLON data_type EQUALS expression_var','let_initialization',6,'p_let_initialization','pyacc.py',154),
  ('let_initialization -> KW_LET KW_MUT VARIABLE EQUALS expression_var','let_initialization',5,'p_let_initialization','pyacc.py',155),
  ('let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var','let_initialization',7,'p_let_initialization','pyacc.py',156),
  ('const_initialization -> KW_CONST VARIABLE COLON data_type EQUALS data','const_initialization',6,'p_const_initialization','pyacc.py',160),
  ('arguments -> void','arguments',1,'p_arguments','pyacc.py',164),
  ('arguments -> variables','arguments',1,'p_arguments','pyacc.py',165),
  ('function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE','function',8,'p_function','pyacc.py',169),
  ('control_str -> for_str','control_str',1,'p_control_str','pyacc.py',173),
  ('control_str -> for_str_tagged','control_str',1,'p_control_str','pyacc.py',174),
  ('control_str -> if','control_str',1,'p_control_str','pyacc.py',175),
  ('control_str -> else','control_str',1,'p_control_str','pyacc.py',176),
  ('control_str -> else_if','control_str',1,'p_control_str','pyacc.py',177),
  ('control_str -> while','control_str',1,'p_control_str','pyacc.py',178),
  ('for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE','for_str',7,'p_for_str','pyacc.py',182),
  ('for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE','for_str',7,'p_for_str','pyacc.py',183),
  ('for_str_tagged -> label COLON for_str','for_str_tagged',3,'p_for_str_tagged','pyacc.py',187),
  ('range -> INTEGER DOT DOT INTEGER','range',4,'p_range','pyacc.py',191),
  ('range -> VARIABLE DOT DOT VARIABLE','range',4,'p_range','pyacc.py',192),
  ('label -> QUOTE VARIABLE','label',2,'p_label','pyacc.py',196),
  ('data_str -> array','data_str',1,'p_data_str','pyacc.py',200),
  ('data_str -> hashmap','data_str',1,'p_data_str','pyacc.py',201),
  ('data_str -> linkedlist','data_str',1,'p_data_str','pyacc.py',202),
  ('hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN','hashmap',9,'p_hashmap','pyacc.py',206),
  ('hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN','hashmap',10,'p_hashmap','pyacc.py',207),
  ('hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN','hashmap',10,'p_hashmap','pyacc.py',208),
  ('hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN','hashmap',11,'p_hashmap','pyacc.py',209),
  ('hashmap_methods -> VARIABLE hashmap_insert','hashmap_methods',2,'p_hashmap_methods','pyacc.py',213),
  ('hashmap_methods -> VARIABLE hashmap_remove','hashmap_methods',2,'p_hashmap_methods','pyacc.py',214),
  ('hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI','hashmap_insert',6,'p_hashmap_insert','pyacc.py',218),
  ('hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI','hashmap_remove',7,'p_hashmap_remove','pyacc.py',222),
  ('void -> <empty>','void',0,'p_void','pyacc.py',226),
  ('linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN','linkedlist',14,'p_linkedlist_empty','pyacc.py',234),
  ('linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN','linkedlist',15,'p_linkedlist_empty','pyacc.py',235),
  ('linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN','linkedlist',10,'p_linkedlist_array','pyacc.py',238),
  ('linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN','linkedlist',11,'p_linkedlist_array','pyacc.py',239),
  ('linkedlist_methods -> VARIABLE linkedlist_push','linkedlist_methods',2,'p_linkedlist_methods','pyacc.py',242),
  ('linkedlist_methods -> VARIABLE linkedlist_remove','linkedlist_methods',2,'p_linkedlist_methods','pyacc.py',243),
  ('linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI','linkedlist_push',6,'p_linkedlist_push','pyacc.py',246),
  ('linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI','linkedlist_remove',6,'p_linkedlist_remove','pyacc.py',249),
  ('if -> KW_IF conditional LBRACE main_rule RBRACE','if',5,'p_if','pyacc.py',254),
  ('else -> KW_ELSE LBRACE main_rule RBRACE','else',4,'p_else','pyacc.py',257),
  ('else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE','else_if',6,'p_else_if','pyacc.py',260),
  ('function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE','function',11,'p_function_return','pyacc.py',265),
  ('expression_var -> expression','expression_var',1,'p_expression_var','pyacc.py',268),
  ('expression_var -> data','expression_var',1,'p_expression_var','pyacc.py',269),
  ('return -> main_rule','return',1,'p_return_statement','pyacc.py',272),
  ('return -> KW_RETURN expression_var SEMI','return',3,'p_return_statement','pyacc.py',273),
  ('return -> main_rule KW_RETURN expression_var SEMI','return',4,'p_return_statement','pyacc.py',274),
  ('input_init -> KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN','input_init',9,'p_input_init','pyacc.py',279),
  ('input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI','input',14,'p_input','pyacc.py',282),
  ('assignation -> VARIABLE assign_operators number','assignation',3,'p_assignation','pyacc.py',287),
  ('declare_data_type -> KW_LET VARIABLE COLON data_type SEMI','declare_data_type',5,'p_declare_datat_type','pyacc.py',292),
]
