
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDE CADENA CHAR COLON COMMA COMMENT DIVEQUAL DIVIDE DOT EQ EQUALS FLOAT FLOAT_32 FLOAT_64 GE GT HASH INTEGER KW_ABSTRACT KW_AS KW_ASYNC KW_AWAIT KW_BECOME KW_BOOLEAN KW_BOX KW_BREAK KW_CHARACTER KW_CONST KW_CONTINUE KW_CRATE KW_DO KW_DYN KW_ELSE KW_ENUM KW_EXPECT KW_EXTERN KW_FALSE KW_FINAL KW_FN KW_FOR KW_FROM KW_HASHMAP KW_IF KW_IMPL KW_IN KW_INSERT KW_IO KW_LET KW_LINKEDLIST KW_LOOP KW_MACRO KW_MATCH KW_MOD KW_MOVE KW_MUT KW_NEW KW_OVERRIDE KW_PRINT KW_PRIV KW_PUB KW_PUSH_BACK KW_READ_LINE KW_REF KW_REMOVE KW_RETURN KW_SELFTYPE KW_SELFVALUE KW_STATIC KW_STATICLIFETIME KW_STDIN KW_STRING KW_STRUCT KW_SUPER KW_TRAIT KW_TRUE KW_TRY KW_TYPE KW_TYPEOF KW_UNION KW_UNSAFE KW_UNSIZED KW_USE KW_VIRTUAL KW_WHERE KW_WHILE KW_YIELD LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MINUSEQUAL MODULUS MODULUSEQUAL NE ORE OREXE PLUS PLUSEQUAL QMARK QUOTE RBRACE RBRACKET RPAREN SEMI SIG_INT_128 SIG_INT_16 SIG_INT_32 SIG_INT_64 SIG_INT_8 TIMES TIMESEQUAL UNSIG_INT_128 UNSIG_INT_16 UNSIG_INT_32 UNSIG_INT_64 UNSIG_INT_8 VARIABLEmain_rule : father_rule\n    | father_rule main_rulefather_rule : print\n    | dvariable\n    | function\n    | variables\n    | control_str\n    | expression\n    | void\n    | data_str\n    | array\n    | linkedlist_methods\n    | hashmap_methods\n    | initialization\n    | input\n    | assignation\n    | declare_data_typeexpression : expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | LPAREN expression RPAREN\n    | number\n    | divisionnumber : INTEGER\n    | FLOAT\n    | VARIABLEdata_type : UNSIG_INT_8\n                | UNSIG_INT_16\n                | UNSIG_INT_32\n                | UNSIG_INT_64\n                | UNSIG_INT_128\n                | SIG_INT_8\n                | SIG_INT_16\n                | SIG_INT_32\n                | SIG_INT_64\n                | SIG_INT_128\n                | FLOAT_32\n                | FLOAT_64\n                | KW_BOOLEAN\n                | KW_STRINGassign_operators : EQUALS\n                        | TIMESEQUAL \n                        | DIVEQUAL\n                        | MODULUSEQUAL\n                        | PLUSEQUAL \n                        | MINUSEQUALdivision : INTEGER DIVIDE INTEGER\n    | FLOAT DIVIDE FLOATdata : CADENA\n    | INTEGER\n    | CHAR\n    | FLOAT\n    | KW_FALSE\n    | KW_TRUE\n    | tuplecomparator :\n    | EQ\n    | NE\n    | GE\n    | LE\n    | GT\n    | LTlogic : LOR\n    | LANDlvariable : VARIABLE logic VARIABLEconditional : VARIABLE comparator data\n    | LPAREN lvariable RPAREN comparator datamdata : data\n    | data COMMA mdataprint : KW_PRINT LNOT LPAREN CADENA RPAREN SEMI\n    | KW_PRINT LNOT LPAREN CADENA COMMA VARIABLE RPAREN SEMIdvariable : KW_LET VARIABLE SEMIarray : KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET SEMI\n    | LBRACKET mdata RBRACKET\n    | LBRACKET data SEMI data RBRACKET\n    | KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET mdata RBRACKET SEMI\n    | KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET data SEMI data RBRACKET SEMIvariables : VARIABLE \n    | VARIABLE COMMA variableswhile : KW_WHILE conditional LBRACE main_rule RBRACEtuple : LPAREN mdata RPARENinitialization : let_initialization SEMI \n    | const_initialization SEMI \n    | data_str SEMI\n    | input_init SEMIlet_initialization : KW_LET VARIABLE EQUALS data\n    | KW_LET VARIABLE COLON data_type EQUALS data\n    | KW_LET KW_MUT VARIABLE EQUALS data\n    | KW_LET KW_MUT VARIABLE COLON data_type EQUALS data\n    | KW_LET VARIABLE EQUALS expression_var\n    | KW_LET VARIABLE COLON data_type EQUALS expression_var\n    | KW_LET KW_MUT VARIABLE EQUALS expression_var\n    | KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_varconst_initialization : KW_CONST VARIABLE COLON data_type EQUALS dataarguments : void\n    | variablesfunction : KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACEcontrol_str : for_str\n    | for_str_tagged\n    | if\n    | else\n    | else_if\n    | whilefor_str : KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE\n    | KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACEfor_str_tagged : label COLON for_strrange : INTEGER DOT DOT INTEGER\n    | VARIABLE DOT DOT VARIABLElabel : QUOTE VARIABLEdata_str : array\n    | hashmap\n    | linkedlisthashmap : KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN\n    | KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN\n    | KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN\n    | KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPARENhashmap_methods : VARIABLE hashmap_insert\n    | VARIABLE hashmap_removehashmap_insert : DOT KW_INSERT LPAREN mdata RPAREN SEMIhashmap_remove : DOT KW_REMOVE LPAREN AND data RPAREN SEMIvoid : linkedlist : KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN\n                  | KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPARENlinkedlist : KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN\n                  | KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPARENlinkedlist_methods : VARIABLE linkedlist_push\n    | VARIABLE linkedlist_removelinkedlist_push : DOT KW_PUSH_BACK LPAREN data RPAREN SEMIlinkedlist_remove : DOT KW_REMOVE LPAREN INTEGER RPAREN SEMIif : KW_IF conditional LBRACE main_rule RBRACEelse : KW_ELSE LBRACE main_rule RBRACEelse_if : KW_ELSE KW_IF conditional LBRACE main_rule RBRACEfunction : KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACEexpression_var : expression\n                      | datareturn : main_rule\n              | KW_RETURN expression_var SEMI\n              | main_rule KW_RETURN expression_var SEMIinput_init : KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPARENinput : VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMIassignation : VARIABLE assign_operators numberdeclare_data_type : KW_LET VARIABLE COLON data_type SEMI'
    
_lr_action_items = {'KW_PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,50,53,55,56,57,58,80,81,82,88,95,96,97,99,100,101,106,107,108,109,114,120,121,133,134,135,185,186,201,212,213,215,217,221,223,244,251,255,256,258,259,273,275,277,279,290,293,304,308,309,313,325,326,327,345,346,348,351,352,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-84,-26,-126,-127,-117,-118,-82,-83,-85,18,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,18,18,-47,-48,-131,18,-142,-75,18,18,-130,-80,-70,18,-132,-128,-129,-119,-73,-105,-104,-71,-120,-97,-113,18,-115,-124,-114,-116,-125,-133,-140,-122,-76,-123,-77,]),'KW_LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,50,53,55,56,57,58,80,81,82,88,95,96,97,99,100,101,106,107,108,109,114,120,121,133,134,135,185,186,201,212,213,215,217,221,223,244,251,255,256,258,259,273,275,277,279,281,282,290,293,302,303,304,308,309,313,325,326,327,345,346,348,351,352,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-84,-26,-126,-127,-117,-118,-82,-83,-85,21,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,21,21,-47,-48,-131,21,-142,-75,21,21,-130,-80,-70,21,-132,-128,-129,-119,-73,-105,-104,-71,-120,294,294,-97,-113,294,294,21,-115,-124,-114,-116,-125,-133,-140,-122,-76,-123,-77,]),'KW_FN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,50,53,55,56,57,58,80,81,82,88,95,96,97,99,100,101,106,107,108,109,114,120,121,133,134,135,185,186,201,212,213,215,217,221,223,244,251,255,256,258,259,273,275,277,279,290,293,304,308,309,313,325,326,327,345,346,348,351,352,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-84,-26,-126,-127,-117,-118,-82,-83,-85,22,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,22,22,-47,-48,-131,22,-142,-75,22,22,-130,-80,-70,22,-132,-128,-129,-119,-73,-105,-104,-71,-120,-97,-113,22,-115,-124,-114,-116,-125,-133,-140,-122,-76,-123,-77,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,41,42,43,44,45,47,48,49,50,53,54,55,56,57,58,60,61,62,63,64,65,66,68,80,81,82,87,88,89,95,96,97,99,100,101,106,107,108,109,110,113,114,119,120,121,133,134,135,144,169,182,183,184,185,186,190,198,201,202,212,213,215,217,221,223,225,240,244,247,251,255,256,258,259,273,275,277,279,290,293,294,304,307,308,309,313,318,325,326,327,328,345,346,348,351,352,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,53,-26,67,69,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,83,86,86,-24,-25,93,94,53,53,53,-84,-26,100,-126,-127,-117,-118,53,-41,-42,-43,-44,-45,-46,112,-82,-83,-85,130,20,86,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,53,100,-74,176,-106,20,20,-47,-48,53,53,219,-63,-64,-131,20,224,53,-142,53,-75,20,20,-130,-80,-70,254,53,20,274,-132,-128,-129,-119,-73,-105,-104,-71,-120,-97,-113,306,20,321,-115,-124,-114,53,-116,-125,-133,53,-140,-122,-76,-123,-77,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,32,33,39,41,42,43,47,48,49,50,51,53,55,56,57,58,69,79,80,81,82,86,88,89,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,120,121,122,123,124,125,126,127,128,133,134,135,139,141,142,144,169,181,185,186,194,198,201,202,212,213,215,217,218,221,222,223,240,244,251,255,256,258,259,260,261,262,263,265,273,275,277,279,287,288,289,290,293,304,305,308,309,313,318,323,325,326,327,328,333,341,343,345,346,348,351,352,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,19,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,79,87,87,-24,-25,19,19,19,-84,98,-26,-126,-127,-117,-118,113,79,-82,-83,-85,-56,19,87,-18,-19,-20,-21,-78,-79,138,139,140,141,-141,-24,-25,-72,144,-74,79,79,-106,19,79,-57,-58,-59,-60,-61,-62,19,-47,-48,79,79,79,198,144,-56,-131,19,79,198,-142,144,-75,19,19,-130,79,-80,79,-70,144,19,-132,-128,-129,-119,-73,280,281,282,283,79,-105,-104,-71,-120,301,302,303,-97,-113,19,319,-115,-124,-114,198,79,-116,-125,-133,198,340,79,349,-140,-122,-76,-123,-77,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,50,53,55,56,57,58,80,81,82,88,95,96,97,99,100,101,106,107,108,109,110,114,120,121,133,134,135,168,185,186,201,212,213,215,217,221,223,244,251,255,256,258,259,273,275,277,279,281,282,290,293,302,303,304,308,309,311,313,320,325,326,327,332,345,346,348,351,352,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-84,-26,-126,-127,-117,-118,-82,-83,-85,33,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,142,-74,-106,33,33,-47,-48,204,-131,33,-142,-75,33,33,-130,-80,-70,33,-132,-128,-129,-119,-73,-105,-104,-71,-120,33,33,-97,-113,33,33,33,-115,-124,323,-114,142,-116,-125,-133,204,-140,-122,-76,-123,-77,]),'KW_FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,50,53,55,56,57,58,80,81,82,84,88,95,96,97,99,100,101,106,107,108,109,114,120,121,133,134,135,185,186,201,212,213,215,217,221,223,244,251,255,256,258,259,273,275,277,279,290,293,304,308,309,313,325,326,327,345,346,348,351,352,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-84,-26,-126,-127,-117,-118,-82,-83,-85,37,37,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,37,37,-47,-48,-131,37,-142,-75,37,37,-130,-80,-70,37,-132,-128,-129,-119,-73,-105,-104,-71,-120,-97,-113,37,-115,-124,-114,-116,-125,-133,-140,-122,-76,-123,-77,]),'KW_IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,40,42,43,50,53,55,56,57,58,80,81,82,88,95,96,97,99,100,101,106,107,108,109,114,120,121,133,134,135,185,186,201,212,213,215,217,221,223,244,251,255,256,258,259,273,275,277,279,290,293,304,308,309,313,325,326,327,345,346,348,351,352,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,89,-24,-25,-84,-26,-126,-127,-117,-118,-82,-83,-85,39,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,39,39,-47,-48,-131,39,-142,-75,39,39,-130,-80,-70,39,-132,-128,-129,-119,-73,-105,-104,-71,-120,-97,-113,39,-115,-124,-114,-116,-125,-133,-140,-122,-76,-123,-77,]),'KW_ELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,50,53,55,56,57,58,80,81,82,88,95,96,97,99,100,101,106,107,108,109,114,120,121,133,134,135,185,186,201,212,213,215,217,221,223,244,251,255,256,258,259,273,275,277,279,290,293,304,308,309,313,325,326,327,345,346,348,351,352,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-84,-26,-126,-127,-117,-118,-82,-83,-85,40,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,40,40,-47,-48,-131,40,-142,-75,40,40,-130,-80,-70,40,-132,-128,-129,-119,-73,-105,-104,-71,-120,-97,-113,40,-115,-124,-114,-116,-125,-133,-140,-122,-76,-123,-77,]),'KW_WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,50,53,55,56,57,58,80,81,82,88,95,96,97,99,100,101,106,107,108,109,114,120,121,133,134,135,185,186,201,212,213,215,217,221,223,244,251,255,256,258,259,273,275,277,279,290,293,304,308,309,313,325,326,327,345,346,348,351,352,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-84,-26,-126,-127,-117,-118,-82,-83,-85,41,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,41,41,-47,-48,-131,41,-142,-75,41,41,-130,-80,-70,41,-132,-128,-129,-119,-73,-105,-104,-71,-120,-97,-113,41,-115,-124,-114,-116,-125,-133,-140,-122,-76,-123,-77,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,32,33,42,43,47,48,49,50,53,55,56,57,58,60,61,62,63,64,65,66,79,80,81,82,86,88,91,95,96,97,99,100,101,106,107,108,109,110,114,115,116,119,120,121,122,123,124,125,126,127,128,133,134,135,139,140,141,142,144,169,181,185,186,194,198,201,202,212,213,215,217,218,221,222,223,240,244,249,251,255,256,258,259,265,273,275,277,279,290,293,304,308,309,313,318,323,325,326,327,328,341,345,346,348,351,352,],[42,42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,42,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,73,-24,-25,42,42,42,-84,-26,-126,-127,-117,-118,107,-41,-42,-43,-44,-45,-46,73,-82,-83,-85,-56,42,134,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,149,-74,73,73,178,-106,42,73,-57,-58,-59,-60,-61,-62,42,-47,-48,73,193,73,73,149,149,-56,-131,42,73,232,-142,149,-75,42,42,-130,73,-80,73,-70,149,42,276,-132,-128,-129,-119,-73,73,-105,-104,-71,-120,-97,-113,42,-115,-124,-114,149,73,-116,-125,-133,149,73,-140,-122,-76,-123,-77,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,32,33,42,43,47,48,49,50,53,55,56,57,58,60,61,62,63,64,65,66,79,80,81,82,86,88,92,95,96,97,99,100,101,106,107,108,109,110,114,115,116,120,121,122,123,124,125,126,127,128,133,134,135,139,141,142,144,169,181,185,186,194,198,201,202,212,213,215,217,218,221,222,223,240,244,251,255,256,258,259,265,273,275,277,279,290,293,304,308,309,313,318,323,325,326,327,328,341,345,346,348,351,352,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,43,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,75,-24,-25,43,43,43,-84,-26,-126,-127,-117,-118,108,-41,-42,-43,-44,-45,-46,75,-82,-83,-85,-56,43,135,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,150,-74,75,75,-106,43,75,-57,-58,-59,-60,-61,-62,43,-47,-48,75,75,75,150,150,-56,-131,43,75,233,-142,150,-75,43,43,-130,75,-80,75,-70,150,43,-132,-128,-129,-119,-73,75,-105,-104,-71,-120,-97,-113,43,-115,-124,-114,150,75,-116,-125,-133,150,75,-140,-122,-76,-123,-77,]),'KW_CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,50,53,55,56,57,58,80,81,82,88,95,96,97,99,100,101,106,107,108,109,114,120,121,133,134,135,185,186,201,212,213,215,217,221,223,244,251,255,256,258,259,273,275,277,279,290,293,304,308,309,313,325,326,327,345,346,348,351,352,],[44,44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-84,-26,-126,-127,-117,-118,-82,-83,-85,44,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,44,44,-47,-48,-131,44,-142,-75,44,44,-130,-80,-70,44,-132,-128,-129,-119,-73,-105,-104,-71,-120,-97,-113,44,-115,-124,-114,-116,-125,-133,-140,-122,-76,-123,-77,]),'QUOTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,50,53,55,56,57,58,80,81,82,88,95,96,97,99,100,101,106,107,108,109,114,120,121,133,134,135,185,186,201,212,213,215,217,221,223,244,251,255,256,258,259,273,275,277,279,290,293,304,308,309,313,325,326,327,345,346,348,351,352,],[45,45,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-84,-26,-126,-127,-117,-118,-82,-83,-85,45,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,45,45,-47,-48,-131,45,-142,-75,45,45,-130,-80,-70,45,-132,-128,-129,-119,-73,-105,-104,-71,-120,-97,-113,45,-115,-124,-114,-116,-125,-133,-140,-122,-76,-123,-77,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,46,50,53,55,56,57,58,80,81,82,95,96,97,99,100,101,106,107,108,109,114,120,134,135,185,201,212,217,221,223,251,255,256,258,259,273,275,277,279,290,293,308,309,313,325,326,327,345,346,348,351,352,],[-121,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-2,-84,-26,-126,-127,-117,-118,-82,-83,-85,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,-47,-48,-131,-142,-75,-130,-80,-70,-132,-128,-129,-119,-73,-105,-104,-71,-120,-97,-113,-115,-124,-114,-116,-125,-133,-140,-122,-76,-123,-77,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,46,50,53,55,56,57,58,80,81,82,88,95,96,97,99,100,101,106,107,108,109,114,120,121,131,133,134,135,179,185,186,187,201,212,213,215,217,220,221,223,244,246,248,251,255,256,258,259,271,273,275,277,279,290,293,304,308,309,313,316,317,325,326,327,338,344,345,346,348,351,352,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-2,-84,-26,-126,-127,-117,-118,-82,-83,-85,-121,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,-121,185,-121,-47,-48,217,-131,-121,221,-142,-75,-121,-121,-130,251,-80,-70,-121,273,275,-132,-128,-129,-119,-73,290,-105,-104,-71,-120,-97,-113,-121,-115,-124,-114,327,-136,-116,-125,-133,-137,-138,-140,-122,-76,-123,-77,]),'KW_RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,32,42,43,46,50,53,55,56,57,58,80,81,82,95,96,97,99,100,101,106,107,108,109,114,120,134,135,185,201,212,217,221,223,251,255,256,258,259,273,275,277,279,290,293,304,308,309,313,317,325,326,327,345,346,348,351,352,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-98,-99,-100,-101,-102,-103,-22,-23,-111,-112,-24,-25,-2,-84,-26,-126,-127,-117,-118,-82,-83,-85,-18,-19,-20,-21,-78,-79,-141,-24,-25,-72,-74,-106,-47,-48,-131,-142,-75,-130,-80,-70,-132,-128,-129,-119,-73,-105,-104,-71,-120,-97,-113,318,-115,-124,-114,328,-116,-125,-133,-140,-122,-76,-123,-77,]),'PLUS':([8,20,29,30,42,43,52,53,95,96,97,99,134,135,149,150,151,232,233,],[47,-26,-22,-23,-24,-25,47,-26,47,47,47,-21,-47,-48,-24,-25,47,-24,-25,]),'MINUS':([8,20,29,30,42,43,52,53,95,96,97,99,134,135,149,150,151,211,232,233,],[48,-26,-22,-23,-24,-25,48,-26,48,48,48,-21,-47,-48,-24,-25,48,245,-24,-25,]),'TIMES':([8,20,29,30,42,43,52,53,95,96,97,99,134,135,149,150,151,232,233,],[49,-26,-22,-23,-24,-25,49,-26,49,49,49,-21,-47,-48,-24,-25,49,-24,-25,]),'SEMI':([10,11,29,30,31,32,34,35,36,42,43,53,67,71,72,73,74,75,76,77,78,95,96,97,99,114,134,135,146,147,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,175,189,209,210,212,226,227,229,230,236,237,239,252,253,257,259,266,267,293,297,308,309,313,325,326,329,330,334,337,339,342,346,348,350,351,352,],[50,-110,-22,-23,-111,-112,80,81,82,-24,-25,-26,109,115,-49,-50,-51,-52,-53,-54,-55,-18,-19,-20,-21,-74,-47,-48,-86,-90,-24,-25,-134,201,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-81,223,-88,-92,-75,255,256,258,259,-87,-91,265,-94,277,279,-73,-89,-93,-113,-139,-115,-124,-114,-116,-125,338,-135,341,344,345,348,-122,-76,352,-123,-77,]),'LNOT':([18,],[51,]),'COMMA':([20,71,72,73,74,75,76,77,78,100,118,137,149,150,175,232,233,334,],[54,116,-49,-50,-51,-52,-53,-54,-55,54,116,190,-50,-52,-81,-50,-52,116,]),'DOT':([20,176,178,214,216,278,],[59,214,216,247,249,292,]),'EQUALS':([20,67,112,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,188,205,264,286,299,306,],[61,110,169,202,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,222,240,284,300,311,320,]),'TIMESEQUAL':([20,],[62,]),'DIVEQUAL':([20,],[63,]),'MODULUSEQUAL':([20,],[64,]),'PLUSEQUAL':([20,],[65,]),'MINUSEQUAL':([20,],[66,]),'KW_MUT':([21,191,294,],[68,225,307,]),'RPAREN':([29,30,42,43,52,53,72,73,74,75,76,77,78,95,96,97,99,100,101,113,114,117,118,129,134,135,137,149,150,170,171,172,174,175,192,193,195,212,219,224,228,232,233,254,259,280,283,295,296,301,314,315,331,340,348,349,352,],[-22,-23,-24,-25,99,-26,-49,-50,-51,-52,-53,-54,-55,-18,-19,-20,-21,-78,-79,-121,-74,175,-68,181,-47,-48,189,-24,-25,211,-95,-96,-69,-81,226,227,229,-75,-65,253,257,-24,-25,278,-73,293,297,308,309,313,325,326,339,346,-76,351,-77,]),'CADENA':([33,79,86,98,110,115,116,122,123,124,125,126,127,128,139,141,142,144,169,181,194,198,202,218,222,240,265,318,319,323,328,341,],[72,72,-56,137,72,72,72,72,-57,-58,-59,-60,-61,-62,72,72,72,72,72,-56,72,72,72,72,72,72,72,72,331,72,72,72,]),'CHAR':([33,79,86,110,115,116,122,123,124,125,126,127,128,139,141,142,144,169,181,194,198,202,218,222,240,265,318,323,328,341,],[74,74,-56,74,74,74,74,-57,-58,-59,-60,-61,-62,74,74,74,74,74,-56,74,74,74,74,74,74,74,74,74,74,74,]),'KW_FALSE':([33,79,86,110,115,116,122,123,124,125,126,127,128,139,141,142,144,169,181,194,198,202,218,222,240,265,318,323,328,341,],[76,76,-56,76,76,76,76,-57,-58,-59,-60,-61,-62,76,76,76,76,76,-56,76,76,76,76,76,76,76,76,76,76,76,]),'KW_TRUE':([33,79,86,110,115,116,122,123,124,125,126,127,128,139,141,142,144,169,181,194,198,202,218,222,240,265,318,323,328,341,],[77,77,-56,77,77,77,77,-57,-58,-59,-60,-61,-62,77,77,77,77,77,-56,77,77,77,77,77,77,77,77,77,77,77,]),'COLON':([38,67,93,94,112,143,145,148,197,199,200,207,208,242,243,298,310,312,321,324,],[84,111,136,-109,168,197,199,200,231,234,235,242,243,269,270,310,322,324,332,336,]),'LBRACE':([40,72,73,74,75,76,77,78,85,90,132,154,155,156,157,158,159,160,161,162,163,164,165,166,167,175,176,177,180,211,250,274,276,291,],[88,-49,-50,-51,-52,-53,-54,-55,121,133,186,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-81,213,215,-66,244,-67,-108,-107,304,]),'DIVIDE':([42,43,149,150,232,233,],[91,92,91,92,91,92,]),'KW_READ_LINE':([59,],[102,]),'KW_PUSH_BACK':([59,],[103,]),'KW_REMOVE':([59,],[104,]),'KW_INSERT':([59,],[105,]),'RBRACKET':([70,71,72,73,74,75,76,77,78,118,173,174,175,196,285,334,335,347,],[114,-68,-49,-50,-51,-52,-53,-54,-55,-68,212,-69,-81,230,299,-68,342,350,]),'KW_IN':([83,],[119,]),'EQ':([86,181,],[123,123,]),'NE':([86,181,],[124,124,]),'GE':([86,181,],[125,125,]),'LE':([86,181,],[126,126,]),'GT':([86,154,155,156,157,158,159,160,161,162,163,164,165,166,167,181,238,245,268,],[127,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,127,264,272,286,]),'LT':([86,153,181,206,],[128,203,128,241,]),'KW_HASHMAP':([110,169,],[143,207,]),'KW_LINKEDLIST':([110,111,168,169,284,300,],[145,153,206,208,298,312,]),'KW_IO':([110,],[148,]),'UNSIG_INT_8':([111,136,168,203,204,241,272,],[154,154,154,154,154,154,154,]),'UNSIG_INT_16':([111,136,168,203,204,241,272,],[155,155,155,155,155,155,155,]),'UNSIG_INT_32':([111,136,168,203,204,241,272,],[156,156,156,156,156,156,156,]),'UNSIG_INT_64':([111,136,168,203,204,241,272,],[157,157,157,157,157,157,157,]),'UNSIG_INT_128':([111,136,168,203,204,241,272,],[158,158,158,158,158,158,158,]),'SIG_INT_8':([111,136,168,203,204,241,272,],[159,159,159,159,159,159,159,]),'SIG_INT_16':([111,136,168,203,204,241,272,],[160,160,160,160,160,160,160,]),'SIG_INT_32':([111,136,168,203,204,241,272,],[161,161,161,161,161,161,161,]),'SIG_INT_64':([111,136,168,203,204,241,272,],[162,162,162,162,162,162,162,]),'SIG_INT_128':([111,136,168,203,204,241,272,],[163,163,163,163,163,163,163,]),'FLOAT_32':([111,136,168,203,204,241,272,],[164,164,164,164,164,164,164,]),'FLOAT_64':([111,136,168,203,204,241,272,],[165,165,165,165,165,165,165,]),'KW_BOOLEAN':([111,136,168,203,204,241,272,],[166,166,166,166,166,166,166,]),'KW_STRING':([111,136,168,203,204,241,272,],[167,167,167,167,167,167,167,]),'LOR':([130,],[183,]),'LAND':([130,],[184,]),'AND':([138,140,],[191,194,]),'KW_NEW':([231,269,322,336,],[260,287,333,343,]),'KW_FROM':([231,234,269,270,],[261,262,288,289,]),'KW_STDIN':([235,],[263,]),'KW_EXPECT':([292,],[305,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main_rule':([0,2,88,121,133,186,213,215,244,304,],[1,46,131,179,187,220,246,248,271,317,]),'father_rule':([0,2,88,121,133,186,213,215,244,304,],[2,2,2,2,2,2,2,2,2,2,]),'print':([0,2,88,121,133,186,213,215,244,304,],[3,3,3,3,3,3,3,3,3,3,]),'dvariable':([0,2,88,121,133,186,213,215,244,304,],[4,4,4,4,4,4,4,4,4,4,]),'function':([0,2,88,121,133,186,213,215,244,304,],[5,5,5,5,5,5,5,5,5,5,]),'variables':([0,2,54,88,113,121,133,186,213,215,244,304,],[6,6,101,6,172,6,6,6,6,6,6,6,]),'control_str':([0,2,88,121,133,186,213,215,244,304,],[7,7,7,7,7,7,7,7,7,7,]),'expression':([0,2,19,47,48,49,88,110,121,133,144,169,186,198,202,213,215,240,244,304,318,328,],[8,8,52,95,96,97,8,151,8,8,52,151,8,52,151,8,8,151,8,8,151,151,]),'void':([0,2,88,113,121,133,186,213,215,244,304,],[9,9,9,171,9,9,9,9,9,9,9,]),'data_str':([0,2,88,121,133,186,213,215,244,304,],[10,10,10,10,10,10,10,10,10,10,]),'array':([0,2,88,121,133,186,213,215,244,281,282,302,303,304,],[11,11,11,11,11,11,11,11,11,295,296,314,315,11,]),'linkedlist_methods':([0,2,88,121,133,186,213,215,244,304,],[12,12,12,12,12,12,12,12,12,12,]),'hashmap_methods':([0,2,88,121,133,186,213,215,244,304,],[13,13,13,13,13,13,13,13,13,13,]),'initialization':([0,2,88,121,133,186,213,215,244,304,],[14,14,14,14,14,14,14,14,14,14,]),'input':([0,2,88,121,133,186,213,215,244,304,],[15,15,15,15,15,15,15,15,15,15,]),'assignation':([0,2,88,121,133,186,213,215,244,304,],[16,16,16,16,16,16,16,16,16,16,]),'declare_data_type':([0,2,88,121,133,186,213,215,244,304,],[17,17,17,17,17,17,17,17,17,17,]),'for_str':([0,2,84,88,121,133,186,213,215,244,304,],[23,23,120,23,23,23,23,23,23,23,23,]),'for_str_tagged':([0,2,88,121,133,186,213,215,244,304,],[24,24,24,24,24,24,24,24,24,24,]),'if':([0,2,88,121,133,186,213,215,244,304,],[25,25,25,25,25,25,25,25,25,25,]),'else':([0,2,88,121,133,186,213,215,244,304,],[26,26,26,26,26,26,26,26,26,26,]),'else_if':([0,2,88,121,133,186,213,215,244,304,],[27,27,27,27,27,27,27,27,27,27,]),'while':([0,2,88,121,133,186,213,215,244,304,],[28,28,28,28,28,28,28,28,28,28,]),'number':([0,2,19,47,48,49,60,88,110,121,133,144,169,186,198,202,213,215,240,244,304,318,328,],[29,29,29,29,29,29,106,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'division':([0,2,19,47,48,49,88,110,121,133,144,169,186,198,202,213,215,240,244,304,318,328,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'hashmap':([0,2,88,121,133,186,213,215,244,304,],[31,31,31,31,31,31,31,31,31,31,]),'linkedlist':([0,2,88,121,133,186,213,215,244,304,],[32,32,32,32,32,32,32,32,32,32,]),'let_initialization':([0,2,88,121,133,186,213,215,244,304,],[34,34,34,34,34,34,34,34,34,34,]),'const_initialization':([0,2,88,121,133,186,213,215,244,304,],[35,35,35,35,35,35,35,35,35,35,]),'input_init':([0,2,88,121,133,186,213,215,244,304,],[36,36,36,36,36,36,36,36,36,36,]),'label':([0,2,88,121,133,186,213,215,244,304,],[38,38,38,38,38,38,38,38,38,38,]),'linkedlist_push':([20,],[55,]),'linkedlist_remove':([20,],[56,]),'hashmap_insert':([20,],[57,]),'hashmap_remove':([20,],[58,]),'assign_operators':([20,],[60,]),'mdata':([33,79,116,141,142,144,198,323,],[70,117,174,195,196,117,117,335,]),'data':([33,79,110,115,116,122,139,141,142,144,169,194,198,202,218,222,240,265,318,323,328,341,],[71,118,146,173,118,180,192,118,118,118,209,228,118,236,250,252,266,285,330,334,330,347,]),'tuple':([33,79,110,115,116,122,139,141,142,144,169,194,198,202,218,222,240,265,318,323,328,341,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'conditional':([39,41,89,],[85,90,132,]),'comparator':([86,181,],[122,218,]),'lvariable':([87,],[129,]),'expression_var':([110,169,202,240,318,328,],[147,210,237,267,329,337,]),'data_type':([111,136,168,203,204,241,272,],[152,188,205,238,239,268,291,]),'arguments':([113,],[170,]),'range':([119,],[177,]),'logic':([130,],[182,]),'return':([304,],[316,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main_rule","S'",1,None,None,None),
  ('main_rule -> father_rule','main_rule',1,'p_main_rule','pyacc.py',15),
  ('main_rule -> father_rule main_rule','main_rule',2,'p_main_rule','pyacc.py',16),
  ('father_rule -> print','father_rule',1,'p_father_rule','pyacc.py',21),
  ('father_rule -> dvariable','father_rule',1,'p_father_rule','pyacc.py',22),
  ('father_rule -> function','father_rule',1,'p_father_rule','pyacc.py',23),
  ('father_rule -> variables','father_rule',1,'p_father_rule','pyacc.py',24),
  ('father_rule -> control_str','father_rule',1,'p_father_rule','pyacc.py',25),
  ('father_rule -> expression','father_rule',1,'p_father_rule','pyacc.py',26),
  ('father_rule -> void','father_rule',1,'p_father_rule','pyacc.py',27),
  ('father_rule -> data_str','father_rule',1,'p_father_rule','pyacc.py',28),
  ('father_rule -> array','father_rule',1,'p_father_rule','pyacc.py',29),
  ('father_rule -> linkedlist_methods','father_rule',1,'p_father_rule','pyacc.py',30),
  ('father_rule -> hashmap_methods','father_rule',1,'p_father_rule','pyacc.py',31),
  ('father_rule -> initialization','father_rule',1,'p_father_rule','pyacc.py',32),
  ('father_rule -> input','father_rule',1,'p_father_rule','pyacc.py',33),
  ('father_rule -> assignation','father_rule',1,'p_father_rule','pyacc.py',34),
  ('father_rule -> declare_data_type','father_rule',1,'p_father_rule','pyacc.py',35),
  ('expression -> expression PLUS expression','expression',3,'p_expression','pyacc.py',41),
  ('expression -> expression MINUS expression','expression',3,'p_expression','pyacc.py',42),
  ('expression -> expression TIMES expression','expression',3,'p_expression','pyacc.py',43),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','pyacc.py',44),
  ('expression -> number','expression',1,'p_expression','pyacc.py',45),
  ('expression -> division','expression',1,'p_expression','pyacc.py',46),
  ('number -> INTEGER','number',1,'p_number','pyacc.py',51),
  ('number -> FLOAT','number',1,'p_number','pyacc.py',52),
  ('number -> VARIABLE','number',1,'p_number','pyacc.py',53),
  ('data_type -> UNSIG_INT_8','data_type',1,'p_data_type','pyacc.py',57),
  ('data_type -> UNSIG_INT_16','data_type',1,'p_data_type','pyacc.py',58),
  ('data_type -> UNSIG_INT_32','data_type',1,'p_data_type','pyacc.py',59),
  ('data_type -> UNSIG_INT_64','data_type',1,'p_data_type','pyacc.py',60),
  ('data_type -> UNSIG_INT_128','data_type',1,'p_data_type','pyacc.py',61),
  ('data_type -> SIG_INT_8','data_type',1,'p_data_type','pyacc.py',62),
  ('data_type -> SIG_INT_16','data_type',1,'p_data_type','pyacc.py',63),
  ('data_type -> SIG_INT_32','data_type',1,'p_data_type','pyacc.py',64),
  ('data_type -> SIG_INT_64','data_type',1,'p_data_type','pyacc.py',65),
  ('data_type -> SIG_INT_128','data_type',1,'p_data_type','pyacc.py',66),
  ('data_type -> FLOAT_32','data_type',1,'p_data_type','pyacc.py',67),
  ('data_type -> FLOAT_64','data_type',1,'p_data_type','pyacc.py',68),
  ('data_type -> KW_BOOLEAN','data_type',1,'p_data_type','pyacc.py',69),
  ('data_type -> KW_STRING','data_type',1,'p_data_type','pyacc.py',70),
  ('assign_operators -> EQUALS','assign_operators',1,'p_assign_operators','pyacc.py',74),
  ('assign_operators -> TIMESEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',75),
  ('assign_operators -> DIVEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',76),
  ('assign_operators -> MODULUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',77),
  ('assign_operators -> PLUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',78),
  ('assign_operators -> MINUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',79),
  ('division -> INTEGER DIVIDE INTEGER','division',3,'p_semantic_division','pyacc.py',83),
  ('division -> FLOAT DIVIDE FLOAT','division',3,'p_semantic_division','pyacc.py',84),
  ('data -> CADENA','data',1,'p_data','pyacc.py',87),
  ('data -> INTEGER','data',1,'p_data','pyacc.py',88),
  ('data -> CHAR','data',1,'p_data','pyacc.py',89),
  ('data -> FLOAT','data',1,'p_data','pyacc.py',90),
  ('data -> KW_FALSE','data',1,'p_data','pyacc.py',91),
  ('data -> KW_TRUE','data',1,'p_data','pyacc.py',92),
  ('data -> tuple','data',1,'p_data','pyacc.py',93),
  ('comparator -> <empty>','comparator',0,'p_comparator','pyacc.py',96),
  ('comparator -> EQ','comparator',1,'p_comparator','pyacc.py',97),
  ('comparator -> NE','comparator',1,'p_comparator','pyacc.py',98),
  ('comparator -> GE','comparator',1,'p_comparator','pyacc.py',99),
  ('comparator -> LE','comparator',1,'p_comparator','pyacc.py',100),
  ('comparator -> GT','comparator',1,'p_comparator','pyacc.py',101),
  ('comparator -> LT','comparator',1,'p_comparator','pyacc.py',102),
  ('logic -> LOR','logic',1,'p_logic','pyacc.py',105),
  ('logic -> LAND','logic',1,'p_logic','pyacc.py',106),
  ('lvariable -> VARIABLE logic VARIABLE','lvariable',3,'p_logic_variable','pyacc.py',109),
  ('conditional -> VARIABLE comparator data','conditional',3,'p_conditional','pyacc.py',112),
  ('conditional -> LPAREN lvariable RPAREN comparator data','conditional',5,'p_conditional','pyacc.py',113),
  ('mdata -> data','mdata',1,'p_mdata','pyacc.py',116),
  ('mdata -> data COMMA mdata','mdata',3,'p_mdata','pyacc.py',117),
  ('print -> KW_PRINT LNOT LPAREN CADENA RPAREN SEMI','print',6,'p_print','pyacc.py',120),
  ('print -> KW_PRINT LNOT LPAREN CADENA COMMA VARIABLE RPAREN SEMI','print',8,'p_print','pyacc.py',121),
  ('dvariable -> KW_LET VARIABLE SEMI','dvariable',3,'p_declare_variable','pyacc.py',124),
  ('array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET SEMI','array',7,'p_array','pyacc.py',127),
  ('array -> LBRACKET mdata RBRACKET','array',3,'p_array','pyacc.py',128),
  ('array -> LBRACKET data SEMI data RBRACKET','array',5,'p_array','pyacc.py',129),
  ('array -> KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET mdata RBRACKET SEMI','array',14,'p_array','pyacc.py',130),
  ('array -> KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET data SEMI data RBRACKET SEMI','array',16,'p_array','pyacc.py',131),
  ('variables -> VARIABLE','variables',1,'p_variables','pyacc.py',134),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','pyacc.py',135),
  ('while -> KW_WHILE conditional LBRACE main_rule RBRACE','while',5,'p_while','pyacc.py',138),
  ('tuple -> LPAREN mdata RPAREN','tuple',3,'p_tuple','pyacc.py',144),
  ('initialization -> let_initialization SEMI','initialization',2,'p_initialization','pyacc.py',148),
  ('initialization -> const_initialization SEMI','initialization',2,'p_initialization','pyacc.py',149),
  ('initialization -> data_str SEMI','initialization',2,'p_initialization','pyacc.py',150),
  ('initialization -> input_init SEMI','initialization',2,'p_initialization','pyacc.py',151),
  ('let_initialization -> KW_LET VARIABLE EQUALS data','let_initialization',4,'p_let_initialization','pyacc.py',155),
  ('let_initialization -> KW_LET VARIABLE COLON data_type EQUALS data','let_initialization',6,'p_let_initialization','pyacc.py',156),
  ('let_initialization -> KW_LET KW_MUT VARIABLE EQUALS data','let_initialization',5,'p_let_initialization','pyacc.py',157),
  ('let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS data','let_initialization',7,'p_let_initialization','pyacc.py',158),
  ('let_initialization -> KW_LET VARIABLE EQUALS expression_var','let_initialization',4,'p_let_initialization','pyacc.py',159),
  ('let_initialization -> KW_LET VARIABLE COLON data_type EQUALS expression_var','let_initialization',6,'p_let_initialization','pyacc.py',160),
  ('let_initialization -> KW_LET KW_MUT VARIABLE EQUALS expression_var','let_initialization',5,'p_let_initialization','pyacc.py',161),
  ('let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var','let_initialization',7,'p_let_initialization','pyacc.py',162),
  ('const_initialization -> KW_CONST VARIABLE COLON data_type EQUALS data','const_initialization',6,'p_const_initialization','pyacc.py',166),
  ('arguments -> void','arguments',1,'p_arguments','pyacc.py',170),
  ('arguments -> variables','arguments',1,'p_arguments','pyacc.py',171),
  ('function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE','function',8,'p_function','pyacc.py',175),
  ('control_str -> for_str','control_str',1,'p_control_str','pyacc.py',179),
  ('control_str -> for_str_tagged','control_str',1,'p_control_str','pyacc.py',180),
  ('control_str -> if','control_str',1,'p_control_str','pyacc.py',181),
  ('control_str -> else','control_str',1,'p_control_str','pyacc.py',182),
  ('control_str -> else_if','control_str',1,'p_control_str','pyacc.py',183),
  ('control_str -> while','control_str',1,'p_control_str','pyacc.py',184),
  ('for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE','for_str',7,'p_for_str','pyacc.py',188),
  ('for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE','for_str',7,'p_for_str','pyacc.py',189),
  ('for_str_tagged -> label COLON for_str','for_str_tagged',3,'p_for_str_tagged','pyacc.py',193),
  ('range -> INTEGER DOT DOT INTEGER','range',4,'p_range','pyacc.py',197),
  ('range -> VARIABLE DOT DOT VARIABLE','range',4,'p_range','pyacc.py',198),
  ('label -> QUOTE VARIABLE','label',2,'p_label','pyacc.py',202),
  ('data_str -> array','data_str',1,'p_data_str','pyacc.py',206),
  ('data_str -> hashmap','data_str',1,'p_data_str','pyacc.py',207),
  ('data_str -> linkedlist','data_str',1,'p_data_str','pyacc.py',208),
  ('hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN','hashmap',9,'p_hashmap','pyacc.py',212),
  ('hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN','hashmap',10,'p_hashmap','pyacc.py',213),
  ('hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN','hashmap',10,'p_hashmap','pyacc.py',214),
  ('hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN','hashmap',11,'p_hashmap','pyacc.py',215),
  ('hashmap_methods -> VARIABLE hashmap_insert','hashmap_methods',2,'p_hashmap_methods','pyacc.py',219),
  ('hashmap_methods -> VARIABLE hashmap_remove','hashmap_methods',2,'p_hashmap_methods','pyacc.py',220),
  ('hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI','hashmap_insert',6,'p_hashmap_insert','pyacc.py',224),
  ('hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI','hashmap_remove',7,'p_hashmap_remove','pyacc.py',228),
  ('void -> <empty>','void',0,'p_void','pyacc.py',232),
  ('linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN','linkedlist',14,'p_linkedlist_empty','pyacc.py',240),
  ('linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN','linkedlist',15,'p_linkedlist_empty','pyacc.py',241),
  ('linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN','linkedlist',10,'p_linkedlist_array','pyacc.py',244),
  ('linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN','linkedlist',11,'p_linkedlist_array','pyacc.py',245),
  ('linkedlist_methods -> VARIABLE linkedlist_push','linkedlist_methods',2,'p_linkedlist_methods','pyacc.py',248),
  ('linkedlist_methods -> VARIABLE linkedlist_remove','linkedlist_methods',2,'p_linkedlist_methods','pyacc.py',249),
  ('linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI','linkedlist_push',6,'p_linkedlist_push','pyacc.py',252),
  ('linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI','linkedlist_remove',6,'p_linkedlist_remove','pyacc.py',255),
  ('if -> KW_IF conditional LBRACE main_rule RBRACE','if',5,'p_if','pyacc.py',260),
  ('else -> KW_ELSE LBRACE main_rule RBRACE','else',4,'p_else','pyacc.py',263),
  ('else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE','else_if',6,'p_else_if','pyacc.py',266),
  ('function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE','function',11,'p_function_return','pyacc.py',271),
  ('expression_var -> expression','expression_var',1,'p_expression_var','pyacc.py',274),
  ('expression_var -> data','expression_var',1,'p_expression_var','pyacc.py',275),
  ('return -> main_rule','return',1,'p_return_statement','pyacc.py',278),
  ('return -> KW_RETURN expression_var SEMI','return',3,'p_return_statement','pyacc.py',279),
  ('return -> main_rule KW_RETURN expression_var SEMI','return',4,'p_return_statement','pyacc.py',280),
  ('input_init -> KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN','input_init',9,'p_input_init','pyacc.py',285),
  ('input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI','input',14,'p_input','pyacc.py',288),
  ('assignation -> VARIABLE assign_operators number','assignation',3,'p_assignation','pyacc.py',293),
  ('declare_data_type -> KW_LET VARIABLE COLON data_type SEMI','declare_data_type',5,'p_declare_datat_type','pyacc.py',298),
]
