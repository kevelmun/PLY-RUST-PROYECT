
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CADENA CHAR COLON COMMA COMMENT DIVEQUAL DIVIDE DOT EQ EQUALS FLOAT FLOAT_32 FLOAT_64 GE GT INTEGER KW_AS KW_BOOLEAN KW_CHARACTER KW_CONST KW_ELSE KW_EXPECT KW_FALSE KW_FN KW_FOR KW_FROM KW_HASHMAP KW_IF KW_IN KW_INSERT KW_IO KW_LET KW_LINKEDLIST KW_MUT KW_NEW KW_PRINT KW_PUSH_BACK KW_READ_LINE KW_REMOVE KW_RETURN KW_STDIN KW_STRING KW_TRUE KW_WHILE LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MINUSEQUAL MODULUSEQUAL NE PLUS PLUSEQUAL QUOTE RBRACE RBRACKET RPAREN SEMI SIG_INT_128 SIG_INT_16 SIG_INT_32 SIG_INT_64 SIG_INT_8 SPACETAB TIMES TIMESEQUAL UNSIG_INT_128 UNSIG_INT_16 UNSIG_INT_32 UNSIG_INT_64 UNSIG_INT_8 VARIABLEmain_rule : father_rule\n    | father_rule main_rulefather_rule : print\n    | dvariable\n    | function\n    | control_str\n    | void\n    | array\n    | linkedlist_methods\n    | hashmap_methods\n    | initialization\n    | input\n    | assignation\n    | declare_data_type\n    | castingexpression : expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | LPAREN expression RPAREN\n    | number\n    | division\n    | variablenumber : INTEGER\n    | FLOATvariable : VARIABLEdata_type : UNSIG_INT_8\n                | UNSIG_INT_16\n                | UNSIG_INT_32\n                | UNSIG_INT_64\n                | UNSIG_INT_128\n                | SIG_INT_8\n                | SIG_INT_16\n                | SIG_INT_32\n                | SIG_INT_64\n                | SIG_INT_128\n                | FLOAT_32\n                | FLOAT_64\n                | KW_BOOLEAN\n                | KW_STRING\n                | KW_CHARACTERassign_operators : EQUALS\n                        | TIMESEQUAL \n                        | DIVEQUAL\n                        | MODULUSEQUAL\n                        | PLUSEQUAL \n                        | MINUSEQUALsigint : SIG_INT_8\n    | SIG_INT_16\n    | SIG_INT_32\n    | SIG_INT_64\n    | SIG_INT_128unsigint : UNSIG_INT_8\n    | UNSIG_INT_16\n    | UNSIG_INT_32\n    | UNSIG_INT_64\n    | UNSIG_INT_128flotante : FLOAT_32\n    | FLOAT_64casting : flotante KW_AS sigint\n    | flotante KW_AS unsigint\n    | sigint KW_AS flotante\n    | unsigint KW_AS flotante\n    | flotante KW_AS flotantedivision : INTEGER DIVIDE INTEGER\n    | FLOAT DIVIDE FLOATdata : CADENA\n    | INTEGER\n    | CHAR\n    | FLOAT\n    | KW_FALSE\n    | KW_TRUE\n    | tuplecomparator :\n    | EQ\n    | NE\n    | GE\n    | LE\n    | GT\n    | LTlogic : LOR\n    | LANDlvariable : VARIABLE logic VARIABLEconditional : VARIABLE comparator data\n    | LPAREN lvariable RPAREN comparator datamdata : data\n    | data COMMA mdataprint : KW_PRINT LNOT LPAREN CADENA RPAREN SEMI\n    | KW_PRINT LNOT LPAREN CADENA COMMA VARIABLE RPAREN SEMIdvariable : KW_LET VARIABLE COLON data_type SEMIarray : KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET SEMI\n    | LBRACKET mdata RBRACKET\n    | LBRACKET data SEMI data RBRACKET\n    | KW_LET VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET mdata RBRACKET SEMI\n    | KW_LET VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET data SEMI data RBRACKET SEMI\n    | KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET mdata RBRACKET SEMI\n    | KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET data SEMI data RBRACKET SEMIvariables : VARIABLE \n    | VARIABLE COMMA variableswhile : KW_WHILE conditional LBRACE main_rule RBRACEtuple : LPAREN mdata RPARENinitialization : let_initialization SEMI \n    | const_initialization SEMI \n    | data_str SEMI\n    | input_init SEMIlet_initialization : KW_LET VARIABLE EQUALS data\n    | KW_LET VARIABLE COLON data_type EQUALS data\n    | KW_LET KW_MUT VARIABLE EQUALS data\n    | KW_LET KW_MUT VARIABLE COLON data_type EQUALS data\n    | KW_LET VARIABLE EQUALS expression_var\n    | KW_LET VARIABLE COLON data_type EQUALS expression_var\n    | KW_LET KW_MUT VARIABLE EQUALS expression_var\n    | KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_varconst_initialization : KW_CONST VARIABLE COLON data_type EQUALS dataarguments : void\n    | variablesfunction : KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACEcontrol_str : for_str\n    | for_str_tagged\n    | if\n    | else\n    | else_if\n    | whilefor_str : KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE\n    | KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACEfor_str_tagged : label COLON for_strrange : INTEGER DOT DOT INTEGER\n    | VARIABLE DOT DOT VARIABLElabel : QUOTE VARIABLEdata_str : array\n    | hashmap\n    | linkedlisthashmap : KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN\n    | KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPARENhashmap_methods : VARIABLE hashmap_insert\n    | VARIABLE hashmap_removehashmap_insert : DOT KW_INSERT LPAREN data COMMA data RPAREN SEMIhashmap_remove : DOT KW_REMOVE LPAREN AND data RPAREN SEMIvoid : linkedlist : KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN\n                  | KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPARENlinkedlist : KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN\n                  | KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPARENlinkedlist_methods : VARIABLE linkedlist_push\n    | VARIABLE linkedlist_removelinkedlist_push : DOT KW_PUSH_BACK LPAREN data RPAREN SEMIlinkedlist_remove : DOT KW_REMOVE LPAREN INTEGER RPAREN SEMIif : KW_IF conditional LBRACE main_rule RBRACEelse : KW_ELSE LBRACE main_rule RBRACEelse_if : KW_ELSE KW_IF conditional LBRACE main_rule RBRACEfunction : KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACEexpression_var : expression\n                      | datareturn : main_rule\n              | KW_RETURN expression_var SEMI\n              | main_rule KW_RETURN expression_var SEMIinput_init : KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPARENinput : VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMIassignation : VARIABLE assign_operators number SEMI\n    | VARIABLE assign_operators expression SEMI\n    | VARIABLE assign_operators number\n    | VARIABLE assign_operators expressiondeclare_data_type : KW_LET VARIABLE COLON data_type SEMI'
    
_lr_action_items = {'KW_PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,94,104,105,106,107,108,110,111,116,121,122,123,124,125,127,128,140,147,148,155,202,203,213,214,215,216,217,218,219,237,238,240,242,246,248,271,278,282,283,288,300,302,304,306,317,320,331,355,371,377,381,383,386,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,16,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,16,16,-158,-159,-20,-148,16,-16,-17,-18,-64,-65,-19,-89,-92,16,16,-147,-99,-87,16,-149,-145,-146,-90,-124,-123,-88,-137,-116,-136,16,-150,-93,-157,-95,-94,-96,]),'KW_LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,94,104,105,106,107,108,110,111,116,121,122,123,124,125,127,128,140,147,148,155,202,203,213,214,215,216,217,218,219,237,238,240,242,246,248,271,278,282,283,288,300,302,304,306,312,317,320,330,331,355,371,377,381,383,386,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,18,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,18,18,-158,-159,-20,-148,18,-16,-17,-18,-64,-65,-19,-89,-92,18,18,-147,-99,-87,18,-149,-145,-146,-90,-124,-123,-88,-137,325,-116,-136,325,18,-150,-93,-157,-95,-94,-96,]),'KW_FN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,94,104,105,106,107,108,110,111,116,121,122,123,124,125,127,128,140,147,148,155,202,203,213,214,215,216,217,218,219,237,238,240,242,246,248,271,278,282,283,288,300,302,304,306,317,320,331,355,371,377,381,383,386,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,19,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,19,19,-158,-159,-20,-148,19,-16,-17,-18,-64,-65,-19,-89,-92,19,19,-147,-99,-87,19,-149,-145,-146,-90,-124,-123,-88,-137,-116,-136,19,-150,-93,-157,-95,-94,-96,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,94,104,105,106,107,108,110,111,112,113,116,121,122,123,124,125,127,128,140,147,148,155,184,202,203,213,214,215,216,217,218,219,237,238,240,242,246,248,271,278,282,283,288,300,302,304,306,312,317,320,321,330,331,338,349,350,355,363,371,377,381,383,386,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,26,-25,-20,-161,-23,-24,-21,-22,157,174,-91,-63,-59,-60,-61,-62,-125,26,26,-158,-159,-20,228,-148,26,-16,-17,-18,-64,-65,-19,-89,-92,26,26,-147,-99,-87,26,-149,-145,-146,-90,-124,-123,-88,-137,26,-116,-136,333,26,26,352,174,157,-150,228,-93,-157,-95,-94,-96,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,34,36,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,59,60,62,63,64,65,66,67,68,70,82,83,84,85,93,94,95,104,105,106,107,108,109,110,111,113,115,116,121,122,123,124,125,126,127,128,140,147,148,149,150,151,155,178,185,199,200,201,202,203,207,213,214,215,216,217,218,219,220,225,235,237,238,240,242,246,248,250,266,271,274,278,282,283,288,300,302,304,306,317,320,325,331,336,344,355,356,371,377,381,383,386,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,69,71,-117,-118,-119,-120,-121,-122,89,92,92,97,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,98,-143,-144,-134,-135,104,-41,-42,-43,-44,-45,-46,114,-101,-102,-103,-104,137,17,92,-25,-20,-161,-23,-24,104,-21,-22,104,186,-91,-63,-59,-60,-61,-62,193,-125,17,17,-158,-159,104,104,104,-20,104,104,244,-80,-81,-148,17,249,-16,-17,-18,-64,-65,-19,-89,104,104,186,-92,17,17,-147,-99,-87,281,104,17,301,-149,-145,-146,-90,-124,-123,-88,-137,-116,-136,335,17,351,104,-150,104,-93,-157,-95,-94,-96,]),'KW_FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,90,94,104,105,106,107,108,110,111,116,121,122,123,124,125,127,128,140,147,148,155,202,203,213,214,215,216,217,218,219,237,238,240,242,246,248,271,278,282,283,288,300,302,304,306,317,320,331,355,371,377,381,383,386,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,34,34,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,34,34,-158,-159,-20,-148,34,-16,-17,-18,-64,-65,-19,-89,-92,34,34,-147,-99,-87,34,-149,-145,-146,-90,-124,-123,-88,-137,-116,-136,34,-150,-93,-157,-95,-94,-96,]),'KW_IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,37,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,94,104,105,106,107,108,110,111,116,121,122,123,124,125,127,128,140,147,148,155,202,203,213,214,215,216,217,218,219,237,238,240,242,246,248,271,278,282,283,288,300,302,304,306,317,320,331,355,371,377,381,383,386,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,95,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,36,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,36,36,-158,-159,-20,-148,36,-16,-17,-18,-64,-65,-19,-89,-92,36,36,-147,-99,-87,36,-149,-145,-146,-90,-124,-123,-88,-137,-116,-136,36,-150,-93,-157,-95,-94,-96,]),'KW_ELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,94,104,105,106,107,108,110,111,116,121,122,123,124,125,127,128,140,147,148,155,202,203,213,214,215,216,217,218,219,237,238,240,242,246,248,271,278,282,283,288,300,302,304,306,317,320,331,355,371,377,381,383,386,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,37,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,37,37,-158,-159,-20,-148,37,-16,-17,-18,-64,-65,-19,-89,-92,37,37,-147,-99,-87,37,-149,-145,-146,-90,-124,-123,-88,-137,-116,-136,37,-150,-93,-157,-95,-94,-96,]),'KW_WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,94,104,105,106,107,108,110,111,116,121,122,123,124,125,127,128,140,147,148,155,202,203,213,214,215,216,217,218,219,237,238,240,242,246,248,271,278,282,283,288,300,302,304,306,317,320,331,355,371,377,381,383,386,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,38,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,38,38,-158,-159,-20,-148,38,-16,-17,-18,-64,-65,-19,-89,-92,38,38,-147,-99,-87,38,-149,-145,-146,-90,-124,-123,-88,-137,-116,-136,38,-150,-93,-157,-95,-94,-96,]),'KW_CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,94,104,105,106,107,108,110,111,116,121,122,123,124,125,127,128,140,147,148,155,202,203,213,214,215,216,217,218,219,237,238,240,242,246,248,271,278,282,283,288,300,302,304,306,317,320,331,355,371,377,381,383,386,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,39,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,39,39,-158,-159,-20,-148,39,-16,-17,-18,-64,-65,-19,-89,-92,39,39,-147,-99,-87,39,-149,-145,-146,-90,-124,-123,-88,-137,-116,-136,39,-150,-93,-157,-95,-94,-96,]),'FLOAT_32':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,87,88,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[42,42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,42,42,42,42,-25,-20,-161,-23,-24,-21,-22,169,-91,-63,-59,-60,-61,-62,-125,42,42,169,-158,-159,-20,169,169,-148,42,-16,-17,-18,-64,-65,-19,-89,169,169,-92,42,42,-147,-99,-87,169,42,-149,-145,-146,-90,169,-124,-123,-88,-137,-116,-136,42,-150,-93,-157,-95,-94,-96,]),'FLOAT_64':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,87,88,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,43,43,43,43,-25,-20,-161,-23,-24,-21,-22,170,-91,-63,-59,-60,-61,-62,-125,43,43,170,-158,-159,-20,170,170,-148,43,-16,-17,-18,-64,-65,-19,-89,170,170,-92,43,43,-147,-99,-87,170,43,-149,-145,-146,-90,170,-124,-123,-88,-137,-116,-136,43,-150,-93,-157,-95,-94,-96,]),'SIG_INT_8':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[44,44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,44,44,-25,-20,-161,-23,-24,-21,-22,164,-91,-63,-59,-60,-61,-62,-125,44,44,164,-158,-159,-20,164,164,-148,44,-16,-17,-18,-64,-65,-19,-89,164,164,-92,44,44,-147,-99,-87,164,44,-149,-145,-146,-90,164,-124,-123,-88,-137,-116,-136,44,-150,-93,-157,-95,-94,-96,]),'SIG_INT_16':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[45,45,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,45,45,-25,-20,-161,-23,-24,-21,-22,165,-91,-63,-59,-60,-61,-62,-125,45,45,165,-158,-159,-20,165,165,-148,45,-16,-17,-18,-64,-65,-19,-89,165,165,-92,45,45,-147,-99,-87,165,45,-149,-145,-146,-90,165,-124,-123,-88,-137,-116,-136,45,-150,-93,-157,-95,-94,-96,]),'SIG_INT_32':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[46,46,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,46,46,-25,-20,-161,-23,-24,-21,-22,166,-91,-63,-59,-60,-61,-62,-125,46,46,166,-158,-159,-20,166,166,-148,46,-16,-17,-18,-64,-65,-19,-89,166,166,-92,46,46,-147,-99,-87,166,46,-149,-145,-146,-90,166,-124,-123,-88,-137,-116,-136,46,-150,-93,-157,-95,-94,-96,]),'SIG_INT_64':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[47,47,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,47,47,-25,-20,-161,-23,-24,-21,-22,167,-91,-63,-59,-60,-61,-62,-125,47,47,167,-158,-159,-20,167,167,-148,47,-16,-17,-18,-64,-65,-19,-89,167,167,-92,47,47,-147,-99,-87,167,47,-149,-145,-146,-90,167,-124,-123,-88,-137,-116,-136,47,-150,-93,-157,-95,-94,-96,]),'SIG_INT_128':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[48,48,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,48,48,-25,-20,-161,-23,-24,-21,-22,168,-91,-63,-59,-60,-61,-62,-125,48,48,168,-158,-159,-20,168,168,-148,48,-16,-17,-18,-64,-65,-19,-89,168,168,-92,48,48,-147,-99,-87,168,48,-149,-145,-146,-90,168,-124,-123,-88,-137,-116,-136,48,-150,-93,-157,-95,-94,-96,]),'UNSIG_INT_8':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[49,49,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,49,49,-25,-20,-161,-23,-24,-21,-22,159,-91,-63,-59,-60,-61,-62,-125,49,49,159,-158,-159,-20,159,159,-148,49,-16,-17,-18,-64,-65,-19,-89,159,159,-92,49,49,-147,-99,-87,159,49,-149,-145,-146,-90,159,-124,-123,-88,-137,-116,-136,49,-150,-93,-157,-95,-94,-96,]),'UNSIG_INT_16':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[50,50,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,50,50,-25,-20,-161,-23,-24,-21,-22,160,-91,-63,-59,-60,-61,-62,-125,50,50,160,-158,-159,-20,160,160,-148,50,-16,-17,-18,-64,-65,-19,-89,160,160,-92,50,50,-147,-99,-87,160,50,-149,-145,-146,-90,160,-124,-123,-88,-137,-116,-136,50,-150,-93,-157,-95,-94,-96,]),'UNSIG_INT_32':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[51,51,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,51,51,-25,-20,-161,-23,-24,-21,-22,161,-91,-63,-59,-60,-61,-62,-125,51,51,161,-158,-159,-20,161,161,-148,51,-16,-17,-18,-64,-65,-19,-89,161,161,-92,51,51,-147,-99,-87,161,51,-149,-145,-146,-90,161,-124,-123,-88,-137,-116,-136,51,-150,-93,-157,-95,-94,-96,]),'UNSIG_INT_64':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[52,52,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,52,52,-25,-20,-161,-23,-24,-21,-22,162,-91,-63,-59,-60,-61,-62,-125,52,52,162,-158,-159,-20,162,162,-148,52,-16,-17,-18,-64,-65,-19,-89,162,162,-92,52,52,-147,-99,-87,162,52,-149,-145,-146,-90,162,-124,-123,-88,-137,-116,-136,52,-150,-93,-157,-95,-94,-96,]),'UNSIG_INT_128':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,86,94,104,105,106,107,108,110,111,112,116,121,122,123,124,125,127,128,140,141,147,148,155,157,184,202,203,213,214,215,216,217,218,219,222,228,237,238,240,242,246,248,267,271,278,282,283,288,299,300,302,304,306,317,320,331,355,371,377,381,383,386,],[53,53,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,53,53,-25,-20,-161,-23,-24,-21,-22,163,-91,-63,-59,-60,-61,-62,-125,53,53,163,-158,-159,-20,163,163,-148,53,-16,-17,-18,-64,-65,-19,-89,163,163,-92,53,53,-147,-99,-87,163,53,-149,-145,-146,-90,163,-124,-123,-88,-137,-116,-136,53,-150,-93,-157,-95,-94,-96,]),'QUOTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,82,83,84,85,94,104,105,106,107,108,110,111,116,121,122,123,124,125,127,128,140,147,148,155,202,203,213,214,215,216,217,218,219,237,238,240,242,246,248,271,278,282,283,288,300,302,304,306,317,320,331,355,371,377,381,383,386,],[54,54,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-143,-144,-134,-135,-101,-102,-103,-104,54,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,54,54,-158,-159,-20,-148,54,-16,-17,-18,-64,-65,-19,-89,-92,54,54,-147,-99,-87,54,-149,-145,-146,-90,-124,-123,-88,-137,-116,-136,54,-150,-93,-157,-95,-94,-96,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,82,83,84,85,104,105,106,107,108,110,111,116,121,122,123,124,125,127,147,148,155,202,213,214,215,216,217,218,219,237,242,246,248,278,282,283,288,300,302,304,306,317,320,355,371,377,381,383,386,],[-138,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-2,-143,-144,-134,-135,-101,-102,-103,-104,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,-158,-159,-20,-148,-16,-17,-18,-64,-65,-19,-89,-92,-147,-99,-87,-149,-145,-146,-90,-124,-123,-88,-137,-116,-136,-150,-93,-157,-95,-94,-96,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,82,83,84,85,94,104,105,106,107,108,110,111,116,121,122,123,124,125,127,128,138,140,147,148,155,196,202,203,204,213,214,215,216,217,218,219,237,238,240,242,245,246,248,271,273,275,278,282,283,288,298,300,302,304,306,317,320,331,342,343,355,368,371,376,377,381,383,386,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-2,-143,-144,-134,-135,-101,-102,-103,-104,-138,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,-138,202,-138,-158,-159,-20,242,-148,-138,246,-16,-17,-18,-64,-65,-19,-89,-92,-138,-138,-147,278,-99,-87,-138,300,302,-149,-145,-146,-90,317,-124,-123,-88,-137,-116,-136,-138,355,-153,-150,-154,-93,-155,-157,-95,-94,-96,]),'KW_RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,82,83,84,85,104,105,106,107,108,110,111,116,121,122,123,124,125,127,147,148,155,202,213,214,215,216,217,218,219,237,242,246,248,278,282,283,288,300,302,304,306,317,320,331,343,355,371,377,381,383,386,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-117,-118,-119,-120,-121,-122,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-2,-143,-144,-134,-135,-101,-102,-103,-104,-25,-20,-161,-23,-24,-21,-22,-91,-63,-59,-60,-61,-62,-125,-158,-159,-20,-148,-16,-17,-18,-64,-65,-19,-89,-92,-147,-99,-87,-149,-145,-146,-90,-124,-123,-88,-137,-116,-136,344,356,-150,-93,-157,-95,-94,-96,]),'SEMI':([8,27,28,29,30,40,41,73,74,75,76,77,78,79,80,104,105,106,107,108,110,111,116,155,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,181,182,183,192,206,213,214,215,216,217,218,221,231,232,237,251,252,255,256,259,265,279,280,284,288,293,294,307,323,324,337,340,346,354,357,358,361,364,367,369,371,374,378,379,381,383,384,385,386,],[-129,82,83,84,85,-130,-131,117,-66,-67,-68,-69,-70,-71,-72,-25,147,148,-23,-24,-21,-22,-91,-20,219,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-105,-109,-23,-24,-151,-100,248,-16,-17,-18,-64,-65,-19,257,-107,-111,-92,282,283,-106,-110,288,292,-113,304,306,-90,-108,-112,320,-156,-132,-141,-133,360,-142,368,-152,371,373,376,377,-93,381,383,-139,-95,-94,386,-140,-96,]),'LNOT':([16,],[56,]),'DOT':([17,193,195,239,241,305,],[61,239,241,274,276,319,]),'EQUALS':([17,69,114,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,205,229,287,308,314,327,335,],[63,113,185,220,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,247,266,309,321,328,338,349,]),'TIMESEQUAL':([17,],[64,]),'DIVEQUAL':([17,],[65,]),'MODULUSEQUAL':([17,],[66,]),'PLUSEQUAL':([17,],[67,]),'MINUSEQUAL':([17,],[68,]),'KW_MUT':([18,208,325,],[70,250,336,]),'CADENA':([26,81,92,99,113,117,118,129,130,131,132,133,134,135,144,146,174,178,185,198,211,220,225,243,247,254,257,266,292,333,344,345,352,356,360,373,],[74,74,-73,142,74,74,74,74,-74,-75,-76,-77,-78,-79,74,74,74,74,74,-73,74,74,74,74,74,74,74,74,74,74,74,359,74,74,74,74,]),'INTEGER':([26,62,63,64,65,66,67,68,81,92,109,113,117,118,126,129,130,131,132,133,134,135,144,145,146,149,150,151,152,174,178,185,198,211,220,225,243,247,254,257,266,276,292,333,344,352,356,360,373,],[75,107,-41,-42,-43,-44,-45,-46,75,-73,107,181,75,75,195,75,-74,-75,-76,-77,-78,-79,75,210,75,107,107,107,216,75,181,181,-73,75,181,261,75,75,75,75,181,303,75,75,181,75,181,75,75,]),'CHAR':([26,81,92,113,117,118,129,130,131,132,133,134,135,144,146,174,178,185,198,211,220,225,243,247,254,257,266,292,333,344,352,356,360,373,],[76,76,-73,76,76,76,76,-74,-75,-76,-77,-78,-79,76,76,76,76,76,-73,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'FLOAT':([26,62,63,64,65,66,67,68,81,92,109,113,117,118,129,130,131,132,133,134,135,144,146,149,150,151,153,174,178,185,198,211,220,225,243,247,254,257,266,292,333,344,352,356,360,373,],[77,108,-41,-42,-43,-44,-45,-46,77,-73,108,182,77,77,77,-74,-75,-76,-77,-78,-79,77,77,108,108,108,217,77,182,182,-73,77,182,262,77,77,77,77,182,77,77,182,77,182,77,77,]),'KW_FALSE':([26,81,92,113,117,118,129,130,131,132,133,134,135,144,146,174,178,185,198,211,220,225,243,247,254,257,266,292,333,344,352,356,360,373,],[78,78,-73,78,78,78,78,-74,-75,-76,-77,-78,-79,78,78,78,78,78,-73,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'KW_TRUE':([26,81,92,113,117,118,129,130,131,132,133,134,135,144,146,174,178,185,198,211,220,225,243,247,254,257,266,292,333,344,352,356,360,373,],[79,79,-73,79,79,79,79,-74,-75,-76,-77,-78,-79,79,79,79,79,79,-73,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'LPAREN':([26,36,38,56,62,63,64,65,66,67,68,71,81,92,95,100,101,102,103,109,113,117,118,129,130,131,132,133,134,135,144,146,149,150,151,174,178,185,198,211,220,225,243,247,254,257,266,289,290,291,292,315,316,332,333,344,352,356,360,362,373,375,],[81,93,93,99,109,-41,-42,-43,-44,-45,-46,115,81,-73,93,143,144,145,146,109,178,81,81,81,-74,-75,-76,-77,-78,-79,81,81,109,109,109,81,225,178,-73,81,178,225,81,81,81,81,178,310,311,312,81,329,330,345,81,225,81,225,81,372,81,382,]),'KW_AS':([31,32,33,42,43,44,45,46,47,48,49,50,51,52,53,],[86,87,88,-57,-58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,]),'COLON':([35,69,97,98,114,177,179,180,224,226,227,233,234,268,269,322,334,335,339,351,353,],[90,112,141,-128,184,224,226,227,260,263,264,268,269,296,297,334,348,350,353,363,366,]),'LBRACE':([37,74,75,76,77,78,79,80,91,96,139,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,192,193,194,197,236,277,301,303,318,],[94,-66,-67,-68,-69,-70,-71,-72,128,140,203,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-100,238,240,-83,271,-84,-127,-126,331,]),'KW_READ_LINE':([61,],[100,]),'KW_PUSH_BACK':([61,],[101,]),'KW_REMOVE':([61,],[102,]),'KW_INSERT':([61,],[103,]),'RBRACKET':([72,73,74,75,76,77,78,79,80,120,190,191,192,223,286,313,346,347,364,365,370,380,],[116,-85,-66,-67,-68,-69,-70,-71,-72,-85,237,-86,-100,259,308,327,-85,361,-85,374,378,384,]),'COMMA':([73,74,75,76,77,78,79,80,120,142,181,182,186,192,212,261,262,346,364,],[118,-66,-67,-68,-69,-70,-71,-72,118,207,-67,-69,235,-100,254,-67,-69,118,118,]),'RPAREN':([74,75,76,77,78,79,80,104,107,108,110,111,115,116,119,120,136,142,154,155,181,182,186,187,188,189,191,192,209,210,213,214,215,216,217,218,237,244,249,253,261,262,270,281,285,288,310,311,326,329,341,359,371,372,381,382,383,386,],[-66,-67,-68,-69,-70,-71,-72,-25,-23,-24,-21,-22,-138,-91,192,-85,198,206,218,-20,-23,-24,-97,236,-114,-115,-86,-100,251,252,-16,-17,-18,-64,-65,-19,-92,-82,280,284,-23,-24,-98,305,307,-90,323,324,337,340,354,369,-93,379,-95,385,-94,-96,]),'KW_IN':([89,],[126,]),'EQ':([92,198,],[130,130,]),'NE':([92,198,],[131,131,]),'GE':([92,198,],[132,132,]),'LE':([92,198,],[133,133,]),'GT':([92,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,198,258,272,295,],[134,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,134,287,299,314,]),'LT':([92,158,198,230,],[135,222,135,267,]),'PLUS':([104,105,106,107,108,110,111,154,155,181,182,183,213,214,215,216,217,218,261,262,],[-25,-20,149,-23,-24,-21,-22,149,-20,-23,-24,149,149,149,149,-64,-65,-19,-23,-24,]),'MINUS':([104,105,106,107,108,110,111,154,155,181,182,183,213,214,215,216,217,218,236,261,262,],[-25,-20,150,-23,-24,-21,-22,150,-20,-23,-24,150,150,150,150,-64,-65,-19,272,-23,-24,]),'TIMES':([104,105,106,107,108,110,111,154,155,181,182,183,213,214,215,216,217,218,261,262,],[-25,-20,151,-23,-24,-21,-22,151,-20,-23,-24,151,151,151,151,-64,-65,-19,-23,-24,]),'DIVIDE':([107,108,181,182,261,262,],[152,153,152,153,152,153,]),'KW_LINKEDLIST':([112,113,184,185,309,328,],[158,180,230,234,322,339,]),'KW_BOOLEAN':([112,141,157,184,222,228,267,299,],[171,171,171,171,171,171,171,171,]),'KW_STRING':([112,141,157,184,222,228,267,299,],[172,172,172,172,172,172,172,172,]),'KW_CHARACTER':([112,141,157,184,222,228,267,299,],[173,173,173,173,173,173,173,173,]),'KW_IO':([113,],[177,]),'KW_HASHMAP':([113,185,],[179,233,]),'LOR':([137,],[200,]),'LAND':([137,],[201,]),'AND':([143,145,],[208,211,]),'KW_STDIN':([260,],[289,]),'KW_NEW':([263,296,348,366,],[290,315,362,375,]),'KW_FROM':([264,297,],[291,316,]),'KW_EXPECT':([319,],[332,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main_rule':([0,2,94,128,140,203,238,240,271,331,],[1,55,138,196,204,245,273,275,298,343,]),'father_rule':([0,2,94,128,140,203,238,240,271,331,],[2,2,2,2,2,2,2,2,2,2,]),'print':([0,2,94,128,140,203,238,240,271,331,],[3,3,3,3,3,3,3,3,3,3,]),'dvariable':([0,2,94,128,140,203,238,240,271,331,],[4,4,4,4,4,4,4,4,4,4,]),'function':([0,2,94,128,140,203,238,240,271,331,],[5,5,5,5,5,5,5,5,5,5,]),'control_str':([0,2,94,128,140,203,238,240,271,331,],[6,6,6,6,6,6,6,6,6,6,]),'void':([0,2,94,115,128,140,203,238,240,271,331,],[7,7,7,188,7,7,7,7,7,7,7,]),'array':([0,2,94,128,140,203,238,240,271,312,330,331,],[8,8,8,8,8,8,8,8,8,326,341,8,]),'linkedlist_methods':([0,2,94,128,140,203,238,240,271,331,],[9,9,9,9,9,9,9,9,9,9,]),'hashmap_methods':([0,2,94,128,140,203,238,240,271,331,],[10,10,10,10,10,10,10,10,10,10,]),'initialization':([0,2,94,128,140,203,238,240,271,331,],[11,11,11,11,11,11,11,11,11,11,]),'input':([0,2,94,128,140,203,238,240,271,331,],[12,12,12,12,12,12,12,12,12,12,]),'assignation':([0,2,94,128,140,203,238,240,271,331,],[13,13,13,13,13,13,13,13,13,13,]),'declare_data_type':([0,2,94,128,140,203,238,240,271,331,],[14,14,14,14,14,14,14,14,14,14,]),'casting':([0,2,94,128,140,203,238,240,271,331,],[15,15,15,15,15,15,15,15,15,15,]),'for_str':([0,2,90,94,128,140,203,238,240,271,331,],[20,20,127,20,20,20,20,20,20,20,20,]),'for_str_tagged':([0,2,94,128,140,203,238,240,271,331,],[21,21,21,21,21,21,21,21,21,21,]),'if':([0,2,94,128,140,203,238,240,271,331,],[22,22,22,22,22,22,22,22,22,22,]),'else':([0,2,94,128,140,203,238,240,271,331,],[23,23,23,23,23,23,23,23,23,23,]),'else_if':([0,2,94,128,140,203,238,240,271,331,],[24,24,24,24,24,24,24,24,24,24,]),'while':([0,2,94,128,140,203,238,240,271,331,],[25,25,25,25,25,25,25,25,25,25,]),'let_initialization':([0,2,94,128,140,203,238,240,271,331,],[27,27,27,27,27,27,27,27,27,27,]),'const_initialization':([0,2,94,128,140,203,238,240,271,331,],[28,28,28,28,28,28,28,28,28,28,]),'data_str':([0,2,94,128,140,203,238,240,271,331,],[29,29,29,29,29,29,29,29,29,29,]),'input_init':([0,2,94,128,140,203,238,240,271,331,],[30,30,30,30,30,30,30,30,30,30,]),'flotante':([0,2,86,87,88,94,128,140,203,238,240,271,331,],[31,31,121,124,125,31,31,31,31,31,31,31,31,]),'sigint':([0,2,86,94,128,140,203,238,240,271,331,],[32,32,122,32,32,32,32,32,32,32,32,]),'unsigint':([0,2,86,94,128,140,203,238,240,271,331,],[33,33,123,33,33,33,33,33,33,33,33,]),'label':([0,2,94,128,140,203,238,240,271,331,],[35,35,35,35,35,35,35,35,35,35,]),'hashmap':([0,2,94,128,140,203,238,240,271,331,],[40,40,40,40,40,40,40,40,40,40,]),'linkedlist':([0,2,94,128,140,203,238,240,271,331,],[41,41,41,41,41,41,41,41,41,41,]),'linkedlist_push':([17,],[57,]),'linkedlist_remove':([17,],[58,]),'hashmap_insert':([17,],[59,]),'hashmap_remove':([17,],[60,]),'assign_operators':([17,],[62,]),'mdata':([26,81,118,174,178,225,333,352,],[72,119,191,223,119,119,347,365,]),'data':([26,81,113,117,118,129,144,146,174,178,185,211,220,225,243,247,254,257,266,292,333,344,352,356,360,373,],[73,120,175,190,120,197,209,212,120,120,231,253,255,120,277,279,285,286,293,313,346,358,364,358,370,380,]),'tuple':([26,81,113,117,118,129,144,146,174,178,185,211,220,225,243,247,254,257,266,292,333,344,352,356,360,373,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'conditional':([36,38,95,],[91,96,139,]),'number':([62,109,113,149,150,151,178,185,220,225,266,344,356,],[105,155,155,155,155,155,155,155,155,155,155,155,155,]),'expression':([62,109,113,149,150,151,178,185,220,225,266,344,356,],[106,154,183,213,214,215,154,183,183,154,183,183,183,]),'division':([62,109,113,149,150,151,178,185,220,225,266,344,356,],[110,110,110,110,110,110,110,110,110,110,110,110,110,]),'variable':([62,109,113,149,150,151,178,185,220,225,266,344,356,],[111,111,111,111,111,111,111,111,111,111,111,111,111,]),'comparator':([92,198,],[129,243,]),'lvariable':([93,],[136,]),'data_type':([112,141,157,184,222,228,267,299,],[156,205,221,229,258,265,295,318,]),'expression_var':([113,185,220,266,344,356,],[176,232,256,294,357,367,]),'arguments':([115,],[187,]),'variables':([115,235,],[189,270,]),'range':([126,],[194,]),'logic':([137,],[199,]),'return':([331,],[342,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main_rule","S'",1,None,None,None),
  ('main_rule -> father_rule','main_rule',1,'p_main_rule','pyacc.py',14),
  ('main_rule -> father_rule main_rule','main_rule',2,'p_main_rule','pyacc.py',15),
  ('father_rule -> print','father_rule',1,'p_father_rule','pyacc.py',20),
  ('father_rule -> dvariable','father_rule',1,'p_father_rule','pyacc.py',21),
  ('father_rule -> function','father_rule',1,'p_father_rule','pyacc.py',22),
  ('father_rule -> control_str','father_rule',1,'p_father_rule','pyacc.py',23),
  ('father_rule -> void','father_rule',1,'p_father_rule','pyacc.py',24),
  ('father_rule -> array','father_rule',1,'p_father_rule','pyacc.py',25),
  ('father_rule -> linkedlist_methods','father_rule',1,'p_father_rule','pyacc.py',26),
  ('father_rule -> hashmap_methods','father_rule',1,'p_father_rule','pyacc.py',27),
  ('father_rule -> initialization','father_rule',1,'p_father_rule','pyacc.py',28),
  ('father_rule -> input','father_rule',1,'p_father_rule','pyacc.py',29),
  ('father_rule -> assignation','father_rule',1,'p_father_rule','pyacc.py',30),
  ('father_rule -> declare_data_type','father_rule',1,'p_father_rule','pyacc.py',31),
  ('father_rule -> casting','father_rule',1,'p_father_rule','pyacc.py',32),
  ('expression -> expression PLUS expression','expression',3,'p_expression','pyacc.py',38),
  ('expression -> expression MINUS expression','expression',3,'p_expression','pyacc.py',39),
  ('expression -> expression TIMES expression','expression',3,'p_expression','pyacc.py',40),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','pyacc.py',41),
  ('expression -> number','expression',1,'p_expression','pyacc.py',42),
  ('expression -> division','expression',1,'p_expression','pyacc.py',43),
  ('expression -> variable','expression',1,'p_expression','pyacc.py',44),
  ('number -> INTEGER','number',1,'p_number','pyacc.py',49),
  ('number -> FLOAT','number',1,'p_number','pyacc.py',50),
  ('variable -> VARIABLE','variable',1,'p_variable','pyacc.py',53),
  ('data_type -> UNSIG_INT_8','data_type',1,'p_data_type','pyacc.py',57),
  ('data_type -> UNSIG_INT_16','data_type',1,'p_data_type','pyacc.py',58),
  ('data_type -> UNSIG_INT_32','data_type',1,'p_data_type','pyacc.py',59),
  ('data_type -> UNSIG_INT_64','data_type',1,'p_data_type','pyacc.py',60),
  ('data_type -> UNSIG_INT_128','data_type',1,'p_data_type','pyacc.py',61),
  ('data_type -> SIG_INT_8','data_type',1,'p_data_type','pyacc.py',62),
  ('data_type -> SIG_INT_16','data_type',1,'p_data_type','pyacc.py',63),
  ('data_type -> SIG_INT_32','data_type',1,'p_data_type','pyacc.py',64),
  ('data_type -> SIG_INT_64','data_type',1,'p_data_type','pyacc.py',65),
  ('data_type -> SIG_INT_128','data_type',1,'p_data_type','pyacc.py',66),
  ('data_type -> FLOAT_32','data_type',1,'p_data_type','pyacc.py',67),
  ('data_type -> FLOAT_64','data_type',1,'p_data_type','pyacc.py',68),
  ('data_type -> KW_BOOLEAN','data_type',1,'p_data_type','pyacc.py',69),
  ('data_type -> KW_STRING','data_type',1,'p_data_type','pyacc.py',70),
  ('data_type -> KW_CHARACTER','data_type',1,'p_data_type','pyacc.py',71),
  ('assign_operators -> EQUALS','assign_operators',1,'p_assign_operators','pyacc.py',75),
  ('assign_operators -> TIMESEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',76),
  ('assign_operators -> DIVEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',77),
  ('assign_operators -> MODULUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',78),
  ('assign_operators -> PLUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',79),
  ('assign_operators -> MINUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',80),
  ('sigint -> SIG_INT_8','sigint',1,'p_semantic_cast_sigint','pyacc.py',84),
  ('sigint -> SIG_INT_16','sigint',1,'p_semantic_cast_sigint','pyacc.py',85),
  ('sigint -> SIG_INT_32','sigint',1,'p_semantic_cast_sigint','pyacc.py',86),
  ('sigint -> SIG_INT_64','sigint',1,'p_semantic_cast_sigint','pyacc.py',87),
  ('sigint -> SIG_INT_128','sigint',1,'p_semantic_cast_sigint','pyacc.py',88),
  ('unsigint -> UNSIG_INT_8','unsigint',1,'p_semantic_cast_unsigint','pyacc.py',91),
  ('unsigint -> UNSIG_INT_16','unsigint',1,'p_semantic_cast_unsigint','pyacc.py',92),
  ('unsigint -> UNSIG_INT_32','unsigint',1,'p_semantic_cast_unsigint','pyacc.py',93),
  ('unsigint -> UNSIG_INT_64','unsigint',1,'p_semantic_cast_unsigint','pyacc.py',94),
  ('unsigint -> UNSIG_INT_128','unsigint',1,'p_semantic_cast_unsigint','pyacc.py',95),
  ('flotante -> FLOAT_32','flotante',1,'p_semantic_cast_float','pyacc.py',98),
  ('flotante -> FLOAT_64','flotante',1,'p_semantic_cast_float','pyacc.py',99),
  ('casting -> flotante KW_AS sigint','casting',3,'p_semantic_casting','pyacc.py',102),
  ('casting -> flotante KW_AS unsigint','casting',3,'p_semantic_casting','pyacc.py',103),
  ('casting -> sigint KW_AS flotante','casting',3,'p_semantic_casting','pyacc.py',104),
  ('casting -> unsigint KW_AS flotante','casting',3,'p_semantic_casting','pyacc.py',105),
  ('casting -> flotante KW_AS flotante','casting',3,'p_semantic_casting','pyacc.py',106),
  ('division -> INTEGER DIVIDE INTEGER','division',3,'p_semantic_division','pyacc.py',109),
  ('division -> FLOAT DIVIDE FLOAT','division',3,'p_semantic_division','pyacc.py',110),
  ('data -> CADENA','data',1,'p_data','pyacc.py',113),
  ('data -> INTEGER','data',1,'p_data','pyacc.py',114),
  ('data -> CHAR','data',1,'p_data','pyacc.py',115),
  ('data -> FLOAT','data',1,'p_data','pyacc.py',116),
  ('data -> KW_FALSE','data',1,'p_data','pyacc.py',117),
  ('data -> KW_TRUE','data',1,'p_data','pyacc.py',118),
  ('data -> tuple','data',1,'p_data','pyacc.py',119),
  ('comparator -> <empty>','comparator',0,'p_comparator','pyacc.py',122),
  ('comparator -> EQ','comparator',1,'p_comparator','pyacc.py',123),
  ('comparator -> NE','comparator',1,'p_comparator','pyacc.py',124),
  ('comparator -> GE','comparator',1,'p_comparator','pyacc.py',125),
  ('comparator -> LE','comparator',1,'p_comparator','pyacc.py',126),
  ('comparator -> GT','comparator',1,'p_comparator','pyacc.py',127),
  ('comparator -> LT','comparator',1,'p_comparator','pyacc.py',128),
  ('logic -> LOR','logic',1,'p_logic','pyacc.py',131),
  ('logic -> LAND','logic',1,'p_logic','pyacc.py',132),
  ('lvariable -> VARIABLE logic VARIABLE','lvariable',3,'p_logic_variable','pyacc.py',135),
  ('conditional -> VARIABLE comparator data','conditional',3,'p_conditional','pyacc.py',138),
  ('conditional -> LPAREN lvariable RPAREN comparator data','conditional',5,'p_conditional','pyacc.py',139),
  ('mdata -> data','mdata',1,'p_mdata','pyacc.py',142),
  ('mdata -> data COMMA mdata','mdata',3,'p_mdata','pyacc.py',143),
  ('print -> KW_PRINT LNOT LPAREN CADENA RPAREN SEMI','print',6,'p_print','pyacc.py',146),
  ('print -> KW_PRINT LNOT LPAREN CADENA COMMA VARIABLE RPAREN SEMI','print',8,'p_print','pyacc.py',147),
  ('dvariable -> KW_LET VARIABLE COLON data_type SEMI','dvariable',5,'p_declare_variable','pyacc.py',150),
  ('array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET SEMI','array',7,'p_array','pyacc.py',153),
  ('array -> LBRACKET mdata RBRACKET','array',3,'p_array','pyacc.py',154),
  ('array -> LBRACKET data SEMI data RBRACKET','array',5,'p_array','pyacc.py',155),
  ('array -> KW_LET VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET mdata RBRACKET SEMI','array',13,'p_array','pyacc.py',156),
  ('array -> KW_LET VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET data SEMI data RBRACKET SEMI','array',15,'p_array','pyacc.py',157),
  ('array -> KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET mdata RBRACKET SEMI','array',14,'p_array','pyacc.py',158),
  ('array -> KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET data SEMI data RBRACKET SEMI','array',16,'p_array','pyacc.py',159),
  ('variables -> VARIABLE','variables',1,'p_variables','pyacc.py',162),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','pyacc.py',163),
  ('while -> KW_WHILE conditional LBRACE main_rule RBRACE','while',5,'p_while','pyacc.py',166),
  ('tuple -> LPAREN mdata RPAREN','tuple',3,'p_tuple','pyacc.py',172),
  ('initialization -> let_initialization SEMI','initialization',2,'p_initialization','pyacc.py',176),
  ('initialization -> const_initialization SEMI','initialization',2,'p_initialization','pyacc.py',177),
  ('initialization -> data_str SEMI','initialization',2,'p_initialization','pyacc.py',178),
  ('initialization -> input_init SEMI','initialization',2,'p_initialization','pyacc.py',179),
  ('let_initialization -> KW_LET VARIABLE EQUALS data','let_initialization',4,'p_let_initialization','pyacc.py',183),
  ('let_initialization -> KW_LET VARIABLE COLON data_type EQUALS data','let_initialization',6,'p_let_initialization','pyacc.py',184),
  ('let_initialization -> KW_LET KW_MUT VARIABLE EQUALS data','let_initialization',5,'p_let_initialization','pyacc.py',185),
  ('let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS data','let_initialization',7,'p_let_initialization','pyacc.py',186),
  ('let_initialization -> KW_LET VARIABLE EQUALS expression_var','let_initialization',4,'p_let_initialization','pyacc.py',187),
  ('let_initialization -> KW_LET VARIABLE COLON data_type EQUALS expression_var','let_initialization',6,'p_let_initialization','pyacc.py',188),
  ('let_initialization -> KW_LET KW_MUT VARIABLE EQUALS expression_var','let_initialization',5,'p_let_initialization','pyacc.py',189),
  ('let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var','let_initialization',7,'p_let_initialization','pyacc.py',190),
  ('const_initialization -> KW_CONST VARIABLE COLON data_type EQUALS data','const_initialization',6,'p_const_initialization','pyacc.py',194),
  ('arguments -> void','arguments',1,'p_arguments','pyacc.py',198),
  ('arguments -> variables','arguments',1,'p_arguments','pyacc.py',199),
  ('function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE','function',8,'p_function','pyacc.py',203),
  ('control_str -> for_str','control_str',1,'p_control_str','pyacc.py',207),
  ('control_str -> for_str_tagged','control_str',1,'p_control_str','pyacc.py',208),
  ('control_str -> if','control_str',1,'p_control_str','pyacc.py',209),
  ('control_str -> else','control_str',1,'p_control_str','pyacc.py',210),
  ('control_str -> else_if','control_str',1,'p_control_str','pyacc.py',211),
  ('control_str -> while','control_str',1,'p_control_str','pyacc.py',212),
  ('for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE','for_str',7,'p_for_str','pyacc.py',216),
  ('for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE','for_str',7,'p_for_str','pyacc.py',217),
  ('for_str_tagged -> label COLON for_str','for_str_tagged',3,'p_for_str_tagged','pyacc.py',221),
  ('range -> INTEGER DOT DOT INTEGER','range',4,'p_range','pyacc.py',225),
  ('range -> VARIABLE DOT DOT VARIABLE','range',4,'p_range','pyacc.py',226),
  ('label -> QUOTE VARIABLE','label',2,'p_label','pyacc.py',230),
  ('data_str -> array','data_str',1,'p_data_str','pyacc.py',234),
  ('data_str -> hashmap','data_str',1,'p_data_str','pyacc.py',235),
  ('data_str -> linkedlist','data_str',1,'p_data_str','pyacc.py',236),
  ('hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN','hashmap',9,'p_hashmap','pyacc.py',240),
  ('hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN','hashmap',10,'p_hashmap','pyacc.py',241),
  ('hashmap_methods -> VARIABLE hashmap_insert','hashmap_methods',2,'p_hashmap_methods','pyacc.py',245),
  ('hashmap_methods -> VARIABLE hashmap_remove','hashmap_methods',2,'p_hashmap_methods','pyacc.py',246),
  ('hashmap_insert -> DOT KW_INSERT LPAREN data COMMA data RPAREN SEMI','hashmap_insert',8,'p_hashmap_insert','pyacc.py',250),
  ('hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI','hashmap_remove',7,'p_hashmap_remove','pyacc.py',254),
  ('void -> <empty>','void',0,'p_void','pyacc.py',258),
  ('linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN','linkedlist',14,'p_linkedlist_empty','pyacc.py',266),
  ('linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN','linkedlist',15,'p_linkedlist_empty','pyacc.py',267),
  ('linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN','linkedlist',10,'p_linkedlist_array','pyacc.py',270),
  ('linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN','linkedlist',11,'p_linkedlist_array','pyacc.py',271),
  ('linkedlist_methods -> VARIABLE linkedlist_push','linkedlist_methods',2,'p_linkedlist_methods','pyacc.py',274),
  ('linkedlist_methods -> VARIABLE linkedlist_remove','linkedlist_methods',2,'p_linkedlist_methods','pyacc.py',275),
  ('linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI','linkedlist_push',6,'p_linkedlist_push','pyacc.py',278),
  ('linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI','linkedlist_remove',6,'p_linkedlist_remove','pyacc.py',281),
  ('if -> KW_IF conditional LBRACE main_rule RBRACE','if',5,'p_if','pyacc.py',286),
  ('else -> KW_ELSE LBRACE main_rule RBRACE','else',4,'p_else','pyacc.py',289),
  ('else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE','else_if',6,'p_else_if','pyacc.py',292),
  ('function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE','function',11,'p_function_return','pyacc.py',297),
  ('expression_var -> expression','expression_var',1,'p_expression_var','pyacc.py',300),
  ('expression_var -> data','expression_var',1,'p_expression_var','pyacc.py',301),
  ('return -> main_rule','return',1,'p_return_statement','pyacc.py',304),
  ('return -> KW_RETURN expression_var SEMI','return',3,'p_return_statement','pyacc.py',305),
  ('return -> main_rule KW_RETURN expression_var SEMI','return',4,'p_return_statement','pyacc.py',306),
  ('input_init -> KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN','input_init',9,'p_input_init','pyacc.py',311),
  ('input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI','input',14,'p_input','pyacc.py',314),
  ('assignation -> VARIABLE assign_operators number SEMI','assignation',4,'p_assignation','pyacc.py',319),
  ('assignation -> VARIABLE assign_operators expression SEMI','assignation',4,'p_assignation','pyacc.py',320),
  ('assignation -> VARIABLE assign_operators number','assignation',3,'p_assignation','pyacc.py',321),
  ('assignation -> VARIABLE assign_operators expression','assignation',3,'p_assignation','pyacc.py',322),
  ('declare_data_type -> KW_LET VARIABLE COLON data_type SEMI','declare_data_type',5,'p_declare_datat_type','pyacc.py',327),
]
