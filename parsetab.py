
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDE CADENA CHAR COLON COMMA COMMENT DIVEQUAL DIVIDE DOT EQ EQUALS FLOAT FLOAT_32 FLOAT_64 GE GT HASH INTEGER KW_ABSTRACT KW_AS KW_ASYNC KW_AWAIT KW_BECOME KW_BOOLEAN KW_BOX KW_BREAK KW_CHARACTER KW_CONST KW_CONTINUE KW_CRATE KW_DO KW_DYN KW_ELSE KW_ENUM KW_EXPECT KW_EXTERN KW_FALSE KW_FINAL KW_FN KW_FOR KW_FROM KW_HASHMAP KW_IF KW_IMPL KW_IN KW_INSERT KW_IO KW_LET KW_LINKEDLIST KW_LOOP KW_MACRO KW_MATCH KW_MOD KW_MOVE KW_MUT KW_NEW KW_OVERRIDE KW_PRINT KW_PRIV KW_PUB KW_PUSH_BACK KW_READ_LINE KW_REF KW_REMOVE KW_RETURN KW_SELFTYPE KW_SELFVALUE KW_STATIC KW_STATICLIFETIME KW_STDIN KW_STRING KW_STRUCT KW_SUPER KW_TRAIT KW_TRUE KW_TRY KW_TYPE KW_TYPEOF KW_UNION KW_UNSAFE KW_UNSIZED KW_USE KW_VIRTUAL KW_WHERE KW_WHILE KW_YIELD LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MINUSEQUAL MODULUS MODULUSEQUAL NE ORE OREXE PLUS PLUSEQUAL QMARK QUOTE RBRACE RBRACKET RPAREN SEMI SIG_INT_128 SIG_INT_16 SIG_INT_32 SIG_INT_64 SIG_INT_8 TIMES TIMESEQUAL UNSIG_INT_128 UNSIG_INT_16 UNSIG_INT_32 UNSIG_INT_64 UNSIG_INT_8 VARIABLEmain_rule : father_rule\n    | father_rule main_rulefather_rule : print\n    | dvariable\n    | function\n    | variables\n    | control_str\n    | expression\n    | void\n    | data_str\n    | array\n    | linkedlist_methods\n    | hashmap_methods\n    | initialization\n    | input\n    | assignation\n    | declare_data_typeexpression : expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | expression DIVIDE expression\n    | LPAREN expression RPAREN\n    | numbernumber : INTEGER\n    | FLOAT\n    | VARIABLEdata_type : UNSIG_INT_8\n                | UNSIG_INT_16\n                | UNSIG_INT_32\n                | UNSIG_INT_64\n                | UNSIG_INT_128\n                | SIG_INT_8\n                | SIG_INT_16\n                | SIG_INT_32\n                | SIG_INT_64\n                | SIG_INT_128\n                | FLOAT_32\n                | FLOAT_64\n                | KW_BOOLEAN\n                | KW_STRINGassign_operators : EQUALS\n                        | TIMESEQUAL \n                        | DIVEQUAL\n                        | MODULUSEQUAL\n                        | PLUSEQUAL \n                        | MINUSEQUALdata : CADENA\n    | INTEGER\n    | CHAR\n    | FLOAT\n    | KW_FALSE\n    | KW_TRUE\n    | tuplecomparator :\n    | EQ\n    | NE\n    | GE\n    | LE\n    | GT\n    | LTlogic : LOR\n    | LANDlvariable : VARIABLE logic VARIABLEconditional : VARIABLE comparator data\n    | LPAREN lvariable RPAREN comparator datamdata : data\n    | data COMMA mdataprint : KW_PRINT LNOT LPAREN CADENA RPAREN SEMI\n    | KW_PRINT LNOT LPAREN CADENA COMMA VARIABLE RPAREN SEMIdvariable : KW_LET VARIABLE SEMIarray : KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET SEMI\n    | LBRACKET mdata RBRACKET\n    | LBRACKET data SEMI data RBRACKET\n    | KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET mdata RBRACKET SEMI\n    | KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET data SEMI data RBRACKET SEMIvariables : VARIABLE \n    | VARIABLE COMMA variableswhile : KW_WHILE conditional LBRACE main_rule RBRACEtuple : LPAREN mdata RPARENinitialization : let_initialization SEMI \n    | const_initialization SEMI \n    | data_str SEMI\n    | input_init SEMIlet_initialization : KW_LET VARIABLE EQUALS data\n    | KW_LET VARIABLE COLON data_type EQUALS data\n    | KW_LET KW_MUT VARIABLE EQUALS data\n    | KW_LET KW_MUT VARIABLE COLON data_type EQUALS data\n    | KW_LET VARIABLE EQUALS expression_var\n    | KW_LET VARIABLE COLON data_type EQUALS expression_var\n    | KW_LET KW_MUT VARIABLE EQUALS expression_var\n    | KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_varconst_initialization : KW_CONST VARIABLE COLON data_type EQUALS dataarguments : void\n    | variablesfunction : KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACEcontrol_str : for_str\n    | for_str_tagged\n    | if\n    | else\n    | else_if\n    | whilefor_str : KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE\n    | KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACEfor_str_tagged : label COLON for_strrange : INTEGER DOT DOT INTEGER\n    | VARIABLE DOT DOT VARIABLElabel : QUOTE VARIABLEdata_str : array\n    | hashmap\n    | linkedlisthashmap : KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN\n    | KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN\n    | KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN\n    | KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPARENhashmap_methods : VARIABLE hashmap_insert\n    | VARIABLE hashmap_removehashmap_insert : DOT KW_INSERT LPAREN mdata RPAREN SEMIhashmap_remove : DOT KW_REMOVE LPAREN AND data RPAREN SEMIvoid : linkedlist : KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN\n                  | KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPARENlinkedlist : KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN\n                  | KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPARENlinkedlist_methods : VARIABLE linkedlist_push\n    | VARIABLE linkedlist_removelinkedlist_push : DOT KW_PUSH_BACK LPAREN data RPAREN SEMIlinkedlist_remove : DOT KW_REMOVE LPAREN INTEGER RPAREN SEMIif : KW_IF conditional LBRACE main_rule RBRACEelse : KW_ELSE LBRACE main_rule RBRACEelse_if : KW_ELSE KW_IF conditional LBRACE main_rule RBRACEfunction : KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACEexpression_var : expression\n                      | datareturn : main_rule\n              | KW_RETURN expression_var SEMI\n              | main_rule KW_RETURN expression_var SEMIinput_init : KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPARENinput : VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMIassignation : VARIABLE assign_operators numberdeclare_data_type : KW_LET VARIABLE COLON data_type SEMI'
    
_lr_action_items = {'KW_PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,130,180,181,196,207,208,210,212,216,218,239,246,250,251,253,254,268,270,272,274,285,288,299,303,304,308,320,321,322,340,341,343,346,347,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-82,-26,-124,-125,-115,-116,-80,-81,-83,18,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,18,18,-129,18,-140,-73,18,18,-128,-78,-68,18,-130,-126,-127,-117,-71,-103,-102,-69,-118,-95,-111,18,-113,-122,-112,-114,-123,-131,-138,-120,-74,-121,-75,]),'KW_LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,130,180,181,196,207,208,210,212,216,218,239,246,250,251,253,254,268,270,272,274,276,277,285,288,297,298,299,303,304,308,320,321,322,340,341,343,346,347,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-82,-26,-124,-125,-115,-116,-80,-81,-83,21,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,21,21,-129,21,-140,-73,21,21,-128,-78,-68,21,-130,-126,-127,-117,-71,-103,-102,-69,-118,289,289,-95,-111,289,289,21,-113,-122,-112,-114,-123,-131,-138,-120,-74,-121,-75,]),'KW_FN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,130,180,181,196,207,208,210,212,216,218,239,246,250,251,253,254,268,270,272,274,285,288,299,303,304,308,320,321,322,340,341,343,346,347,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-82,-26,-124,-125,-115,-116,-80,-81,-83,22,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,22,22,-129,22,-140,-73,22,22,-128,-78,-68,22,-130,-126,-127,-117,-71,-103,-102,-69,-118,-95,-111,22,-113,-122,-112,-114,-123,-131,-138,-120,-74,-121,-75,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,36,38,40,41,42,43,44,46,47,48,49,50,53,54,55,56,57,58,60,61,62,63,64,65,66,68,80,81,82,87,88,89,93,94,95,96,98,99,100,105,106,107,110,111,116,117,118,130,139,164,177,178,179,180,181,185,193,196,197,207,208,210,212,216,218,220,235,239,242,246,250,251,253,254,268,270,272,274,285,288,289,299,302,303,304,308,313,320,321,322,323,340,341,343,346,347,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,53,-26,67,69,-96,-97,-98,-99,-100,-101,-23,-109,-110,83,86,86,-24,-25,91,92,53,53,53,53,-82,-26,99,-124,-125,-115,-116,53,-41,-42,-43,-44,-45,-46,109,-80,-81,-83,127,20,86,-18,-19,-20,-21,-22,-76,-77,-139,-70,53,99,-72,171,-104,20,20,53,53,214,-61,-62,-129,20,219,53,-140,53,-73,20,20,-128,-78,-68,249,53,20,269,-130,-126,-127,-117,-71,-103,-102,-69,-118,-95,-111,301,20,316,-113,-122,-112,53,-114,-123,-131,53,-138,-120,-74,-121,-75,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,32,38,40,41,42,46,47,48,49,50,51,53,55,56,57,58,69,79,80,81,82,86,88,89,93,94,95,96,98,99,100,101,102,103,104,105,106,107,111,112,113,117,118,119,120,121,122,123,124,125,130,134,136,137,139,164,176,180,181,189,193,196,197,207,208,210,212,213,216,217,218,235,239,246,250,251,253,254,255,256,257,258,260,268,270,272,274,282,283,284,285,288,299,300,303,304,308,313,318,320,321,322,323,328,336,338,340,341,343,346,347,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,19,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,79,87,87,-24,-25,19,19,19,19,-82,97,-26,-124,-125,-115,-116,110,79,-80,-81,-83,-54,19,87,-18,-19,-20,-21,-22,-76,-77,133,134,135,136,-139,-70,139,-72,79,79,-104,19,79,-55,-56,-57,-58,-59,-60,19,79,79,79,193,139,-54,-129,19,79,193,-140,139,-73,19,19,-128,79,-78,79,-68,139,19,-130,-126,-127,-117,-71,275,276,277,278,79,-103,-102,-69,-118,296,297,298,-95,-111,19,314,-113,-122,-112,193,79,-114,-123,-131,193,335,79,344,-138,-120,-74,-121,-75,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,107,111,117,118,130,163,180,181,196,207,208,210,212,216,218,239,246,250,251,253,254,268,270,272,274,276,277,285,288,297,298,299,303,304,306,308,315,320,321,322,327,340,341,343,346,347,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-82,-26,-124,-125,-115,-116,-80,-81,-83,32,-18,-19,-20,-21,-22,-76,-77,-139,-70,137,-72,-104,32,32,199,-129,32,-140,-73,32,32,-128,-78,-68,32,-130,-126,-127,-117,-71,-103,-102,-69,-118,32,32,-95,-111,32,32,32,-113,-122,318,-112,137,-114,-123,-131,199,-138,-120,-74,-121,-75,]),'KW_FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,84,88,93,94,95,96,98,99,100,105,106,111,117,118,130,180,181,196,207,208,210,212,216,218,239,246,250,251,253,254,268,270,272,274,285,288,299,303,304,308,320,321,322,340,341,343,346,347,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-82,-26,-124,-125,-115,-116,-80,-81,-83,36,36,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,36,36,-129,36,-140,-73,36,36,-128,-78,-68,36,-130,-126,-127,-117,-71,-103,-102,-69,-118,-95,-111,36,-113,-122,-112,-114,-123,-131,-138,-120,-74,-121,-75,]),'KW_IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,39,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,130,180,181,196,207,208,210,212,216,218,239,246,250,251,253,254,268,270,272,274,285,288,299,303,304,308,320,321,322,340,341,343,346,347,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,89,-24,-25,-82,-26,-124,-125,-115,-116,-80,-81,-83,38,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,38,38,-129,38,-140,-73,38,38,-128,-78,-68,38,-130,-126,-127,-117,-71,-103,-102,-69,-118,-95,-111,38,-113,-122,-112,-114,-123,-131,-138,-120,-74,-121,-75,]),'KW_ELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,130,180,181,196,207,208,210,212,216,218,239,246,250,251,253,254,268,270,272,274,285,288,299,303,304,308,320,321,322,340,341,343,346,347,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-82,-26,-124,-125,-115,-116,-80,-81,-83,39,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,39,39,-129,39,-140,-73,39,39,-128,-78,-68,39,-130,-126,-127,-117,-71,-103,-102,-69,-118,-95,-111,39,-113,-122,-112,-114,-123,-131,-138,-120,-74,-121,-75,]),'KW_WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,130,180,181,196,207,208,210,212,216,218,239,246,250,251,253,254,268,270,272,274,285,288,299,303,304,308,320,321,322,340,341,343,346,347,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-82,-26,-124,-125,-115,-116,-80,-81,-83,40,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,40,40,-129,40,-140,-73,40,40,-128,-78,-68,40,-130,-126,-127,-117,-71,-103,-102,-69,-118,-95,-111,40,-113,-122,-112,-114,-123,-131,-138,-120,-74,-121,-75,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,32,41,42,46,47,48,49,50,53,55,56,57,58,60,61,62,63,64,65,66,79,80,81,82,86,88,93,94,95,96,98,99,100,105,106,107,111,112,113,116,117,118,119,120,121,122,123,124,125,130,134,135,136,137,139,164,176,180,181,189,193,196,197,207,208,210,212,213,216,217,218,235,239,244,246,250,251,253,254,260,268,270,272,274,285,288,299,303,304,308,313,318,320,321,322,323,336,340,341,343,346,347,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,41,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,73,-24,-25,41,41,41,41,-82,-26,-124,-125,-115,-116,41,-41,-42,-43,-44,-45,-46,73,-80,-81,-83,-54,41,-18,-19,-20,-21,-22,-76,-77,-139,-70,144,-72,73,73,173,-104,41,73,-55,-56,-57,-58,-59,-60,41,73,188,73,73,144,144,-54,-129,41,73,227,-140,144,-73,41,41,-128,73,-78,73,-68,144,41,271,-130,-126,-127,-117,-71,73,-103,-102,-69,-118,-95,-111,41,-113,-122,-112,144,73,-114,-123,-131,144,73,-138,-120,-74,-121,-75,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,32,41,42,46,47,48,49,50,53,55,56,57,58,60,61,62,63,64,65,66,79,80,81,82,86,88,93,94,95,96,98,99,100,105,106,107,111,112,113,117,118,119,120,121,122,123,124,125,130,134,136,137,139,164,176,180,181,189,193,196,197,207,208,210,212,213,216,217,218,235,239,246,250,251,253,254,260,268,270,272,274,285,288,299,303,304,308,313,318,320,321,322,323,336,340,341,343,346,347,],[42,42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,42,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,75,-24,-25,42,42,42,42,-82,-26,-124,-125,-115,-116,42,-41,-42,-43,-44,-45,-46,75,-80,-81,-83,-54,42,-18,-19,-20,-21,-22,-76,-77,-139,-70,145,-72,75,75,-104,42,75,-55,-56,-57,-58,-59,-60,42,75,75,75,145,145,-54,-129,42,75,228,-140,145,-73,42,42,-128,75,-78,75,-68,145,42,-130,-126,-127,-117,-71,75,-103,-102,-69,-118,-95,-111,42,-113,-122,-112,145,75,-114,-123,-131,145,75,-138,-120,-74,-121,-75,]),'KW_CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,130,180,181,196,207,208,210,212,216,218,239,246,250,251,253,254,268,270,272,274,285,288,299,303,304,308,320,321,322,340,341,343,346,347,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-82,-26,-124,-125,-115,-116,-80,-81,-83,43,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,43,43,-129,43,-140,-73,43,43,-128,-78,-68,43,-130,-126,-127,-117,-71,-103,-102,-69,-118,-95,-111,43,-113,-122,-112,-114,-123,-131,-138,-120,-74,-121,-75,]),'QUOTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,130,180,181,196,207,208,210,212,216,218,239,246,250,251,253,254,268,270,272,274,285,288,299,303,304,308,320,321,322,340,341,343,346,347,],[44,44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-82,-26,-124,-125,-115,-116,-80,-81,-83,44,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,44,44,-129,44,-140,-73,44,44,-128,-78,-68,44,-130,-126,-127,-117,-71,-103,-102,-69,-118,-95,-111,44,-113,-122,-112,-114,-123,-131,-138,-120,-74,-121,-75,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,45,50,53,55,56,57,58,80,81,82,93,94,95,96,98,99,100,105,106,111,117,180,196,207,212,216,218,246,250,251,253,254,268,270,272,274,285,288,303,304,308,320,321,322,340,341,343,346,347,],[-119,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-2,-82,-26,-124,-125,-115,-116,-80,-81,-83,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,-129,-140,-73,-128,-78,-68,-130,-126,-127,-117,-71,-103,-102,-69,-118,-95,-111,-113,-122,-112,-114,-123,-131,-138,-120,-74,-121,-75,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,45,50,53,55,56,57,58,80,81,82,88,93,94,95,96,98,99,100,105,106,111,117,118,128,130,174,180,181,182,196,207,208,210,212,215,216,218,239,241,243,246,250,251,253,254,266,268,270,272,274,285,288,299,303,304,308,311,312,320,321,322,333,339,340,341,343,346,347,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-2,-82,-26,-124,-125,-115,-116,-80,-81,-83,-119,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,-119,180,-119,212,-129,-119,216,-140,-73,-119,-119,-128,246,-78,-68,-119,268,270,-130,-126,-127,-117,-71,285,-103,-102,-69,-118,-95,-111,-119,-113,-122,-112,322,-134,-114,-123,-131,-135,-136,-138,-120,-74,-121,-75,]),'KW_RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,30,31,41,42,45,50,53,55,56,57,58,80,81,82,93,94,95,96,98,99,100,105,106,111,117,180,196,207,212,216,218,246,250,251,253,254,268,270,272,274,285,288,299,303,304,308,312,320,321,322,340,341,343,346,347,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-26,-96,-97,-98,-99,-100,-101,-23,-109,-110,-24,-25,-2,-82,-26,-124,-125,-115,-116,-80,-81,-83,-18,-19,-20,-21,-22,-76,-77,-139,-70,-72,-104,-129,-140,-73,-128,-78,-68,-130,-126,-127,-117,-71,-103,-102,-69,-118,-95,-111,313,-113,-122,-112,323,-114,-123,-131,-138,-120,-74,-121,-75,]),'PLUS':([8,20,29,41,42,52,53,93,94,95,96,98,144,145,146,227,228,],[46,-26,-23,-24,-25,46,-26,46,46,46,46,-22,-24,-25,46,-24,-25,]),'MINUS':([8,20,29,41,42,52,53,93,94,95,96,98,144,145,146,206,227,228,],[47,-26,-23,-24,-25,47,-26,47,47,47,47,-22,-24,-25,47,240,-24,-25,]),'TIMES':([8,20,29,41,42,52,53,93,94,95,96,98,144,145,146,227,228,],[48,-26,-23,-24,-25,48,-26,48,48,48,48,-22,-24,-25,48,-24,-25,]),'DIVIDE':([8,20,29,41,42,52,53,93,94,95,96,98,144,145,146,227,228,],[49,-26,-23,-24,-25,49,-26,49,49,49,49,-22,-24,-25,49,-24,-25,]),'SEMI':([10,11,29,30,31,33,34,35,41,42,53,67,71,72,73,74,75,76,77,78,93,94,95,96,98,111,141,142,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,170,184,204,205,207,221,222,224,225,231,232,234,247,248,252,254,261,262,288,292,303,304,308,320,321,324,325,329,332,334,337,341,343,345,346,347,],[50,-108,-23,-109,-110,80,81,82,-24,-25,-26,106,112,-47,-48,-49,-50,-51,-52,-53,-18,-19,-20,-21,-22,-72,-84,-88,-24,-25,-132,196,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-79,218,-86,-90,-73,250,251,253,254,-85,-89,260,-92,272,274,-71,-87,-91,-111,-137,-113,-122,-112,-114,-123,333,-133,336,339,340,343,-120,-74,347,-121,-75,]),'LNOT':([18,],[51,]),'COMMA':([20,71,72,73,74,75,76,77,78,99,115,132,144,145,170,227,228,329,],[54,113,-47,-48,-49,-50,-51,-52,-53,54,113,185,-48,-50,-79,-48,-50,113,]),'DOT':([20,171,173,209,211,273,],[59,209,211,242,244,287,]),'EQUALS':([20,67,109,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,183,200,259,281,294,301,],[61,107,164,197,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,217,235,279,295,306,315,]),'TIMESEQUAL':([20,],[62,]),'DIVEQUAL':([20,],[63,]),'MODULUSEQUAL':([20,],[64,]),'PLUSEQUAL':([20,],[65,]),'MINUSEQUAL':([20,],[66,]),'KW_MUT':([21,186,289,],[68,220,302,]),'RPAREN':([29,41,42,52,53,72,73,74,75,76,77,78,93,94,95,96,98,99,100,110,111,114,115,126,132,144,145,165,166,167,169,170,187,188,190,207,214,219,223,227,228,249,254,275,278,290,291,296,309,310,326,335,343,344,347,],[-23,-24,-25,98,-26,-47,-48,-49,-50,-51,-52,-53,-18,-19,-20,-21,-22,-76,-77,-119,-72,170,-66,176,184,-24,-25,206,-93,-94,-67,-79,221,222,224,-73,-63,248,252,-24,-25,273,-71,288,292,303,304,308,320,321,334,341,-74,346,-75,]),'CADENA':([32,79,86,97,107,112,113,119,120,121,122,123,124,125,134,136,137,139,164,176,189,193,197,213,217,235,260,313,314,318,323,336,],[72,72,-54,132,72,72,72,72,-55,-56,-57,-58,-59,-60,72,72,72,72,72,-54,72,72,72,72,72,72,72,72,326,72,72,72,]),'CHAR':([32,79,86,107,112,113,119,120,121,122,123,124,125,134,136,137,139,164,176,189,193,197,213,217,235,260,313,318,323,336,],[74,74,-54,74,74,74,74,-55,-56,-57,-58,-59,-60,74,74,74,74,74,-54,74,74,74,74,74,74,74,74,74,74,74,]),'KW_FALSE':([32,79,86,107,112,113,119,120,121,122,123,124,125,134,136,137,139,164,176,189,193,197,213,217,235,260,313,318,323,336,],[76,76,-54,76,76,76,76,-55,-56,-57,-58,-59,-60,76,76,76,76,76,-54,76,76,76,76,76,76,76,76,76,76,76,]),'KW_TRUE':([32,79,86,107,112,113,119,120,121,122,123,124,125,134,136,137,139,164,176,189,193,197,213,217,235,260,313,318,323,336,],[77,77,-54,77,77,77,77,-55,-56,-57,-58,-59,-60,77,77,77,77,77,-54,77,77,77,77,77,77,77,77,77,77,77,]),'COLON':([37,67,91,92,109,138,140,143,192,194,195,202,203,237,238,293,305,307,316,319,],[84,108,131,-107,163,192,194,195,226,229,230,237,238,264,265,305,317,319,327,331,]),'LBRACE':([39,72,73,74,75,76,77,78,85,90,129,149,150,151,152,153,154,155,156,157,158,159,160,161,162,170,171,172,175,206,245,269,271,286,],[88,-47,-48,-49,-50,-51,-52,-53,118,130,181,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-79,208,210,-64,239,-65,-106,-105,299,]),'KW_READ_LINE':([59,],[101,]),'KW_PUSH_BACK':([59,],[102,]),'KW_REMOVE':([59,],[103,]),'KW_INSERT':([59,],[104,]),'RBRACKET':([70,71,72,73,74,75,76,77,78,115,168,169,170,191,280,329,330,342,],[111,-66,-47,-48,-49,-50,-51,-52,-53,-66,207,-67,-79,225,294,-66,337,345,]),'KW_IN':([83,],[116,]),'EQ':([86,176,],[120,120,]),'NE':([86,176,],[121,121,]),'GE':([86,176,],[122,122,]),'LE':([86,176,],[123,123,]),'GT':([86,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,233,240,263,],[124,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,124,259,267,281,]),'LT':([86,148,176,201,],[125,198,125,236,]),'KW_HASHMAP':([107,164,],[138,202,]),'KW_LINKEDLIST':([107,108,163,164,279,295,],[140,148,201,203,293,307,]),'KW_IO':([107,],[143,]),'UNSIG_INT_8':([108,131,163,198,199,236,267,],[149,149,149,149,149,149,149,]),'UNSIG_INT_16':([108,131,163,198,199,236,267,],[150,150,150,150,150,150,150,]),'UNSIG_INT_32':([108,131,163,198,199,236,267,],[151,151,151,151,151,151,151,]),'UNSIG_INT_64':([108,131,163,198,199,236,267,],[152,152,152,152,152,152,152,]),'UNSIG_INT_128':([108,131,163,198,199,236,267,],[153,153,153,153,153,153,153,]),'SIG_INT_8':([108,131,163,198,199,236,267,],[154,154,154,154,154,154,154,]),'SIG_INT_16':([108,131,163,198,199,236,267,],[155,155,155,155,155,155,155,]),'SIG_INT_32':([108,131,163,198,199,236,267,],[156,156,156,156,156,156,156,]),'SIG_INT_64':([108,131,163,198,199,236,267,],[157,157,157,157,157,157,157,]),'SIG_INT_128':([108,131,163,198,199,236,267,],[158,158,158,158,158,158,158,]),'FLOAT_32':([108,131,163,198,199,236,267,],[159,159,159,159,159,159,159,]),'FLOAT_64':([108,131,163,198,199,236,267,],[160,160,160,160,160,160,160,]),'KW_BOOLEAN':([108,131,163,198,199,236,267,],[161,161,161,161,161,161,161,]),'KW_STRING':([108,131,163,198,199,236,267,],[162,162,162,162,162,162,162,]),'LOR':([127,],[178,]),'LAND':([127,],[179,]),'AND':([133,135,],[186,189,]),'KW_NEW':([226,264,317,331,],[255,282,328,338,]),'KW_FROM':([226,229,264,265,],[256,257,283,284,]),'KW_STDIN':([230,],[258,]),'KW_EXPECT':([287,],[300,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main_rule':([0,2,88,118,130,181,208,210,239,299,],[1,45,128,174,182,215,241,243,266,312,]),'father_rule':([0,2,88,118,130,181,208,210,239,299,],[2,2,2,2,2,2,2,2,2,2,]),'print':([0,2,88,118,130,181,208,210,239,299,],[3,3,3,3,3,3,3,3,3,3,]),'dvariable':([0,2,88,118,130,181,208,210,239,299,],[4,4,4,4,4,4,4,4,4,4,]),'function':([0,2,88,118,130,181,208,210,239,299,],[5,5,5,5,5,5,5,5,5,5,]),'variables':([0,2,54,88,110,118,130,181,208,210,239,299,],[6,6,100,6,167,6,6,6,6,6,6,6,]),'control_str':([0,2,88,118,130,181,208,210,239,299,],[7,7,7,7,7,7,7,7,7,7,]),'expression':([0,2,19,46,47,48,49,88,107,118,130,139,164,181,193,197,208,210,235,239,299,313,323,],[8,8,52,93,94,95,96,8,146,8,8,52,146,8,52,146,8,8,146,8,8,146,146,]),'void':([0,2,88,110,118,130,181,208,210,239,299,],[9,9,9,166,9,9,9,9,9,9,9,]),'data_str':([0,2,88,118,130,181,208,210,239,299,],[10,10,10,10,10,10,10,10,10,10,]),'array':([0,2,88,118,130,181,208,210,239,276,277,297,298,299,],[11,11,11,11,11,11,11,11,11,290,291,309,310,11,]),'linkedlist_methods':([0,2,88,118,130,181,208,210,239,299,],[12,12,12,12,12,12,12,12,12,12,]),'hashmap_methods':([0,2,88,118,130,181,208,210,239,299,],[13,13,13,13,13,13,13,13,13,13,]),'initialization':([0,2,88,118,130,181,208,210,239,299,],[14,14,14,14,14,14,14,14,14,14,]),'input':([0,2,88,118,130,181,208,210,239,299,],[15,15,15,15,15,15,15,15,15,15,]),'assignation':([0,2,88,118,130,181,208,210,239,299,],[16,16,16,16,16,16,16,16,16,16,]),'declare_data_type':([0,2,88,118,130,181,208,210,239,299,],[17,17,17,17,17,17,17,17,17,17,]),'for_str':([0,2,84,88,118,130,181,208,210,239,299,],[23,23,117,23,23,23,23,23,23,23,23,]),'for_str_tagged':([0,2,88,118,130,181,208,210,239,299,],[24,24,24,24,24,24,24,24,24,24,]),'if':([0,2,88,118,130,181,208,210,239,299,],[25,25,25,25,25,25,25,25,25,25,]),'else':([0,2,88,118,130,181,208,210,239,299,],[26,26,26,26,26,26,26,26,26,26,]),'else_if':([0,2,88,118,130,181,208,210,239,299,],[27,27,27,27,27,27,27,27,27,27,]),'while':([0,2,88,118,130,181,208,210,239,299,],[28,28,28,28,28,28,28,28,28,28,]),'number':([0,2,19,46,47,48,49,60,88,107,118,130,139,164,181,193,197,208,210,235,239,299,313,323,],[29,29,29,29,29,29,29,105,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'hashmap':([0,2,88,118,130,181,208,210,239,299,],[30,30,30,30,30,30,30,30,30,30,]),'linkedlist':([0,2,88,118,130,181,208,210,239,299,],[31,31,31,31,31,31,31,31,31,31,]),'let_initialization':([0,2,88,118,130,181,208,210,239,299,],[33,33,33,33,33,33,33,33,33,33,]),'const_initialization':([0,2,88,118,130,181,208,210,239,299,],[34,34,34,34,34,34,34,34,34,34,]),'input_init':([0,2,88,118,130,181,208,210,239,299,],[35,35,35,35,35,35,35,35,35,35,]),'label':([0,2,88,118,130,181,208,210,239,299,],[37,37,37,37,37,37,37,37,37,37,]),'linkedlist_push':([20,],[55,]),'linkedlist_remove':([20,],[56,]),'hashmap_insert':([20,],[57,]),'hashmap_remove':([20,],[58,]),'assign_operators':([20,],[60,]),'mdata':([32,79,113,136,137,139,193,318,],[70,114,169,190,191,114,114,330,]),'data':([32,79,107,112,113,119,134,136,137,139,164,189,193,197,213,217,235,260,313,318,323,336,],[71,115,141,168,115,175,187,115,115,115,204,223,115,231,245,247,261,280,325,329,325,342,]),'tuple':([32,79,107,112,113,119,134,136,137,139,164,189,193,197,213,217,235,260,313,318,323,336,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'conditional':([38,40,89,],[85,90,129,]),'comparator':([86,176,],[119,213,]),'lvariable':([87,],[126,]),'expression_var':([107,164,197,235,313,323,],[142,205,232,262,324,332,]),'data_type':([108,131,163,198,199,236,267,],[147,183,200,233,234,263,286,]),'arguments':([110,],[165,]),'range':([116,],[172,]),'logic':([127,],[177,]),'return':([299,],[311,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main_rule","S'",1,None,None,None),
  ('main_rule -> father_rule','main_rule',1,'p_main_rule','pyacc.py',14),
  ('main_rule -> father_rule main_rule','main_rule',2,'p_main_rule','pyacc.py',15),
  ('father_rule -> print','father_rule',1,'p_father_rule','pyacc.py',20),
  ('father_rule -> dvariable','father_rule',1,'p_father_rule','pyacc.py',21),
  ('father_rule -> function','father_rule',1,'p_father_rule','pyacc.py',22),
  ('father_rule -> variables','father_rule',1,'p_father_rule','pyacc.py',23),
  ('father_rule -> control_str','father_rule',1,'p_father_rule','pyacc.py',24),
  ('father_rule -> expression','father_rule',1,'p_father_rule','pyacc.py',25),
  ('father_rule -> void','father_rule',1,'p_father_rule','pyacc.py',26),
  ('father_rule -> data_str','father_rule',1,'p_father_rule','pyacc.py',27),
  ('father_rule -> array','father_rule',1,'p_father_rule','pyacc.py',28),
  ('father_rule -> linkedlist_methods','father_rule',1,'p_father_rule','pyacc.py',29),
  ('father_rule -> hashmap_methods','father_rule',1,'p_father_rule','pyacc.py',30),
  ('father_rule -> initialization','father_rule',1,'p_father_rule','pyacc.py',31),
  ('father_rule -> input','father_rule',1,'p_father_rule','pyacc.py',32),
  ('father_rule -> assignation','father_rule',1,'p_father_rule','pyacc.py',33),
  ('father_rule -> declare_data_type','father_rule',1,'p_father_rule','pyacc.py',34),
  ('expression -> expression PLUS expression','expression',3,'p_expression','pyacc.py',40),
  ('expression -> expression MINUS expression','expression',3,'p_expression','pyacc.py',41),
  ('expression -> expression TIMES expression','expression',3,'p_expression','pyacc.py',42),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','pyacc.py',43),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','pyacc.py',44),
  ('expression -> number','expression',1,'p_expression','pyacc.py',45),
  ('number -> INTEGER','number',1,'p_number','pyacc.py',50),
  ('number -> FLOAT','number',1,'p_number','pyacc.py',51),
  ('number -> VARIABLE','number',1,'p_number','pyacc.py',52),
  ('data_type -> UNSIG_INT_8','data_type',1,'p_data_type','pyacc.py',56),
  ('data_type -> UNSIG_INT_16','data_type',1,'p_data_type','pyacc.py',57),
  ('data_type -> UNSIG_INT_32','data_type',1,'p_data_type','pyacc.py',58),
  ('data_type -> UNSIG_INT_64','data_type',1,'p_data_type','pyacc.py',59),
  ('data_type -> UNSIG_INT_128','data_type',1,'p_data_type','pyacc.py',60),
  ('data_type -> SIG_INT_8','data_type',1,'p_data_type','pyacc.py',61),
  ('data_type -> SIG_INT_16','data_type',1,'p_data_type','pyacc.py',62),
  ('data_type -> SIG_INT_32','data_type',1,'p_data_type','pyacc.py',63),
  ('data_type -> SIG_INT_64','data_type',1,'p_data_type','pyacc.py',64),
  ('data_type -> SIG_INT_128','data_type',1,'p_data_type','pyacc.py',65),
  ('data_type -> FLOAT_32','data_type',1,'p_data_type','pyacc.py',66),
  ('data_type -> FLOAT_64','data_type',1,'p_data_type','pyacc.py',67),
  ('data_type -> KW_BOOLEAN','data_type',1,'p_data_type','pyacc.py',68),
  ('data_type -> KW_STRING','data_type',1,'p_data_type','pyacc.py',69),
  ('assign_operators -> EQUALS','assign_operators',1,'p_assign_operators','pyacc.py',73),
  ('assign_operators -> TIMESEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',74),
  ('assign_operators -> DIVEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',75),
  ('assign_operators -> MODULUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',76),
  ('assign_operators -> PLUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',77),
  ('assign_operators -> MINUSEQUAL','assign_operators',1,'p_assign_operators','pyacc.py',78),
  ('data -> CADENA','data',1,'p_data','pyacc.py',82),
  ('data -> INTEGER','data',1,'p_data','pyacc.py',83),
  ('data -> CHAR','data',1,'p_data','pyacc.py',84),
  ('data -> FLOAT','data',1,'p_data','pyacc.py',85),
  ('data -> KW_FALSE','data',1,'p_data','pyacc.py',86),
  ('data -> KW_TRUE','data',1,'p_data','pyacc.py',87),
  ('data -> tuple','data',1,'p_data','pyacc.py',88),
  ('comparator -> <empty>','comparator',0,'p_comparator','pyacc.py',91),
  ('comparator -> EQ','comparator',1,'p_comparator','pyacc.py',92),
  ('comparator -> NE','comparator',1,'p_comparator','pyacc.py',93),
  ('comparator -> GE','comparator',1,'p_comparator','pyacc.py',94),
  ('comparator -> LE','comparator',1,'p_comparator','pyacc.py',95),
  ('comparator -> GT','comparator',1,'p_comparator','pyacc.py',96),
  ('comparator -> LT','comparator',1,'p_comparator','pyacc.py',97),
  ('logic -> LOR','logic',1,'p_logic','pyacc.py',100),
  ('logic -> LAND','logic',1,'p_logic','pyacc.py',101),
  ('lvariable -> VARIABLE logic VARIABLE','lvariable',3,'p_logic_variable','pyacc.py',104),
  ('conditional -> VARIABLE comparator data','conditional',3,'p_conditional','pyacc.py',107),
  ('conditional -> LPAREN lvariable RPAREN comparator data','conditional',5,'p_conditional','pyacc.py',108),
  ('mdata -> data','mdata',1,'p_mdata','pyacc.py',111),
  ('mdata -> data COMMA mdata','mdata',3,'p_mdata','pyacc.py',112),
  ('print -> KW_PRINT LNOT LPAREN CADENA RPAREN SEMI','print',6,'p_print','pyacc.py',115),
  ('print -> KW_PRINT LNOT LPAREN CADENA COMMA VARIABLE RPAREN SEMI','print',8,'p_print','pyacc.py',116),
  ('dvariable -> KW_LET VARIABLE SEMI','dvariable',3,'p_declare_variable','pyacc.py',119),
  ('array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET SEMI','array',7,'p_array','pyacc.py',122),
  ('array -> LBRACKET mdata RBRACKET','array',3,'p_array','pyacc.py',123),
  ('array -> LBRACKET data SEMI data RBRACKET','array',5,'p_array','pyacc.py',124),
  ('array -> KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET mdata RBRACKET SEMI','array',14,'p_array','pyacc.py',125),
  ('array -> KW_LET KW_MUT VARIABLE COLON LBRACKET data_type SEMI data RBRACKET EQUALS LBRACKET data SEMI data RBRACKET SEMI','array',16,'p_array','pyacc.py',126),
  ('variables -> VARIABLE','variables',1,'p_variables','pyacc.py',129),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','pyacc.py',130),
  ('while -> KW_WHILE conditional LBRACE main_rule RBRACE','while',5,'p_while','pyacc.py',133),
  ('tuple -> LPAREN mdata RPAREN','tuple',3,'p_tuple','pyacc.py',139),
  ('initialization -> let_initialization SEMI','initialization',2,'p_initialization','pyacc.py',143),
  ('initialization -> const_initialization SEMI','initialization',2,'p_initialization','pyacc.py',144),
  ('initialization -> data_str SEMI','initialization',2,'p_initialization','pyacc.py',145),
  ('initialization -> input_init SEMI','initialization',2,'p_initialization','pyacc.py',146),
  ('let_initialization -> KW_LET VARIABLE EQUALS data','let_initialization',4,'p_let_initialization','pyacc.py',150),
  ('let_initialization -> KW_LET VARIABLE COLON data_type EQUALS data','let_initialization',6,'p_let_initialization','pyacc.py',151),
  ('let_initialization -> KW_LET KW_MUT VARIABLE EQUALS data','let_initialization',5,'p_let_initialization','pyacc.py',152),
  ('let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS data','let_initialization',7,'p_let_initialization','pyacc.py',153),
  ('let_initialization -> KW_LET VARIABLE EQUALS expression_var','let_initialization',4,'p_let_initialization','pyacc.py',154),
  ('let_initialization -> KW_LET VARIABLE COLON data_type EQUALS expression_var','let_initialization',6,'p_let_initialization','pyacc.py',155),
  ('let_initialization -> KW_LET KW_MUT VARIABLE EQUALS expression_var','let_initialization',5,'p_let_initialization','pyacc.py',156),
  ('let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var','let_initialization',7,'p_let_initialization','pyacc.py',157),
  ('const_initialization -> KW_CONST VARIABLE COLON data_type EQUALS data','const_initialization',6,'p_const_initialization','pyacc.py',161),
  ('arguments -> void','arguments',1,'p_arguments','pyacc.py',165),
  ('arguments -> variables','arguments',1,'p_arguments','pyacc.py',166),
  ('function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE','function',8,'p_function','pyacc.py',170),
  ('control_str -> for_str','control_str',1,'p_control_str','pyacc.py',174),
  ('control_str -> for_str_tagged','control_str',1,'p_control_str','pyacc.py',175),
  ('control_str -> if','control_str',1,'p_control_str','pyacc.py',176),
  ('control_str -> else','control_str',1,'p_control_str','pyacc.py',177),
  ('control_str -> else_if','control_str',1,'p_control_str','pyacc.py',178),
  ('control_str -> while','control_str',1,'p_control_str','pyacc.py',179),
  ('for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE','for_str',7,'p_for_str','pyacc.py',183),
  ('for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE','for_str',7,'p_for_str','pyacc.py',184),
  ('for_str_tagged -> label COLON for_str','for_str_tagged',3,'p_for_str_tagged','pyacc.py',188),
  ('range -> INTEGER DOT DOT INTEGER','range',4,'p_range','pyacc.py',192),
  ('range -> VARIABLE DOT DOT VARIABLE','range',4,'p_range','pyacc.py',193),
  ('label -> QUOTE VARIABLE','label',2,'p_label','pyacc.py',197),
  ('data_str -> array','data_str',1,'p_data_str','pyacc.py',201),
  ('data_str -> hashmap','data_str',1,'p_data_str','pyacc.py',202),
  ('data_str -> linkedlist','data_str',1,'p_data_str','pyacc.py',203),
  ('hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN','hashmap',9,'p_hashmap','pyacc.py',207),
  ('hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN','hashmap',10,'p_hashmap','pyacc.py',208),
  ('hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN','hashmap',10,'p_hashmap','pyacc.py',209),
  ('hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN','hashmap',11,'p_hashmap','pyacc.py',210),
  ('hashmap_methods -> VARIABLE hashmap_insert','hashmap_methods',2,'p_hashmap_methods','pyacc.py',214),
  ('hashmap_methods -> VARIABLE hashmap_remove','hashmap_methods',2,'p_hashmap_methods','pyacc.py',215),
  ('hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI','hashmap_insert',6,'p_hashmap_insert','pyacc.py',219),
  ('hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI','hashmap_remove',7,'p_hashmap_remove','pyacc.py',223),
  ('void -> <empty>','void',0,'p_void','pyacc.py',227),
  ('linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN','linkedlist',14,'p_linkedlist_empty','pyacc.py',235),
  ('linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN','linkedlist',15,'p_linkedlist_empty','pyacc.py',236),
  ('linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN','linkedlist',10,'p_linkedlist_array','pyacc.py',239),
  ('linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN','linkedlist',11,'p_linkedlist_array','pyacc.py',240),
  ('linkedlist_methods -> VARIABLE linkedlist_push','linkedlist_methods',2,'p_linkedlist_methods','pyacc.py',243),
  ('linkedlist_methods -> VARIABLE linkedlist_remove','linkedlist_methods',2,'p_linkedlist_methods','pyacc.py',244),
  ('linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI','linkedlist_push',6,'p_linkedlist_push','pyacc.py',247),
  ('linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI','linkedlist_remove',6,'p_linkedlist_remove','pyacc.py',250),
  ('if -> KW_IF conditional LBRACE main_rule RBRACE','if',5,'p_if','pyacc.py',255),
  ('else -> KW_ELSE LBRACE main_rule RBRACE','else',4,'p_else','pyacc.py',258),
  ('else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE','else_if',6,'p_else_if','pyacc.py',261),
  ('function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE','function',11,'p_function_return','pyacc.py',266),
  ('expression_var -> expression','expression_var',1,'p_expression_var','pyacc.py',269),
  ('expression_var -> data','expression_var',1,'p_expression_var','pyacc.py',270),
  ('return -> main_rule','return',1,'p_return_statement','pyacc.py',273),
  ('return -> KW_RETURN expression_var SEMI','return',3,'p_return_statement','pyacc.py',274),
  ('return -> main_rule KW_RETURN expression_var SEMI','return',4,'p_return_statement','pyacc.py',275),
  ('input_init -> KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN','input_init',9,'p_input_init','pyacc.py',280),
  ('input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI','input',14,'p_input','pyacc.py',283),
  ('assignation -> VARIABLE assign_operators number','assignation',3,'p_assignation','pyacc.py',288),
  ('declare_data_type -> KW_LET VARIABLE COLON data_type SEMI','declare_data_type',5,'p_declare_datat_type','pyacc.py',293),
]
