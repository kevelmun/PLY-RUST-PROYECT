
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDE CADENA CHAR COLON COMMA COMMENT DIVEQUAL DIVIDE DOT EQ EQUALS FLOAT FLOAT_32 FLOAT_64 GE GT HASH INTEGER KW_ABSTRACT KW_AS KW_ASYNC KW_AWAIT KW_BECOME KW_BOOLEAN KW_BOX KW_BREAK KW_CHARACTER KW_CONST KW_CONTINUE KW_CRATE KW_DO KW_DYN KW_ELSE KW_ENUM KW_EXTERN KW_FALSE KW_FINAL KW_FN KW_FOR KW_FROM KW_IF KW_IMPL KW_IN KW_LET KW_LINKEDLIST KW_LOOP KW_MACRO KW_MATCH KW_MOD KW_MOVE KW_MUT KW_NEW KW_OVERRIDE KW_PRINT KW_PRIV KW_PUB KW_REF KW_RETURN KW_SELFTYPE KW_SELFVALUE KW_STATIC KW_STATICLIFETIME KW_STRUCT KW_SUPER KW_TRAIT KW_TRUE KW_TRY KW_TYPE KW_TYPEOF KW_UNION KW_UNSAFE KW_UNSIZED KW_USE KW_VIRTUAL KW_WHERE KW_WHILE KW_YIELD LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MINUSEQUAL MODULUS MODULUSEQUAL NE ORE OREXE PLUS PLUSEQUAL PUSH QMARK QUOTE RBRACE RBRACKET REMOVE RPAREN SEMI SIG_INT_128 SIG_INT_16 SIG_INT_32 SIG_INT_64 SIG_INT_8 TIMES TIMESEQUAL UNSIG_INT_128 UNSIG_INT_16 UNSIG_INT_32 UNSIG_INT_64 UNSIG_INT_8 VARIABLEmain_rule : father_rule\n    | father_rule main_rulefather_rule : print\n    | dvariable\n    | array\n    | function\n    | variables\n    | control_str\n    | expression\n    | void\n    | linkedlist\n    | push\n    | remove\n    | if\n    | else\n    | else_ifexpression : expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | expression DIVIDE expression\n    | LPAREN expression RPAREN\n    | numbernumber : INTEGER\n    | FLOAT\n    | VARIABLEdataType : UNSIG_INT_8\n                | UNSIG_INT_16\n                | UNSIG_INT_32\n                | UNSIG_INT_64\n                | UNSIG_INT_128\n                | SIG_INT_8\n                | SIG_INT_16\n                | SIG_INT_32\n                | SIG_INT_64\n                | SIG_INT_128\n                | FLOAT_32\n                | FLOAT_64\n                | KW_BOOLEANdata : CADENA\n    | INTEGER\n    | CHAR\n    | FLOAT\n    | KW_FALSE\n    | KW_TRUEcomparator :\n    | EQ\n    | NE\n    | GE\n    | LE\n    | GT\n    | LTand : VARIABLE LAND VARIABLEconditional : VARIABLE comparator data\n    | and comparator dataor : VARIABLE LOR VARIABLEmdata : data\n    | data COMMA mdataprint : KW_PRINT LPAREN CADENA RPAREN SEMIdvariable : KW_LET VARIABLE SEMIarray : KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKETvariables : VARIABLE \n    | VARIABLE COMMA variableswhile : KW_WHILE LPAREN VARIABLE arguments : void\n    | variablesfunction : KW_FN VARIABLE LPAREN arguments RPAREN LBRACE father_rule RBRACEcontrol_str : for_str\n    | for_str_taggedfor_str : KW_FOR VARIABLE KW_IN range LBRACE father_rule RBRACE\n    | KW_FOR VARIABLE KW_IN VARIABLE LBRACE father_rule RBRACEfor_str_tagged : label COLON for_strrange : INTEGER DOT DOT INTEGER\n    | VARIABLE DOT DOT VARIABLElabel : QUOTE VARIABLEvoid : linkedlist : KW_LET VARIABLE COLON KW_LINKEDLIST LT dataType GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN SEMI\n                  | KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT dataType GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN SEMIlinkedlist : KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN SEMI\n                  | KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN SEMIpush : VARIABLE DOT PUSH LPAREN data RPAREN SEMIremove : VARIABLE DOT REMOVE LPAREN INTEGER RPAREN SEMIif : KW_IF conditional LBRACE father_rule RBRACEelse : KW_ELSE LBRACE father_rule RBRACEelse_if : KW_ELSE KW_IF conditional LBRACE father_rule RBRACE'
    
_lr_action_items = {'KW_PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,23,24,25,30,39,48,53,54,55,56,58,59,63,64,68,81,103,104,108,118,120,122,124,145,146,156,157,159,161,167,179,185,190,192,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-67,-68,-22,-23,-24,-25,17,-17,-18,-19,-20,-21,-59,-61,-62,17,-71,-83,17,-58,-82,17,17,-60,17,-84,-80,-81,-70,-69,-66,-78,-79,-76,-77,]),'KW_LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,23,24,25,30,39,48,53,54,55,56,58,59,63,64,68,81,103,104,108,118,120,122,124,145,146,156,157,159,161,163,167,172,179,185,190,192,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-67,-68,-22,-23,-24,-25,19,-17,-18,-19,-20,-21,-59,-61,-62,19,-71,-83,19,-58,-82,19,19,-60,19,-84,-80,-81,-70,-69,168,-66,168,-78,-79,-76,-77,]),'KW_FN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,23,24,25,30,39,48,53,54,55,56,58,59,63,64,68,81,103,104,108,118,120,122,124,145,146,156,157,159,161,167,179,185,190,192,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-67,-68,-22,-23,-24,-25,21,-17,-18,-19,-20,-21,-59,-61,-62,21,-71,-83,21,-58,-82,21,21,-60,21,-84,-80,-81,-70,-69,-66,-78,-79,-76,-77,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,28,30,31,33,34,35,36,39,41,42,48,49,53,54,55,56,58,59,63,64,67,68,70,80,81,103,104,108,118,120,122,124,145,146,148,156,157,159,161,167,168,179,185,190,192,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,39,40,-25,44,-67,-68,-22,-23,46,50,-24,52,39,39,39,39,-25,62,63,20,46,-17,-18,-19,-20,-21,-59,-61,-62,63,20,101,105,-71,-83,20,-58,-82,20,20,-60,20,-84,160,-80,-81,-70,-69,-66,173,-78,-79,-76,-77,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,30,33,34,35,36,39,44,48,53,54,55,56,58,59,63,64,65,66,68,81,103,104,108,118,120,122,124,145,146,152,156,157,159,161,166,167,179,183,185,187,190,192,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,37,18,-25,-67,-68,-22,-23,-24,18,18,18,18,-25,67,18,-17,-18,-19,-20,-21,-59,-61,-62,88,89,18,-71,-83,18,-58,-82,18,18,-60,18,-84,163,-80,-81,-70,-69,172,-66,-78,186,-79,189,-76,-77,]),'KW_IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,23,24,25,27,30,39,48,53,54,55,56,58,59,63,64,68,81,103,104,108,118,120,122,124,145,146,156,157,159,161,167,179,185,190,192,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-67,-68,-22,-23,49,-24,-25,26,-17,-18,-19,-20,-21,-59,-61,-62,26,-71,-83,26,-58,-82,26,26,-60,26,-84,-80,-81,-70,-69,-66,-78,-79,-76,-77,]),'KW_ELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,23,24,25,30,39,48,53,54,55,56,58,59,63,64,68,81,103,104,108,118,120,122,124,145,146,156,157,159,161,167,179,185,190,192,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-67,-68,-22,-23,-24,-25,27,-17,-18,-19,-20,-21,-59,-61,-62,27,-71,-83,27,-58,-82,27,27,-60,27,-84,-80,-81,-70,-69,-66,-78,-79,-76,-77,]),'KW_FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,23,24,25,30,39,48,51,53,54,55,56,58,59,63,64,68,81,103,104,108,118,120,122,124,145,146,156,157,159,161,167,179,185,190,192,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-67,-68,-22,-23,-24,-25,28,28,-17,-18,-19,-20,-21,-59,-61,-62,28,-71,-83,28,-58,-82,28,28,-60,28,-84,-80,-81,-70,-69,-66,-78,-79,-76,-77,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,20,22,23,24,25,30,33,34,35,36,39,46,47,48,53,54,55,56,58,59,63,64,68,69,71,72,73,74,75,76,77,80,81,83,88,89,101,103,104,108,118,120,122,124,125,145,146,150,156,157,159,161,167,179,185,190,192,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,25,-25,-67,-68,-22,-23,-24,25,25,25,25,-25,-45,-45,25,-17,-18,-19,-20,-21,-59,-61,-62,25,96,-46,-47,-48,-49,-50,-51,96,107,-71,96,96,116,-52,-83,25,-58,-82,25,25,-60,96,25,-84,162,-80,-81,-70,-69,-66,-78,-79,-76,-77,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,20,22,23,24,25,30,33,34,35,36,39,46,47,48,53,54,55,56,58,59,63,64,68,69,71,72,73,74,75,76,77,81,83,88,101,103,104,108,118,120,122,124,125,145,146,156,157,159,161,167,179,185,190,192,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,30,-25,-67,-68,-22,-23,-24,30,30,30,30,-25,-45,-45,30,-17,-18,-19,-20,-21,-59,-61,-62,30,98,-46,-47,-48,-49,-50,-51,98,-71,98,98,-52,-83,30,-58,-82,30,30,-60,98,30,-84,-80,-81,-70,-69,-66,-78,-79,-76,-77,]),'QUOTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,23,24,25,30,39,48,53,54,55,56,58,59,63,64,68,81,103,104,108,118,120,122,124,145,146,156,157,159,161,167,179,185,190,192,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-67,-68,-22,-23,-24,-25,31,-17,-18,-19,-20,-21,-59,-61,-62,31,-71,-83,31,-58,-82,31,31,-60,31,-84,-80,-81,-70,-69,-66,-78,-79,-76,-77,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,23,24,25,30,32,39,53,54,55,56,58,59,63,64,81,103,108,118,124,146,156,157,159,161,167,179,185,190,192,],[-75,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-67,-68,-22,-23,-24,-2,-25,-17,-18,-19,-20,-21,-59,-61,-62,-71,-83,-58,-82,-60,-84,-80,-81,-70,-69,-66,-78,-79,-76,-77,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,23,24,25,30,39,48,53,54,55,56,58,59,63,64,68,78,81,93,103,104,108,118,119,120,122,124,145,146,147,149,156,157,158,159,161,167,179,185,190,192,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-67,-68,-22,-23,-24,-25,-75,-17,-18,-19,-20,-21,-59,-61,-62,-75,103,-71,118,-83,-75,-58,-82,146,-75,-75,-60,-75,-84,159,161,-80,-81,167,-70,-69,-66,-78,-79,-76,-77,]),'PLUS':([9,20,24,25,30,38,39,53,54,55,56,58,],[33,-25,-22,-23,-24,33,-25,33,33,33,33,-21,]),'MINUS':([9,20,24,25,30,38,39,53,54,55,56,58,],[34,-25,-22,-23,-24,34,-25,34,34,34,34,-21,]),'TIMES':([9,20,24,25,30,38,39,53,54,55,56,58,],[35,-25,-22,-23,-24,35,-25,35,35,35,35,-21,]),'DIVIDE':([9,20,24,25,30,38,39,53,54,55,56,58,],[36,-25,-22,-23,-24,36,-25,36,36,36,36,-21,]),'KW_MUT':([19,],[41,]),'COMMA':([20,63,95,96,97,98,99,100,110,],[42,42,-39,-40,-41,-42,-43,-44,125,]),'DOT':([20,105,107,121,123,],[43,121,123,148,150,]),'RPAREN':([24,25,30,38,39,53,54,55,56,57,58,63,64,67,90,91,92,95,96,97,98,99,100,115,116,124,169,177,186,189,],[-22,-23,-24,58,-25,-17,-18,-19,-20,82,-21,-61,-62,-75,117,-64,-65,-39,-40,-41,-42,-43,-44,143,144,-60,174,182,188,191,]),'LBRACE':([27,45,79,94,95,96,97,98,99,100,102,105,106,117,160,162,],[48,68,104,-53,-39,-40,-41,-42,-43,-44,-54,120,122,145,-73,-72,]),'COLON':([29,40,52,62,84,111,114,142,170,175,176,181,],[51,61,-74,86,111,126,142,155,175,180,181,184,]),'CADENA':([37,46,47,69,71,72,73,74,75,76,77,83,88,101,125,],[57,-45,-45,95,-46,-47,-48,-49,-50,-51,95,95,95,-52,95,]),'SEMI':([40,82,143,144,174,182,188,191,],[59,108,156,157,179,185,190,192,]),'EQUALS':([40,62,153,165,173,],[60,87,164,171,178,]),'PUSH':([43,],[65,]),'REMOVE':([43,],[66,]),'LAND':([46,],[70,]),'CHAR':([46,47,69,71,72,73,74,75,76,77,83,88,101,125,],[-45,-45,97,-46,-47,-48,-49,-50,-51,97,97,97,-52,97,]),'KW_FALSE':([46,47,69,71,72,73,74,75,76,77,83,88,101,125,],[-45,-45,99,-46,-47,-48,-49,-50,-51,99,99,99,-52,99,]),'KW_TRUE':([46,47,69,71,72,73,74,75,76,77,83,88,101,125,],[-45,-45,100,-46,-47,-48,-49,-50,-51,100,100,100,-52,100,]),'EQ':([46,47,101,],[71,71,-52,]),'NE':([46,47,101,],[72,72,-52,]),'GE':([46,47,101,],[73,73,-52,]),'LE':([46,47,101,],[74,74,-52,]),'GT':([46,47,101,127,128,129,130,131,132,133,134,135,136,137,138,139,140,154,],[75,75,-52,153,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,165,]),'LT':([46,47,85,101,113,],[76,76,112,-52,141,]),'KW_IN':([50,],[80,]),'LBRACKET':([60,178,],[83,83,]),'KW_LINKEDLIST':([60,61,86,87,164,171,],[84,85,113,114,170,176,]),'RBRACKET':([95,96,97,98,99,100,109,110,151,],[-39,-40,-41,-42,-43,-44,124,-56,-57,]),'UNSIG_INT_8':([112,141,],[128,128,]),'UNSIG_INT_16':([112,141,],[129,129,]),'UNSIG_INT_32':([112,141,],[130,130,]),'UNSIG_INT_64':([112,141,],[131,131,]),'UNSIG_INT_128':([112,141,],[132,132,]),'SIG_INT_8':([112,141,],[133,133,]),'SIG_INT_16':([112,141,],[134,134,]),'SIG_INT_32':([112,141,],[135,135,]),'SIG_INT_64':([112,141,],[136,136,]),'SIG_INT_128':([112,141,],[137,137,]),'FLOAT_32':([112,141,],[138,138,]),'FLOAT_64':([112,141,],[139,139,]),'KW_BOOLEAN':([112,141,],[140,140,]),'KW_FROM':([126,155,],[152,166,]),'KW_NEW':([180,184,],[183,187,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main_rule':([0,2,],[1,32,]),'father_rule':([0,2,48,68,104,120,122,145,],[2,2,78,93,119,147,149,158,]),'print':([0,2,48,68,104,120,122,145,],[3,3,3,3,3,3,3,3,]),'dvariable':([0,2,48,68,104,120,122,145,],[4,4,4,4,4,4,4,4,]),'array':([0,2,48,68,104,120,122,145,163,172,],[5,5,5,5,5,5,5,5,169,177,]),'function':([0,2,48,68,104,120,122,145,],[6,6,6,6,6,6,6,6,]),'variables':([0,2,42,48,67,68,104,120,122,145,],[7,7,64,7,92,7,7,7,7,7,]),'control_str':([0,2,48,68,104,120,122,145,],[8,8,8,8,8,8,8,8,]),'expression':([0,2,18,33,34,35,36,48,68,104,120,122,145,],[9,9,38,53,54,55,56,9,9,9,9,9,9,]),'void':([0,2,48,67,68,104,120,122,145,],[10,10,10,91,10,10,10,10,10,]),'linkedlist':([0,2,48,68,104,120,122,145,],[11,11,11,11,11,11,11,11,]),'push':([0,2,48,68,104,120,122,145,],[12,12,12,12,12,12,12,12,]),'remove':([0,2,48,68,104,120,122,145,],[13,13,13,13,13,13,13,13,]),'if':([0,2,48,68,104,120,122,145,],[14,14,14,14,14,14,14,14,]),'else':([0,2,48,68,104,120,122,145,],[15,15,15,15,15,15,15,15,]),'else_if':([0,2,48,68,104,120,122,145,],[16,16,16,16,16,16,16,16,]),'for_str':([0,2,48,51,68,104,120,122,145,],[22,22,22,81,22,22,22,22,22,]),'for_str_tagged':([0,2,48,68,104,120,122,145,],[23,23,23,23,23,23,23,23,]),'number':([0,2,18,33,34,35,36,48,68,104,120,122,145,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'label':([0,2,48,68,104,120,122,145,],[29,29,29,29,29,29,29,29,]),'conditional':([26,49,],[45,79,]),'and':([26,49,],[47,47,]),'comparator':([46,47,],[69,77,]),'arguments':([67,],[90,]),'data':([69,77,83,88,125,],[94,102,110,115,110,]),'range':([80,],[106,]),'mdata':([83,125,],[109,151,]),'dataType':([112,141,],[127,154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main_rule","S'",1,None,None,None),
  ('main_rule -> father_rule','main_rule',1,'p_main_rule','pyacc.py',9),
  ('main_rule -> father_rule main_rule','main_rule',2,'p_main_rule','pyacc.py',10),
  ('father_rule -> print','father_rule',1,'p_father_rule','pyacc.py',15),
  ('father_rule -> dvariable','father_rule',1,'p_father_rule','pyacc.py',16),
  ('father_rule -> array','father_rule',1,'p_father_rule','pyacc.py',17),
  ('father_rule -> function','father_rule',1,'p_father_rule','pyacc.py',18),
  ('father_rule -> variables','father_rule',1,'p_father_rule','pyacc.py',19),
  ('father_rule -> control_str','father_rule',1,'p_father_rule','pyacc.py',20),
  ('father_rule -> expression','father_rule',1,'p_father_rule','pyacc.py',21),
  ('father_rule -> void','father_rule',1,'p_father_rule','pyacc.py',22),
  ('father_rule -> linkedlist','father_rule',1,'p_father_rule','pyacc.py',23),
  ('father_rule -> push','father_rule',1,'p_father_rule','pyacc.py',24),
  ('father_rule -> remove','father_rule',1,'p_father_rule','pyacc.py',25),
  ('father_rule -> if','father_rule',1,'p_father_rule','pyacc.py',26),
  ('father_rule -> else','father_rule',1,'p_father_rule','pyacc.py',27),
  ('father_rule -> else_if','father_rule',1,'p_father_rule','pyacc.py',28),
  ('expression -> expression PLUS expression','expression',3,'p_expression','pyacc.py',34),
  ('expression -> expression MINUS expression','expression',3,'p_expression','pyacc.py',35),
  ('expression -> expression TIMES expression','expression',3,'p_expression','pyacc.py',36),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','pyacc.py',37),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','pyacc.py',38),
  ('expression -> number','expression',1,'p_expression','pyacc.py',39),
  ('number -> INTEGER','number',1,'p_number','pyacc.py',44),
  ('number -> FLOAT','number',1,'p_number','pyacc.py',45),
  ('number -> VARIABLE','number',1,'p_number','pyacc.py',46),
  ('dataType -> UNSIG_INT_8','dataType',1,'p_dataType','pyacc.py',50),
  ('dataType -> UNSIG_INT_16','dataType',1,'p_dataType','pyacc.py',51),
  ('dataType -> UNSIG_INT_32','dataType',1,'p_dataType','pyacc.py',52),
  ('dataType -> UNSIG_INT_64','dataType',1,'p_dataType','pyacc.py',53),
  ('dataType -> UNSIG_INT_128','dataType',1,'p_dataType','pyacc.py',54),
  ('dataType -> SIG_INT_8','dataType',1,'p_dataType','pyacc.py',55),
  ('dataType -> SIG_INT_16','dataType',1,'p_dataType','pyacc.py',56),
  ('dataType -> SIG_INT_32','dataType',1,'p_dataType','pyacc.py',57),
  ('dataType -> SIG_INT_64','dataType',1,'p_dataType','pyacc.py',58),
  ('dataType -> SIG_INT_128','dataType',1,'p_dataType','pyacc.py',59),
  ('dataType -> FLOAT_32','dataType',1,'p_dataType','pyacc.py',60),
  ('dataType -> FLOAT_64','dataType',1,'p_dataType','pyacc.py',61),
  ('dataType -> KW_BOOLEAN','dataType',1,'p_dataType','pyacc.py',62),
  ('data -> CADENA','data',1,'p_data','pyacc.py',66),
  ('data -> INTEGER','data',1,'p_data','pyacc.py',67),
  ('data -> CHAR','data',1,'p_data','pyacc.py',68),
  ('data -> FLOAT','data',1,'p_data','pyacc.py',69),
  ('data -> KW_FALSE','data',1,'p_data','pyacc.py',70),
  ('data -> KW_TRUE','data',1,'p_data','pyacc.py',71),
  ('comparator -> <empty>','comparator',0,'p_comparator','pyacc.py',74),
  ('comparator -> EQ','comparator',1,'p_comparator','pyacc.py',75),
  ('comparator -> NE','comparator',1,'p_comparator','pyacc.py',76),
  ('comparator -> GE','comparator',1,'p_comparator','pyacc.py',77),
  ('comparator -> LE','comparator',1,'p_comparator','pyacc.py',78),
  ('comparator -> GT','comparator',1,'p_comparator','pyacc.py',79),
  ('comparator -> LT','comparator',1,'p_comparator','pyacc.py',80),
  ('and -> VARIABLE LAND VARIABLE','and',3,'p_and','pyacc.py',83),
  ('conditional -> VARIABLE comparator data','conditional',3,'p_conditional','pyacc.py',86),
  ('conditional -> and comparator data','conditional',3,'p_conditional','pyacc.py',87),
  ('or -> VARIABLE LOR VARIABLE','or',3,'p_or','pyacc.py',90),
  ('mdata -> data','mdata',1,'p_mdata','pyacc.py',93),
  ('mdata -> data COMMA mdata','mdata',3,'p_mdata','pyacc.py',94),
  ('print -> KW_PRINT LPAREN CADENA RPAREN SEMI','print',5,'p_print','pyacc.py',97),
  ('dvariable -> KW_LET VARIABLE SEMI','dvariable',3,'p_declare_variable','pyacc.py',100),
  ('array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET','array',6,'p_array','pyacc.py',103),
  ('variables -> VARIABLE','variables',1,'p_variables','pyacc.py',106),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','pyacc.py',107),
  ('while -> KW_WHILE LPAREN VARIABLE','while',3,'p_while','pyacc.py',110),
  ('arguments -> void','arguments',1,'p_arguments','pyacc.py',116),
  ('arguments -> variables','arguments',1,'p_arguments','pyacc.py',117),
  ('function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE father_rule RBRACE','function',8,'p_function','pyacc.py',121),
  ('control_str -> for_str','control_str',1,'p_control_str','pyacc.py',125),
  ('control_str -> for_str_tagged','control_str',1,'p_control_str','pyacc.py',126),
  ('for_str -> KW_FOR VARIABLE KW_IN range LBRACE father_rule RBRACE','for_str',7,'p_for_str','pyacc.py',129),
  ('for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE father_rule RBRACE','for_str',7,'p_for_str','pyacc.py',130),
  ('for_str_tagged -> label COLON for_str','for_str_tagged',3,'p_for_str_tagged','pyacc.py',133),
  ('range -> INTEGER DOT DOT INTEGER','range',4,'p_range','pyacc.py',136),
  ('range -> VARIABLE DOT DOT VARIABLE','range',4,'p_range','pyacc.py',137),
  ('label -> QUOTE VARIABLE','label',2,'p_label','pyacc.py',140),
  ('void -> <empty>','void',0,'p_void','pyacc.py',144),
  ('linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT dataType GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN SEMI','linkedlist',15,'p_linkedlist_empty','pyacc.py',152),
  ('linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT dataType GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN SEMI','linkedlist',16,'p_linkedlist_empty','pyacc.py',153),
  ('linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN SEMI','linkedlist',11,'p_linkedlist_array','pyacc.py',156),
  ('linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN SEMI','linkedlist',12,'p_linkedlist_array','pyacc.py',157),
  ('push -> VARIABLE DOT PUSH LPAREN data RPAREN SEMI','push',7,'p_push','pyacc.py',160),
  ('remove -> VARIABLE DOT REMOVE LPAREN INTEGER RPAREN SEMI','remove',7,'p_remove','pyacc.py',163),
  ('if -> KW_IF conditional LBRACE father_rule RBRACE','if',5,'p_if','pyacc.py',168),
  ('else -> KW_ELSE LBRACE father_rule RBRACE','else',4,'p_else','pyacc.py',171),
  ('else_if -> KW_ELSE KW_IF conditional LBRACE father_rule RBRACE','else_if',6,'p_else_if','pyacc.py',174),
]
