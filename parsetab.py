
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDE CADENA CHAR COLON COMMA COMMENT DIVEQUAL DIVIDE DOT EQ EQUALS FLOAT FLOAT_32 FLOAT_64 GE GT HASH INTEGER KW_ABSTRACT KW_AS KW_ASYNC KW_AWAIT KW_BECOME KW_BOOLEAN KW_BOX KW_BREAK KW_CHARACTER KW_CONST KW_CONTINUE KW_CRATE KW_DO KW_DYN KW_ELSE KW_ENUM KW_EXTERN KW_FALSE KW_FINAL KW_FN KW_FOR KW_FROM KW_IF KW_IMPL KW_IN KW_LET KW_LINKEDLIST KW_LOOP KW_MACRO KW_MATCH KW_MOD KW_MOVE KW_MUT KW_NEW KW_OVERRIDE KW_PRINT KW_PRIV KW_PUB KW_REF KW_RETURN KW_SELFTYPE KW_SELFVALUE KW_STATIC KW_STATICLIFETIME KW_STRING KW_STRUCT KW_SUPER KW_TRAIT KW_TRUE KW_TRY KW_TYPE KW_TYPEOF KW_UNION KW_UNSAFE KW_UNSIZED KW_USE KW_VIRTUAL KW_WHERE KW_WHILE KW_YIELD LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MINUSEQUAL MODULUS MODULUSEQUAL NE ORE OREXE PLUS PLUSEQUAL PUSH QMARK QUOTE RBRACE RBRACKET REMOVE RETURN RPAREN SEMI SIG_INT_128 SIG_INT_16 SIG_INT_32 SIG_INT_64 SIG_INT_8 TIMES TIMESEQUAL UNSIG_INT_128 UNSIG_INT_16 UNSIG_INT_32 UNSIG_INT_64 UNSIG_INT_8 VARIABLEmain_rule : father_rule\n    | father_rule main_rulefather_rule : print\n    | dvariable\n    | array\n    | function\n    | variables\n    | control_str\n    | expression\n    | void\n    | linkedlist\n    | push\n    | remove\n    | if\n    | else\n    | else_ifexpression : expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | expression DIVIDE expression\n    | LPAREN expression RPAREN\n    | numbernumber : INTEGER\n    | FLOAT\n    | VARIABLEdataType : UNSIG_INT_8\n                | UNSIG_INT_16\n                | UNSIG_INT_32\n                | UNSIG_INT_64\n                | UNSIG_INT_128\n                | SIG_INT_8\n                | SIG_INT_16\n                | SIG_INT_32\n                | SIG_INT_64\n                | SIG_INT_128\n                | FLOAT_32\n                | FLOAT_64\n                | KW_BOOLEAN\n                | KW_STRINGdata : CADENA\n    | INTEGER\n    | CHAR\n    | FLOAT\n    | KW_FALSE\n    | KW_TRUEcomparator :\n    | EQ\n    | NE\n    | GE\n    | LE\n    | GT\n    | LTand : VARIABLE LAND VARIABLEconditional : VARIABLE comparator data\n    | and comparator dataor : VARIABLE LOR VARIABLEmdata : data\n    | data COMMA mdataprint : KW_PRINT LPAREN CADENA RPAREN SEMIdvariable : KW_LET VARIABLE SEMIarray : KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET\n    | LBRACKET mdata RBRACKETvariables : VARIABLE \n    | VARIABLE COMMA variableswhile : KW_WHILE LPAREN VARIABLE arguments : void\n    | variablesfunction : KW_FN VARIABLE LPAREN arguments RPAREN LBRACE father_rule RBRACEcontrol_str : for_str\n    | for_str_taggedfor_str : KW_FOR VARIABLE KW_IN range LBRACE father_rule RBRACE\n    | KW_FOR VARIABLE KW_IN VARIABLE LBRACE father_rule RBRACEfor_str_tagged : label COLON for_strrange : INTEGER DOT DOT INTEGER\n    | VARIABLE DOT DOT VARIABLElabel : QUOTE VARIABLEvoid : linkedlist : KW_LET VARIABLE COLON KW_LINKEDLIST LT dataType GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN SEMI\n                  | KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT dataType GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN SEMIlinkedlist : KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN SEMI\n                  | KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN SEMIpush : VARIABLE DOT PUSH LPAREN data RPAREN SEMIremove : VARIABLE DOT REMOVE LPAREN INTEGER RPAREN SEMIif : KW_IF conditional LBRACE main_rule RBRACEelse : KW_ELSE LBRACE main_rule RBRACEelse_if : KW_ELSE KW_IF conditional LBRACE main_rule RBRACEfunction : KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT dataType LBRACE return RBRACEexpression_var : expression\n                    | VARIABLEreturn : main_rule\n              | main_rule KW_RETURN expression_var SEMI'
    
_lr_action_items = {'KW_PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,23,24,25,26,31,40,57,62,63,64,65,67,68,72,73,76,79,92,109,110,114,123,125,127,129,150,152,161,162,165,167,173,180,189,193,197,206,208,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-69,-70,-22,-23,-24,-25,17,-17,-18,-19,-20,-21,-60,-63,-64,-62,17,-73,-85,17,-59,-84,17,17,-61,17,-86,-82,-83,-72,-71,-68,17,-80,-87,-81,-78,-79,]),'KW_LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,23,24,25,26,31,40,57,62,63,64,65,67,68,72,73,76,79,92,109,110,114,123,125,127,129,150,152,161,162,165,167,169,173,179,180,189,193,197,206,208,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-69,-70,-22,-23,-24,-25,19,-17,-18,-19,-20,-21,-60,-63,-64,-62,19,-73,-85,19,-59,-84,19,19,-61,19,-86,-82,-83,-72,-71,175,-68,175,19,-80,-87,-81,-78,-79,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,23,24,25,26,31,40,57,62,63,64,65,67,68,69,72,73,76,79,92,109,110,114,123,125,127,129,150,152,161,162,165,167,169,173,179,180,188,189,193,197,206,208,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-69,-70,-22,-23,-24,-25,21,-17,-18,-19,-20,-21,-60,94,-63,-64,-62,21,-73,-85,21,-59,-84,21,21,-61,21,-86,-82,-83,-72,-71,21,-68,21,21,94,-80,-87,-81,-78,-79,]),'KW_FN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,23,24,25,26,31,40,57,62,63,64,65,67,68,72,73,76,79,92,109,110,114,123,125,127,129,150,152,161,162,165,167,173,180,189,193,197,206,208,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-69,-70,-22,-23,-24,-25,22,-17,-18,-19,-20,-21,-60,-63,-64,-62,22,-73,-85,22,-59,-84,22,22,-61,22,-86,-82,-83,-72,-71,-68,22,-80,-87,-81,-78,-79,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,22,23,24,25,26,27,29,31,32,34,35,36,37,40,42,43,57,58,62,63,64,65,67,68,72,73,76,78,79,81,91,92,109,110,114,123,125,127,129,150,152,154,161,162,165,167,173,175,180,189,193,194,197,206,208,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,40,41,-25,53,-69,-70,-22,-23,55,59,-24,61,40,40,40,40,-25,71,72,20,55,-17,-18,-19,-20,-21,-60,-63,-64,-62,72,20,107,111,-73,-85,20,-59,-84,20,20,-61,20,-86,166,-82,-83,-72,-71,-68,181,20,-80,-87,200,-81,-78,-79,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,31,34,35,36,37,40,53,57,62,63,64,65,67,68,72,73,74,75,76,79,92,109,110,114,123,125,127,129,150,152,157,161,162,165,167,172,173,180,189,193,194,195,197,202,206,208,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,38,18,-25,-69,-70,-22,-23,-24,18,18,18,18,-25,78,18,-17,-18,-19,-20,-21,-60,-63,-64,99,100,-62,18,-73,-85,18,-59,-84,18,18,-61,18,-86,169,-82,-83,-72,-71,179,-68,18,-80,-87,18,201,-81,205,-78,-79,]),'KW_IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,23,24,25,26,28,31,40,57,62,63,64,65,67,68,72,73,76,79,92,109,110,114,123,125,127,129,150,152,161,162,165,167,173,180,189,193,197,206,208,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-69,-70,-22,-23,58,-24,-25,27,-17,-18,-19,-20,-21,-60,-63,-64,-62,27,-73,-85,27,-59,-84,27,27,-61,27,-86,-82,-83,-72,-71,-68,27,-80,-87,-81,-78,-79,]),'KW_ELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,23,24,25,26,31,40,57,62,63,64,65,67,68,72,73,76,79,92,109,110,114,123,125,127,129,150,152,161,162,165,167,173,180,189,193,197,206,208,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-69,-70,-22,-23,-24,-25,28,-17,-18,-19,-20,-21,-60,-63,-64,-62,28,-73,-85,28,-59,-84,28,28,-61,28,-86,-82,-83,-72,-71,-68,28,-80,-87,-81,-78,-79,]),'KW_FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,23,24,25,26,31,40,57,60,62,63,64,65,67,68,72,73,76,79,92,109,110,114,123,125,127,129,150,152,161,162,165,167,173,180,189,193,197,206,208,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-69,-70,-22,-23,-24,-25,29,29,-17,-18,-19,-20,-21,-60,-63,-64,-62,29,-73,-85,29,-59,-84,29,29,-61,29,-86,-82,-83,-72,-71,-68,29,-80,-87,-81,-78,-79,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,20,21,23,24,25,26,31,34,35,36,37,40,55,56,57,62,63,64,65,67,68,72,73,76,77,79,80,82,83,84,85,86,87,88,91,92,94,99,100,107,109,110,114,123,125,127,129,150,152,156,161,162,165,167,173,180,189,193,194,197,206,208,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,26,-25,48,-69,-70,-22,-23,-24,26,26,26,26,-25,-46,-46,26,-17,-18,-19,-20,-21,-60,-63,-64,-62,48,26,48,-47,-48,-49,-50,-51,-52,48,113,-73,48,48,121,-53,-85,26,-59,-84,26,26,-61,26,-86,168,-82,-83,-72,-71,-68,26,-80,-87,26,-81,-78,-79,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,20,21,23,24,25,26,31,34,35,36,37,40,55,56,57,62,63,64,65,67,68,72,73,76,77,79,80,82,83,84,85,86,87,88,92,94,99,107,109,110,114,123,125,127,129,150,152,161,162,165,167,173,180,189,193,194,197,206,208,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,31,-25,50,-69,-70,-22,-23,-24,31,31,31,31,-25,-46,-46,31,-17,-18,-19,-20,-21,-60,-63,-64,-62,50,31,50,-47,-48,-49,-50,-51,-52,50,-73,50,50,-53,-85,31,-59,-84,31,31,-61,31,-86,-82,-83,-72,-71,-68,31,-80,-87,31,-81,-78,-79,]),'QUOTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,23,24,25,26,31,40,57,62,63,64,65,67,68,72,73,76,79,92,109,110,114,123,125,127,129,150,152,161,162,165,167,173,180,189,193,197,206,208,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-69,-70,-22,-23,-24,-25,32,-17,-18,-19,-20,-21,-60,-63,-64,-62,32,-73,-85,32,-59,-84,32,32,-61,32,-86,-82,-83,-72,-71,-68,32,-80,-87,-81,-78,-79,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,23,24,25,26,31,33,40,62,63,64,65,67,68,72,73,76,92,109,114,123,129,152,161,162,165,167,173,189,193,197,206,208,],[-77,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-69,-70,-22,-23,-24,-2,-25,-17,-18,-19,-20,-21,-60,-63,-64,-62,-73,-85,-59,-84,-61,-86,-82,-83,-72,-71,-68,-80,-87,-81,-78,-79,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,23,24,25,26,31,33,40,57,62,63,64,65,67,68,72,73,76,79,89,92,105,109,110,114,123,124,125,127,129,150,152,153,155,161,162,163,165,167,173,180,186,187,189,193,197,203,206,208,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-69,-70,-22,-23,-24,-2,-25,-77,-17,-18,-19,-20,-21,-60,-63,-64,-62,-77,109,-73,123,-85,-77,-59,-84,152,-77,-77,-61,-77,-86,165,167,-82,-83,173,-72,-71,-68,-77,193,-90,-80,-87,-81,-91,-78,-79,]),'KW_RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,23,24,25,26,31,33,40,62,63,64,65,67,68,72,73,76,92,109,114,123,129,152,161,162,165,167,173,180,187,189,193,197,206,208,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-25,-69,-70,-22,-23,-24,-2,-25,-17,-18,-19,-20,-21,-60,-63,-64,-62,-73,-85,-59,-84,-61,-86,-82,-83,-72,-71,-68,-77,194,-80,-87,-81,-78,-79,]),'PLUS':([9,20,25,26,31,39,40,62,63,64,65,67,199,200,],[34,-25,-22,-23,-24,34,-25,34,34,34,34,-21,34,-25,]),'MINUS':([9,20,25,26,31,39,40,62,63,64,65,67,122,199,200,],[35,-25,-22,-23,-24,35,-25,35,35,35,35,-21,151,35,-25,]),'TIMES':([9,20,25,26,31,39,40,62,63,64,65,67,199,200,],[36,-25,-22,-23,-24,36,-25,36,36,36,36,-21,36,-25,]),'DIVIDE':([9,20,25,26,31,39,40,62,63,64,65,67,199,200,],[37,-25,-22,-23,-24,37,-25,37,37,37,37,-21,37,-25,]),'KW_MUT':([19,],[42,]),'COMMA':([20,46,47,48,49,50,51,52,72,],[43,77,-40,-41,-42,-43,-44,-45,43,]),'DOT':([20,111,113,126,128,],[44,126,128,154,156,]),'CADENA':([21,38,55,56,77,80,82,83,84,85,86,87,88,94,99,107,],[47,66,-46,-46,47,47,-47,-48,-49,-50,-51,-52,47,47,47,-53,]),'CHAR':([21,55,56,77,80,82,83,84,85,86,87,88,94,99,107,],[49,-46,-46,49,49,-47,-48,-49,-50,-51,-52,49,49,49,-53,]),'KW_FALSE':([21,55,56,77,80,82,83,84,85,86,87,88,94,99,107,],[51,-46,-46,51,51,-47,-48,-49,-50,-51,-52,51,51,51,-53,]),'KW_TRUE':([21,55,56,77,80,82,83,84,85,86,87,88,94,99,107,],[52,-46,-46,52,52,-47,-48,-49,-50,-51,-52,52,52,52,-53,]),'RPAREN':([25,26,31,39,40,47,48,49,50,51,52,62,63,64,65,66,67,72,73,76,78,102,103,104,120,121,129,176,185,201,205,],[-22,-23,-24,67,-25,-40,-41,-42,-43,-44,-45,-17,-18,-19,-20,93,-21,-63,-64,-62,-77,122,-66,-67,148,149,-61,182,192,204,207,]),'SEMI':([25,26,31,40,41,62,63,64,65,67,93,148,149,182,192,198,199,200,204,207,],[-22,-23,-24,-25,68,-17,-18,-19,-20,-21,114,161,162,189,197,203,-88,-25,206,208,]),'LBRACE':([28,47,48,49,50,51,52,54,90,106,108,111,112,122,132,133,134,135,136,137,138,139,140,141,142,143,144,145,166,168,174,],[57,-40,-41,-42,-43,-44,-45,79,110,-54,-55,125,127,150,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-75,-74,180,]),'COLON':([30,41,61,71,95,116,119,147,177,183,184,191,],[60,70,-76,97,116,130,147,160,183,190,191,196,]),'EQUALS':([41,71,158,171,181,],[69,98,170,178,188,]),'PUSH':([44,],[74,]),'REMOVE':([44,],[75,]),'RBRACKET':([45,46,47,48,49,50,51,52,101,115,],[76,-57,-40,-41,-42,-43,-44,-45,-58,129,]),'LAND':([55,],[81,]),'EQ':([55,56,107,],[82,82,-53,]),'NE':([55,56,107,],[83,83,-53,]),'GE':([55,56,107,],[84,84,-53,]),'LE':([55,56,107,],[85,85,-53,]),'GT':([55,56,107,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,159,],[86,86,-53,158,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,164,171,]),'LT':([55,56,96,107,118,],[87,87,117,-53,146,]),'KW_IN':([59,],[91,]),'KW_LINKEDLIST':([69,70,97,98,170,178,],[95,96,118,119,177,184,]),'UNSIG_INT_8':([117,146,164,],[132,132,132,]),'UNSIG_INT_16':([117,146,164,],[133,133,133,]),'UNSIG_INT_32':([117,146,164,],[134,134,134,]),'UNSIG_INT_64':([117,146,164,],[135,135,135,]),'UNSIG_INT_128':([117,146,164,],[136,136,136,]),'SIG_INT_8':([117,146,164,],[137,137,137,]),'SIG_INT_16':([117,146,164,],[138,138,138,]),'SIG_INT_32':([117,146,164,],[139,139,139,]),'SIG_INT_64':([117,146,164,],[140,140,140,]),'SIG_INT_128':([117,146,164,],[141,141,141,]),'FLOAT_32':([117,146,164,],[142,142,142,]),'FLOAT_64':([117,146,164,],[143,143,143,]),'KW_BOOLEAN':([117,146,164,],[144,144,144,]),'KW_STRING':([117,146,164,],[145,145,145,]),'KW_FROM':([130,160,],[157,172,]),'KW_NEW':([190,196,],[195,202,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main_rule':([0,2,57,79,110,180,],[1,33,89,105,124,187,]),'father_rule':([0,2,57,79,110,125,127,150,180,],[2,2,2,2,2,153,155,163,2,]),'print':([0,2,57,79,110,125,127,150,180,],[3,3,3,3,3,3,3,3,3,]),'dvariable':([0,2,57,79,110,125,127,150,180,],[4,4,4,4,4,4,4,4,4,]),'array':([0,2,57,79,110,125,127,150,169,179,180,],[5,5,5,5,5,5,5,5,176,185,5,]),'function':([0,2,57,79,110,125,127,150,180,],[6,6,6,6,6,6,6,6,6,]),'variables':([0,2,43,57,78,79,110,125,127,150,180,],[7,7,73,7,104,7,7,7,7,7,7,]),'control_str':([0,2,57,79,110,125,127,150,180,],[8,8,8,8,8,8,8,8,8,]),'expression':([0,2,18,34,35,36,37,57,79,110,125,127,150,180,194,],[9,9,39,62,63,64,65,9,9,9,9,9,9,9,199,]),'void':([0,2,57,78,79,110,125,127,150,180,],[10,10,10,103,10,10,10,10,10,10,]),'linkedlist':([0,2,57,79,110,125,127,150,180,],[11,11,11,11,11,11,11,11,11,]),'push':([0,2,57,79,110,125,127,150,180,],[12,12,12,12,12,12,12,12,12,]),'remove':([0,2,57,79,110,125,127,150,180,],[13,13,13,13,13,13,13,13,13,]),'if':([0,2,57,79,110,125,127,150,180,],[14,14,14,14,14,14,14,14,14,]),'else':([0,2,57,79,110,125,127,150,180,],[15,15,15,15,15,15,15,15,15,]),'else_if':([0,2,57,79,110,125,127,150,180,],[16,16,16,16,16,16,16,16,16,]),'for_str':([0,2,57,60,79,110,125,127,150,180,],[23,23,23,92,23,23,23,23,23,23,]),'for_str_tagged':([0,2,57,79,110,125,127,150,180,],[24,24,24,24,24,24,24,24,24,]),'number':([0,2,18,34,35,36,37,57,79,110,125,127,150,180,194,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'label':([0,2,57,79,110,125,127,150,180,],[30,30,30,30,30,30,30,30,30,]),'mdata':([21,77,94,],[45,101,115,]),'data':([21,77,80,88,94,99,],[46,46,106,108,46,120,]),'conditional':([27,58,],[54,90,]),'and':([27,58,],[56,56,]),'comparator':([55,56,],[80,88,]),'arguments':([78,],[102,]),'range':([91,],[112,]),'dataType':([117,146,164,],[131,159,174,]),'return':([180,],[186,]),'expression_var':([194,],[198,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main_rule","S'",1,None,None,None),
  ('main_rule -> father_rule','main_rule',1,'p_main_rule','pyacc.py',9),
  ('main_rule -> father_rule main_rule','main_rule',2,'p_main_rule','pyacc.py',10),
  ('father_rule -> print','father_rule',1,'p_father_rule','pyacc.py',15),
  ('father_rule -> dvariable','father_rule',1,'p_father_rule','pyacc.py',16),
  ('father_rule -> array','father_rule',1,'p_father_rule','pyacc.py',17),
  ('father_rule -> function','father_rule',1,'p_father_rule','pyacc.py',18),
  ('father_rule -> variables','father_rule',1,'p_father_rule','pyacc.py',19),
  ('father_rule -> control_str','father_rule',1,'p_father_rule','pyacc.py',20),
  ('father_rule -> expression','father_rule',1,'p_father_rule','pyacc.py',21),
  ('father_rule -> void','father_rule',1,'p_father_rule','pyacc.py',22),
  ('father_rule -> linkedlist','father_rule',1,'p_father_rule','pyacc.py',23),
  ('father_rule -> push','father_rule',1,'p_father_rule','pyacc.py',24),
  ('father_rule -> remove','father_rule',1,'p_father_rule','pyacc.py',25),
  ('father_rule -> if','father_rule',1,'p_father_rule','pyacc.py',26),
  ('father_rule -> else','father_rule',1,'p_father_rule','pyacc.py',27),
  ('father_rule -> else_if','father_rule',1,'p_father_rule','pyacc.py',28),
  ('expression -> expression PLUS expression','expression',3,'p_expression','pyacc.py',34),
  ('expression -> expression MINUS expression','expression',3,'p_expression','pyacc.py',35),
  ('expression -> expression TIMES expression','expression',3,'p_expression','pyacc.py',36),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','pyacc.py',37),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','pyacc.py',38),
  ('expression -> number','expression',1,'p_expression','pyacc.py',39),
  ('number -> INTEGER','number',1,'p_number','pyacc.py',44),
  ('number -> FLOAT','number',1,'p_number','pyacc.py',45),
  ('number -> VARIABLE','number',1,'p_number','pyacc.py',46),
  ('dataType -> UNSIG_INT_8','dataType',1,'p_dataType','pyacc.py',50),
  ('dataType -> UNSIG_INT_16','dataType',1,'p_dataType','pyacc.py',51),
  ('dataType -> UNSIG_INT_32','dataType',1,'p_dataType','pyacc.py',52),
  ('dataType -> UNSIG_INT_64','dataType',1,'p_dataType','pyacc.py',53),
  ('dataType -> UNSIG_INT_128','dataType',1,'p_dataType','pyacc.py',54),
  ('dataType -> SIG_INT_8','dataType',1,'p_dataType','pyacc.py',55),
  ('dataType -> SIG_INT_16','dataType',1,'p_dataType','pyacc.py',56),
  ('dataType -> SIG_INT_32','dataType',1,'p_dataType','pyacc.py',57),
  ('dataType -> SIG_INT_64','dataType',1,'p_dataType','pyacc.py',58),
  ('dataType -> SIG_INT_128','dataType',1,'p_dataType','pyacc.py',59),
  ('dataType -> FLOAT_32','dataType',1,'p_dataType','pyacc.py',60),
  ('dataType -> FLOAT_64','dataType',1,'p_dataType','pyacc.py',61),
  ('dataType -> KW_BOOLEAN','dataType',1,'p_dataType','pyacc.py',62),
  ('dataType -> KW_STRING','dataType',1,'p_dataType','pyacc.py',63),
  ('data -> CADENA','data',1,'p_data','pyacc.py',67),
  ('data -> INTEGER','data',1,'p_data','pyacc.py',68),
  ('data -> CHAR','data',1,'p_data','pyacc.py',69),
  ('data -> FLOAT','data',1,'p_data','pyacc.py',70),
  ('data -> KW_FALSE','data',1,'p_data','pyacc.py',71),
  ('data -> KW_TRUE','data',1,'p_data','pyacc.py',72),
  ('comparator -> <empty>','comparator',0,'p_comparator','pyacc.py',75),
  ('comparator -> EQ','comparator',1,'p_comparator','pyacc.py',76),
  ('comparator -> NE','comparator',1,'p_comparator','pyacc.py',77),
  ('comparator -> GE','comparator',1,'p_comparator','pyacc.py',78),
  ('comparator -> LE','comparator',1,'p_comparator','pyacc.py',79),
  ('comparator -> GT','comparator',1,'p_comparator','pyacc.py',80),
  ('comparator -> LT','comparator',1,'p_comparator','pyacc.py',81),
  ('and -> VARIABLE LAND VARIABLE','and',3,'p_and','pyacc.py',84),
  ('conditional -> VARIABLE comparator data','conditional',3,'p_conditional','pyacc.py',87),
  ('conditional -> and comparator data','conditional',3,'p_conditional','pyacc.py',88),
  ('or -> VARIABLE LOR VARIABLE','or',3,'p_or','pyacc.py',91),
  ('mdata -> data','mdata',1,'p_mdata','pyacc.py',94),
  ('mdata -> data COMMA mdata','mdata',3,'p_mdata','pyacc.py',95),
  ('print -> KW_PRINT LPAREN CADENA RPAREN SEMI','print',5,'p_print','pyacc.py',98),
  ('dvariable -> KW_LET VARIABLE SEMI','dvariable',3,'p_declare_variable','pyacc.py',101),
  ('array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET','array',6,'p_array','pyacc.py',104),
  ('array -> LBRACKET mdata RBRACKET','array',3,'p_array','pyacc.py',105),
  ('variables -> VARIABLE','variables',1,'p_variables','pyacc.py',108),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','pyacc.py',109),
  ('while -> KW_WHILE LPAREN VARIABLE','while',3,'p_while','pyacc.py',112),
  ('arguments -> void','arguments',1,'p_arguments','pyacc.py',118),
  ('arguments -> variables','arguments',1,'p_arguments','pyacc.py',119),
  ('function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE father_rule RBRACE','function',8,'p_function','pyacc.py',123),
  ('control_str -> for_str','control_str',1,'p_control_str','pyacc.py',127),
  ('control_str -> for_str_tagged','control_str',1,'p_control_str','pyacc.py',128),
  ('for_str -> KW_FOR VARIABLE KW_IN range LBRACE father_rule RBRACE','for_str',7,'p_for_str','pyacc.py',131),
  ('for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE father_rule RBRACE','for_str',7,'p_for_str','pyacc.py',132),
  ('for_str_tagged -> label COLON for_str','for_str_tagged',3,'p_for_str_tagged','pyacc.py',135),
  ('range -> INTEGER DOT DOT INTEGER','range',4,'p_range','pyacc.py',138),
  ('range -> VARIABLE DOT DOT VARIABLE','range',4,'p_range','pyacc.py',139),
  ('label -> QUOTE VARIABLE','label',2,'p_label','pyacc.py',142),
  ('void -> <empty>','void',0,'p_void','pyacc.py',146),
  ('linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT dataType GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN SEMI','linkedlist',15,'p_linkedlist_empty','pyacc.py',154),
  ('linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT dataType GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN SEMI','linkedlist',16,'p_linkedlist_empty','pyacc.py',155),
  ('linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN SEMI','linkedlist',11,'p_linkedlist_array','pyacc.py',158),
  ('linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN SEMI','linkedlist',12,'p_linkedlist_array','pyacc.py',159),
  ('push -> VARIABLE DOT PUSH LPAREN data RPAREN SEMI','push',7,'p_push','pyacc.py',162),
  ('remove -> VARIABLE DOT REMOVE LPAREN INTEGER RPAREN SEMI','remove',7,'p_remove','pyacc.py',165),
  ('if -> KW_IF conditional LBRACE main_rule RBRACE','if',5,'p_if','pyacc.py',170),
  ('else -> KW_ELSE LBRACE main_rule RBRACE','else',4,'p_else','pyacc.py',173),
  ('else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE','else_if',6,'p_else_if','pyacc.py',176),
  ('function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT dataType LBRACE return RBRACE','function',11,'p_function_return','pyacc.py',181),
  ('expression_var -> expression','expression_var',1,'p_expression_var','pyacc.py',184),
  ('expression_var -> VARIABLE','expression_var',1,'p_expression_var','pyacc.py',185),
  ('return -> main_rule','return',1,'p_return_statement','pyacc.py',188),
  ('return -> main_rule KW_RETURN expression_var SEMI','return',4,'p_return_statement','pyacc.py',189),
]
