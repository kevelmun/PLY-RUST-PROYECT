Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDE
    COMMENT
    HASH
    KW_ABSTRACT
    KW_AS
    KW_ASYNC
    KW_AWAIT
    KW_BECOME
    KW_BOX
    KW_BREAK
    KW_CHARACTER
    KW_CONTINUE
    KW_CRATE
    KW_DO
    KW_DYN
    KW_ENUM
    KW_EXTERN
    KW_FINAL
    KW_IMPL
    KW_LOOP
    KW_MACRO
    KW_MATCH
    KW_MOD
    KW_MOVE
    KW_OVERRIDE
    KW_PRIV
    KW_PUB
    KW_REF
    KW_SELFTYPE
    KW_SELFVALUE
    KW_STATIC
    KW_STATICLIFETIME
    KW_STRUCT
    KW_SUPER
    KW_TRAIT
    KW_TRY
    KW_TYPE
    KW_TYPEOF
    KW_UNION
    KW_UNSAFE
    KW_UNSIZED
    KW_USE
    KW_VIRTUAL
    KW_WHERE
    KW_YIELD
    LNOT
    MODULUS
    ORE
    OREXE
    QMARK

Grammar

Rule 0     S' -> main_rule
Rule 1     main_rule -> father_rule
Rule 2     main_rule -> father_rule main_rule
Rule 3     father_rule -> print
Rule 4     father_rule -> dvariable
Rule 5     father_rule -> function
Rule 6     father_rule -> variables
Rule 7     father_rule -> control_str
Rule 8     father_rule -> expression
Rule 9     father_rule -> void
Rule 10    father_rule -> data_str
Rule 11    father_rule -> array
Rule 12    father_rule -> linkedlist_methods
Rule 13    father_rule -> hashmap_methods
Rule 14    father_rule -> initialization
Rule 15    father_rule -> input
Rule 16    father_rule -> assignation
Rule 17    father_rule -> declare_data_type
Rule 18    expression -> expression PLUS expression
Rule 19    expression -> expression MINUS expression
Rule 20    expression -> expression TIMES expression
Rule 21    expression -> expression DIVIDE expression
Rule 22    expression -> LPAREN expression RPAREN
Rule 23    expression -> number
Rule 24    number -> INTEGER
Rule 25    number -> FLOAT
Rule 26    number -> VARIABLE
Rule 27    data_type -> UNSIG_INT_8
Rule 28    data_type -> UNSIG_INT_16
Rule 29    data_type -> UNSIG_INT_32
Rule 30    data_type -> UNSIG_INT_64
Rule 31    data_type -> UNSIG_INT_128
Rule 32    data_type -> SIG_INT_8
Rule 33    data_type -> SIG_INT_16
Rule 34    data_type -> SIG_INT_32
Rule 35    data_type -> SIG_INT_64
Rule 36    data_type -> SIG_INT_128
Rule 37    data_type -> FLOAT_32
Rule 38    data_type -> FLOAT_64
Rule 39    data_type -> KW_BOOLEAN
Rule 40    data_type -> KW_STRING
Rule 41    assign_operators -> EQUALS
Rule 42    assign_operators -> TIMESEQUAL
Rule 43    assign_operators -> DIVEQUAL
Rule 44    assign_operators -> MODULUSEQUAL
Rule 45    assign_operators -> PLUSEQUAL
Rule 46    assign_operators -> MINUSEQUAL
Rule 47    data -> CADENA
Rule 48    data -> INTEGER
Rule 49    data -> CHAR
Rule 50    data -> FLOAT
Rule 51    data -> KW_FALSE
Rule 52    data -> KW_TRUE
Rule 53    data -> tuple
Rule 54    comparator -> <empty>
Rule 55    comparator -> EQ
Rule 56    comparator -> NE
Rule 57    comparator -> GE
Rule 58    comparator -> LE
Rule 59    comparator -> GT
Rule 60    comparator -> LT
Rule 61    and -> VARIABLE LAND VARIABLE
Rule 62    conditional -> VARIABLE comparator data
Rule 63    conditional -> and comparator data
Rule 64    or -> VARIABLE LOR VARIABLE
Rule 65    mdata -> data
Rule 66    mdata -> data COMMA mdata
Rule 67    print -> KW_PRINT LPAREN CADENA RPAREN SEMI
Rule 68    dvariable -> KW_LET VARIABLE SEMI
Rule 69    array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
Rule 70    array -> LBRACKET mdata RBRACKET
Rule 71    variables -> VARIABLE
Rule 72    variables -> VARIABLE COMMA variables
Rule 73    while -> KW_WHILE LPAREN VARIABLE
Rule 74    tuple -> LPAREN mdata RPAREN
Rule 75    initialization -> let_initialization SEMI
Rule 76    initialization -> const_initialization SEMI
Rule 77    initialization -> data_str SEMI
Rule 78    initialization -> input_init SEMI
Rule 79    let_initialization -> KW_LET VARIABLE EQUALS data
Rule 80    let_initialization -> KW_LET VARIABLE COLON data_type EQUALS data
Rule 81    let_initialization -> KW_LET KW_MUT VARIABLE EQUALS data
Rule 82    let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS data
Rule 83    let_initialization -> KW_LET VARIABLE EQUALS expression_var
Rule 84    let_initialization -> KW_LET VARIABLE COLON data_type EQUALS expression_var
Rule 85    let_initialization -> KW_LET KW_MUT VARIABLE EQUALS expression_var
Rule 86    let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var
Rule 87    const_initialization -> KW_CONST VARIABLE COLON data_type EQUALS data
Rule 88    arguments -> void
Rule 89    arguments -> variables
Rule 90    function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE
Rule 91    control_str -> for_str
Rule 92    control_str -> for_str_tagged
Rule 93    control_str -> if
Rule 94    control_str -> else
Rule 95    control_str -> else_if
Rule 96    control_str -> while
Rule 97    for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE
Rule 98    for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE
Rule 99    for_str_tagged -> label COLON for_str
Rule 100   range -> INTEGER DOT DOT INTEGER
Rule 101   range -> VARIABLE DOT DOT VARIABLE
Rule 102   label -> QUOTE VARIABLE
Rule 103   data_str -> array
Rule 104   data_str -> hashmap
Rule 105   data_str -> linkedlist
Rule 106   hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
Rule 107   hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
Rule 108   hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
Rule 109   hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
Rule 110   hashmap_methods -> VARIABLE hashmap_insert
Rule 111   hashmap_methods -> VARIABLE hashmap_remove
Rule 112   hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI
Rule 113   hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI
Rule 114   void -> <empty>
Rule 115   linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
Rule 116   linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
Rule 117   linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
Rule 118   linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
Rule 119   linkedlist_methods -> VARIABLE linkedlist_push
Rule 120   linkedlist_methods -> VARIABLE linkedlist_remove
Rule 121   linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI
Rule 122   linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI
Rule 123   if -> KW_IF conditional LBRACE main_rule RBRACE
Rule 124   else -> KW_ELSE LBRACE main_rule RBRACE
Rule 125   else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE
Rule 126   function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE
Rule 127   expression_var -> expression
Rule 128   expression_var -> VARIABLE
Rule 129   return -> main_rule
Rule 130   return -> main_rule KW_RETURN expression_var SEMI
Rule 131   input_init -> KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN
Rule 132   input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
Rule 133   assignation -> VARIABLE assign_operators number
Rule 134   declare_data_type -> KW_LET VARIABLE COLON data_type SEMI

Terminals, with rules where they appear

AND                  : 113 132
ANDE                 : 
CADENA               : 47 67 132
CHAR                 : 49
COLON                : 80 82 84 86 87 99 106 106 107 107 108 108 109 109 115 115 115 116 116 116 117 117 118 118 131 131 134
COMMA                : 66 72
COMMENT              : 
DIVEQUAL             : 43
DIVIDE               : 21
DOT                  : 100 100 101 101 112 113 121 122 132 132
EQ                   : 55
EQUALS               : 41 69 79 80 81 82 83 84 85 86 87 106 107 108 109 115 116 117 118 131
FLOAT                : 25 50
FLOAT_32             : 37
FLOAT_64             : 38
GE                   : 57
GT                   : 59 115 116 126
HASH                 : 
INTEGER              : 24 48 100 100 122
KW_ABSTRACT          : 
KW_AS                : 
KW_ASYNC             : 
KW_AWAIT             : 
KW_BECOME            : 
KW_BOOLEAN           : 39
KW_BOX               : 
KW_BREAK             : 
KW_CHARACTER         : 
KW_CONST             : 87
KW_CONTINUE          : 
KW_CRATE             : 
KW_DO                : 
KW_DYN               : 
KW_ELSE              : 124 125
KW_ENUM              : 
KW_EXPECT            : 132
KW_EXTERN            : 
KW_FALSE             : 51
KW_FINAL             : 
KW_FN                : 90 126
KW_FOR               : 97 98
KW_FROM              : 108 109 117 118
KW_HASHMAP           : 106 107 108 109
KW_IF                : 123 125
KW_IMPL              : 
KW_IN                : 97 98
KW_INSERT            : 112
KW_IO                : 131
KW_LET               : 68 69 79 80 81 82 83 84 85 86 106 107 108 109 115 116 117 118 131 134
KW_LINKEDLIST        : 115 115 116 116 117 118
KW_LOOP              : 
KW_MACRO             : 
KW_MATCH             : 
KW_MOD               : 
KW_MOVE              : 
KW_MUT               : 81 82 85 86 107 109 116 118 132
KW_NEW               : 106 107 115 116
KW_OVERRIDE          : 
KW_PRINT             : 67
KW_PRIV              : 
KW_PUB               : 
KW_PUSH_BACK         : 121
KW_READ_LINE         : 132
KW_REF               : 
KW_REMOVE            : 113 122
KW_RETURN            : 130
KW_SELFTYPE          : 
KW_SELFVALUE         : 
KW_STATIC            : 
KW_STATICLIFETIME    : 
KW_STDIN             : 131
KW_STRING            : 40
KW_STRUCT            : 
KW_SUPER             : 
KW_TRAIT             : 
KW_TRUE              : 52
KW_TRY               : 
KW_TYPE              : 
KW_TYPEOF            : 
KW_UNION             : 
KW_UNSAFE            : 
KW_UNSIZED           : 
KW_USE               : 
KW_VIRTUAL           : 
KW_WHERE             : 
KW_WHILE             : 73
KW_YIELD             : 
LAND                 : 61
LBRACE               : 90 97 98 123 124 125 126
LBRACKET             : 69 70
LE                   : 58
LNOT                 : 
LOR                  : 64
LPAREN               : 22 67 73 74 90 106 107 108 109 112 113 115 116 117 118 121 122 126 131 132 132
LT                   : 60 115 116
MINUS                : 19 126
MINUSEQUAL           : 46
MODULUS              : 
MODULUSEQUAL         : 44
NE                   : 56
ORE                  : 
OREXE                : 
PLUS                 : 18
PLUSEQUAL            : 45
QMARK                : 
QUOTE                : 102
RBRACE               : 90 97 98 123 124 125 126
RBRACKET             : 69 70
RPAREN               : 22 67 74 90 106 107 108 109 112 113 115 116 117 118 121 122 126 131 132 132
SEMI                 : 67 68 75 76 77 78 112 113 121 122 130 132 134
SIG_INT_128          : 36
SIG_INT_16           : 33
SIG_INT_32           : 34
SIG_INT_64           : 35
SIG_INT_8            : 32
TIMES                : 20
TIMESEQUAL           : 42
UNSIG_INT_128        : 31
UNSIG_INT_16         : 28
UNSIG_INT_32         : 29
UNSIG_INT_64         : 30
UNSIG_INT_8          : 27
VARIABLE             : 26 61 61 62 64 64 68 69 71 72 73 79 80 81 82 83 84 85 86 87 90 97 98 98 101 101 102 106 107 108 109 110 111 115 116 117 118 119 120 126 128 131 132 132 133 134
error                : 

Nonterminals, with rules where they appear

and                  : 63
arguments            : 90 126
array                : 11 103 108 109 117 118
assign_operators     : 133
assignation          : 16
comparator           : 62 63
conditional          : 123 125
const_initialization : 76
control_str          : 7
data                 : 62 63 65 66 79 80 81 82 87 113 121
data_str             : 10 77
data_type            : 80 82 84 86 87 115 116 126 134
declare_data_type    : 17
dvariable            : 4
else                 : 94
else_if              : 95
expression           : 8 18 18 19 19 20 20 21 21 22 127
expression_var       : 83 84 85 86 130
father_rule          : 1 2
for_str              : 91 99
for_str_tagged       : 92
function             : 5
hashmap              : 104
hashmap_insert       : 110
hashmap_methods      : 13
hashmap_remove       : 111
if                   : 93
initialization       : 14
input                : 15
input_init           : 78
label                : 99
let_initialization   : 75
linkedlist           : 105
linkedlist_methods   : 12
linkedlist_push      : 119
linkedlist_remove    : 120
main_rule            : 2 90 97 98 123 124 125 129 130 0
mdata                : 66 69 70 74 112
number               : 23 133
or                   : 
print                : 3
range                : 97
return               : 126
tuple                : 53
variables            : 6 72 89
void                 : 9 88
while                : 96

Parsing method: LALR

state 0

    (0) S' -> . main_rule
    (1) main_rule -> . father_rule
    (2) main_rule -> . father_rule main_rule
    (3) father_rule -> . print
    (4) father_rule -> . dvariable
    (5) father_rule -> . function
    (6) father_rule -> . variables
    (7) father_rule -> . control_str
    (8) father_rule -> . expression
    (9) father_rule -> . void
    (10) father_rule -> . data_str
    (11) father_rule -> . array
    (12) father_rule -> . linkedlist_methods
    (13) father_rule -> . hashmap_methods
    (14) father_rule -> . initialization
    (15) father_rule -> . input
    (16) father_rule -> . assignation
    (17) father_rule -> . declare_data_type
    (67) print -> . KW_PRINT LPAREN CADENA RPAREN SEMI
    (68) dvariable -> . KW_LET VARIABLE SEMI
    (90) function -> . KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> . KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE
    (71) variables -> . VARIABLE
    (72) variables -> . VARIABLE COMMA variables
    (91) control_str -> . for_str
    (92) control_str -> . for_str_tagged
    (93) control_str -> . if
    (94) control_str -> . else
    (95) control_str -> . else_if
    (96) control_str -> . while
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (114) void -> .
    (103) data_str -> . array
    (104) data_str -> . hashmap
    (105) data_str -> . linkedlist
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET
    (119) linkedlist_methods -> . VARIABLE linkedlist_push
    (120) linkedlist_methods -> . VARIABLE linkedlist_remove
    (110) hashmap_methods -> . VARIABLE hashmap_insert
    (111) hashmap_methods -> . VARIABLE hashmap_remove
    (75) initialization -> . let_initialization SEMI
    (76) initialization -> . const_initialization SEMI
    (77) initialization -> . data_str SEMI
    (78) initialization -> . input_init SEMI
    (132) input -> . VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
    (133) assignation -> . VARIABLE assign_operators number
    (134) declare_data_type -> . KW_LET VARIABLE COLON data_type SEMI
    (97) for_str -> . KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> . KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE
    (99) for_str_tagged -> . label COLON for_str
    (123) if -> . KW_IF conditional LBRACE main_rule RBRACE
    (124) else -> . KW_ELSE LBRACE main_rule RBRACE
    (125) else_if -> . KW_ELSE KW_IF conditional LBRACE main_rule RBRACE
    (73) while -> . KW_WHILE LPAREN VARIABLE
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE
    (106) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (107) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (109) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (115) linkedlist -> . KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (116) linkedlist -> . KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (117) linkedlist -> . KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (118) linkedlist -> . KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> . KW_LET VARIABLE EQUALS data
    (80) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS data
    (81) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS data
    (82) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS data
    (83) let_initialization -> . KW_LET VARIABLE EQUALS expression_var
    (84) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS expression_var
    (85) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS expression_var
    (86) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var
    (87) const_initialization -> . KW_CONST VARIABLE COLON data_type EQUALS data
    (131) input_init -> . KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN
    (102) label -> . QUOTE VARIABLE

  ! shift/reduce conflict for KW_PRINT resolved as shift
  ! shift/reduce conflict for KW_LET resolved as shift
  ! shift/reduce conflict for KW_FN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for KW_FOR resolved as shift
  ! shift/reduce conflict for KW_IF resolved as shift
  ! shift/reduce conflict for KW_ELSE resolved as shift
  ! shift/reduce conflict for KW_WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for KW_CONST resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
    KW_PRINT        shift and go to state 18
    KW_LET          shift and go to state 20
    KW_FN           shift and go to state 22
    VARIABLE        shift and go to state 21
    LPAREN          shift and go to state 19
    $end            reduce using rule 114 (void -> .)
    LBRACKET        shift and go to state 32
    KW_FOR          shift and go to state 36
    KW_IF           shift and go to state 38
    KW_ELSE         shift and go to state 39
    KW_WHILE        shift and go to state 40
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    KW_CONST        shift and go to state 43
    QUOTE           shift and go to state 44

  ! KW_PRINT        [ reduce using rule 114 (void -> .) ]
  ! KW_LET          [ reduce using rule 114 (void -> .) ]
  ! KW_FN           [ reduce using rule 114 (void -> .) ]
  ! VARIABLE        [ reduce using rule 114 (void -> .) ]
  ! LPAREN          [ reduce using rule 114 (void -> .) ]
  ! LBRACKET        [ reduce using rule 114 (void -> .) ]
  ! KW_FOR          [ reduce using rule 114 (void -> .) ]
  ! KW_IF           [ reduce using rule 114 (void -> .) ]
  ! KW_ELSE         [ reduce using rule 114 (void -> .) ]
  ! KW_WHILE        [ reduce using rule 114 (void -> .) ]
  ! INTEGER         [ reduce using rule 114 (void -> .) ]
  ! FLOAT           [ reduce using rule 114 (void -> .) ]
  ! KW_CONST        [ reduce using rule 114 (void -> .) ]
  ! QUOTE           [ reduce using rule 114 (void -> .) ]

    main_rule                      shift and go to state 1
    father_rule                    shift and go to state 2
    print                          shift and go to state 3
    dvariable                      shift and go to state 4
    function                       shift and go to state 5
    variables                      shift and go to state 6
    control_str                    shift and go to state 7
    expression                     shift and go to state 8
    void                           shift and go to state 9
    data_str                       shift and go to state 10
    array                          shift and go to state 11
    linkedlist_methods             shift and go to state 12
    hashmap_methods                shift and go to state 13
    initialization                 shift and go to state 14
    input                          shift and go to state 15
    assignation                    shift and go to state 16
    declare_data_type              shift and go to state 17
    for_str                        shift and go to state 23
    for_str_tagged                 shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    else_if                        shift and go to state 27
    while                          shift and go to state 28
    number                         shift and go to state 29
    hashmap                        shift and go to state 30
    linkedlist                     shift and go to state 31
    let_initialization             shift and go to state 33
    const_initialization           shift and go to state 34
    input_init                     shift and go to state 35
    label                          shift and go to state 37

state 1

    (0) S' -> main_rule .



state 2

    (1) main_rule -> father_rule .
    (2) main_rule -> father_rule . main_rule
    (1) main_rule -> . father_rule
    (2) main_rule -> . father_rule main_rule
    (3) father_rule -> . print
    (4) father_rule -> . dvariable
    (5) father_rule -> . function
    (6) father_rule -> . variables
    (7) father_rule -> . control_str
    (8) father_rule -> . expression
    (9) father_rule -> . void
    (10) father_rule -> . data_str
    (11) father_rule -> . array
    (12) father_rule -> . linkedlist_methods
    (13) father_rule -> . hashmap_methods
    (14) father_rule -> . initialization
    (15) father_rule -> . input
    (16) father_rule -> . assignation
    (17) father_rule -> . declare_data_type
    (67) print -> . KW_PRINT LPAREN CADENA RPAREN SEMI
    (68) dvariable -> . KW_LET VARIABLE SEMI
    (90) function -> . KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> . KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE
    (71) variables -> . VARIABLE
    (72) variables -> . VARIABLE COMMA variables
    (91) control_str -> . for_str
    (92) control_str -> . for_str_tagged
    (93) control_str -> . if
    (94) control_str -> . else
    (95) control_str -> . else_if
    (96) control_str -> . while
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (114) void -> .
    (103) data_str -> . array
    (104) data_str -> . hashmap
    (105) data_str -> . linkedlist
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET
    (119) linkedlist_methods -> . VARIABLE linkedlist_push
    (120) linkedlist_methods -> . VARIABLE linkedlist_remove
    (110) hashmap_methods -> . VARIABLE hashmap_insert
    (111) hashmap_methods -> . VARIABLE hashmap_remove
    (75) initialization -> . let_initialization SEMI
    (76) initialization -> . const_initialization SEMI
    (77) initialization -> . data_str SEMI
    (78) initialization -> . input_init SEMI
    (132) input -> . VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
    (133) assignation -> . VARIABLE assign_operators number
    (134) declare_data_type -> . KW_LET VARIABLE COLON data_type SEMI
    (97) for_str -> . KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> . KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE
    (99) for_str_tagged -> . label COLON for_str
    (123) if -> . KW_IF conditional LBRACE main_rule RBRACE
    (124) else -> . KW_ELSE LBRACE main_rule RBRACE
    (125) else_if -> . KW_ELSE KW_IF conditional LBRACE main_rule RBRACE
    (73) while -> . KW_WHILE LPAREN VARIABLE
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE
    (106) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (107) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (109) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (115) linkedlist -> . KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (116) linkedlist -> . KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (117) linkedlist -> . KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (118) linkedlist -> . KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> . KW_LET VARIABLE EQUALS data
    (80) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS data
    (81) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS data
    (82) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS data
    (83) let_initialization -> . KW_LET VARIABLE EQUALS expression_var
    (84) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS expression_var
    (85) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS expression_var
    (86) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var
    (87) const_initialization -> . KW_CONST VARIABLE COLON data_type EQUALS data
    (131) input_init -> . KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN
    (102) label -> . QUOTE VARIABLE

  ! shift/reduce conflict for KW_PRINT resolved as shift
  ! shift/reduce conflict for KW_LET resolved as shift
  ! shift/reduce conflict for KW_FN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (main_rule -> father_rule .)
  ! reduce/reduce conflict for RBRACE resolved using rule 1 (main_rule -> father_rule .)
  ! reduce/reduce conflict for KW_RETURN resolved using rule 1 (main_rule -> father_rule .)
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for KW_FOR resolved as shift
  ! shift/reduce conflict for KW_IF resolved as shift
  ! shift/reduce conflict for KW_ELSE resolved as shift
  ! shift/reduce conflict for KW_WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for KW_CONST resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
    $end            reduce using rule 1 (main_rule -> father_rule .)
    RBRACE          reduce using rule 1 (main_rule -> father_rule .)
    KW_RETURN       reduce using rule 1 (main_rule -> father_rule .)
    KW_PRINT        shift and go to state 18
    KW_LET          shift and go to state 20
    KW_FN           shift and go to state 22
    VARIABLE        shift and go to state 21
    LPAREN          shift and go to state 19
    LBRACKET        shift and go to state 32
    KW_FOR          shift and go to state 36
    KW_IF           shift and go to state 38
    KW_ELSE         shift and go to state 39
    KW_WHILE        shift and go to state 40
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    KW_CONST        shift and go to state 43
    QUOTE           shift and go to state 44

  ! KW_PRINT        [ reduce using rule 114 (void -> .) ]
  ! KW_LET          [ reduce using rule 114 (void -> .) ]
  ! KW_FN           [ reduce using rule 114 (void -> .) ]
  ! VARIABLE        [ reduce using rule 114 (void -> .) ]
  ! LPAREN          [ reduce using rule 114 (void -> .) ]
  ! LBRACKET        [ reduce using rule 114 (void -> .) ]
  ! KW_FOR          [ reduce using rule 114 (void -> .) ]
  ! KW_IF           [ reduce using rule 114 (void -> .) ]
  ! KW_ELSE         [ reduce using rule 114 (void -> .) ]
  ! KW_WHILE        [ reduce using rule 114 (void -> .) ]
  ! INTEGER         [ reduce using rule 114 (void -> .) ]
  ! FLOAT           [ reduce using rule 114 (void -> .) ]
  ! KW_CONST        [ reduce using rule 114 (void -> .) ]
  ! QUOTE           [ reduce using rule 114 (void -> .) ]
  ! $end            [ reduce using rule 114 (void -> .) ]
  ! RBRACE          [ reduce using rule 114 (void -> .) ]
  ! KW_RETURN       [ reduce using rule 114 (void -> .) ]

    father_rule                    shift and go to state 2
    main_rule                      shift and go to state 45
    print                          shift and go to state 3
    dvariable                      shift and go to state 4
    function                       shift and go to state 5
    variables                      shift and go to state 6
    control_str                    shift and go to state 7
    expression                     shift and go to state 8
    void                           shift and go to state 9
    data_str                       shift and go to state 10
    array                          shift and go to state 11
    linkedlist_methods             shift and go to state 12
    hashmap_methods                shift and go to state 13
    initialization                 shift and go to state 14
    input                          shift and go to state 15
    assignation                    shift and go to state 16
    declare_data_type              shift and go to state 17
    for_str                        shift and go to state 23
    for_str_tagged                 shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    else_if                        shift and go to state 27
    while                          shift and go to state 28
    number                         shift and go to state 29
    hashmap                        shift and go to state 30
    linkedlist                     shift and go to state 31
    let_initialization             shift and go to state 33
    const_initialization           shift and go to state 34
    input_init                     shift and go to state 35
    label                          shift and go to state 37

state 3

    (3) father_rule -> print .

    KW_PRINT        reduce using rule 3 (father_rule -> print .)
    KW_LET          reduce using rule 3 (father_rule -> print .)
    KW_FN           reduce using rule 3 (father_rule -> print .)
    VARIABLE        reduce using rule 3 (father_rule -> print .)
    LPAREN          reduce using rule 3 (father_rule -> print .)
    LBRACKET        reduce using rule 3 (father_rule -> print .)
    KW_FOR          reduce using rule 3 (father_rule -> print .)
    KW_IF           reduce using rule 3 (father_rule -> print .)
    KW_ELSE         reduce using rule 3 (father_rule -> print .)
    KW_WHILE        reduce using rule 3 (father_rule -> print .)
    INTEGER         reduce using rule 3 (father_rule -> print .)
    FLOAT           reduce using rule 3 (father_rule -> print .)
    KW_CONST        reduce using rule 3 (father_rule -> print .)
    QUOTE           reduce using rule 3 (father_rule -> print .)
    $end            reduce using rule 3 (father_rule -> print .)
    RBRACE          reduce using rule 3 (father_rule -> print .)
    KW_RETURN       reduce using rule 3 (father_rule -> print .)


state 4

    (4) father_rule -> dvariable .

    KW_PRINT        reduce using rule 4 (father_rule -> dvariable .)
    KW_LET          reduce using rule 4 (father_rule -> dvariable .)
    KW_FN           reduce using rule 4 (father_rule -> dvariable .)
    VARIABLE        reduce using rule 4 (father_rule -> dvariable .)
    LPAREN          reduce using rule 4 (father_rule -> dvariable .)
    LBRACKET        reduce using rule 4 (father_rule -> dvariable .)
    KW_FOR          reduce using rule 4 (father_rule -> dvariable .)
    KW_IF           reduce using rule 4 (father_rule -> dvariable .)
    KW_ELSE         reduce using rule 4 (father_rule -> dvariable .)
    KW_WHILE        reduce using rule 4 (father_rule -> dvariable .)
    INTEGER         reduce using rule 4 (father_rule -> dvariable .)
    FLOAT           reduce using rule 4 (father_rule -> dvariable .)
    KW_CONST        reduce using rule 4 (father_rule -> dvariable .)
    QUOTE           reduce using rule 4 (father_rule -> dvariable .)
    $end            reduce using rule 4 (father_rule -> dvariable .)
    RBRACE          reduce using rule 4 (father_rule -> dvariable .)
    KW_RETURN       reduce using rule 4 (father_rule -> dvariable .)


state 5

    (5) father_rule -> function .

    KW_PRINT        reduce using rule 5 (father_rule -> function .)
    KW_LET          reduce using rule 5 (father_rule -> function .)
    KW_FN           reduce using rule 5 (father_rule -> function .)
    VARIABLE        reduce using rule 5 (father_rule -> function .)
    LPAREN          reduce using rule 5 (father_rule -> function .)
    LBRACKET        reduce using rule 5 (father_rule -> function .)
    KW_FOR          reduce using rule 5 (father_rule -> function .)
    KW_IF           reduce using rule 5 (father_rule -> function .)
    KW_ELSE         reduce using rule 5 (father_rule -> function .)
    KW_WHILE        reduce using rule 5 (father_rule -> function .)
    INTEGER         reduce using rule 5 (father_rule -> function .)
    FLOAT           reduce using rule 5 (father_rule -> function .)
    KW_CONST        reduce using rule 5 (father_rule -> function .)
    QUOTE           reduce using rule 5 (father_rule -> function .)
    $end            reduce using rule 5 (father_rule -> function .)
    RBRACE          reduce using rule 5 (father_rule -> function .)
    KW_RETURN       reduce using rule 5 (father_rule -> function .)


state 6

    (6) father_rule -> variables .

    KW_PRINT        reduce using rule 6 (father_rule -> variables .)
    KW_LET          reduce using rule 6 (father_rule -> variables .)
    KW_FN           reduce using rule 6 (father_rule -> variables .)
    VARIABLE        reduce using rule 6 (father_rule -> variables .)
    LPAREN          reduce using rule 6 (father_rule -> variables .)
    LBRACKET        reduce using rule 6 (father_rule -> variables .)
    KW_FOR          reduce using rule 6 (father_rule -> variables .)
    KW_IF           reduce using rule 6 (father_rule -> variables .)
    KW_ELSE         reduce using rule 6 (father_rule -> variables .)
    KW_WHILE        reduce using rule 6 (father_rule -> variables .)
    INTEGER         reduce using rule 6 (father_rule -> variables .)
    FLOAT           reduce using rule 6 (father_rule -> variables .)
    KW_CONST        reduce using rule 6 (father_rule -> variables .)
    QUOTE           reduce using rule 6 (father_rule -> variables .)
    $end            reduce using rule 6 (father_rule -> variables .)
    RBRACE          reduce using rule 6 (father_rule -> variables .)
    KW_RETURN       reduce using rule 6 (father_rule -> variables .)


state 7

    (7) father_rule -> control_str .

    KW_PRINT        reduce using rule 7 (father_rule -> control_str .)
    KW_LET          reduce using rule 7 (father_rule -> control_str .)
    KW_FN           reduce using rule 7 (father_rule -> control_str .)
    VARIABLE        reduce using rule 7 (father_rule -> control_str .)
    LPAREN          reduce using rule 7 (father_rule -> control_str .)
    LBRACKET        reduce using rule 7 (father_rule -> control_str .)
    KW_FOR          reduce using rule 7 (father_rule -> control_str .)
    KW_IF           reduce using rule 7 (father_rule -> control_str .)
    KW_ELSE         reduce using rule 7 (father_rule -> control_str .)
    KW_WHILE        reduce using rule 7 (father_rule -> control_str .)
    INTEGER         reduce using rule 7 (father_rule -> control_str .)
    FLOAT           reduce using rule 7 (father_rule -> control_str .)
    KW_CONST        reduce using rule 7 (father_rule -> control_str .)
    QUOTE           reduce using rule 7 (father_rule -> control_str .)
    $end            reduce using rule 7 (father_rule -> control_str .)
    RBRACE          reduce using rule 7 (father_rule -> control_str .)
    KW_RETURN       reduce using rule 7 (father_rule -> control_str .)


state 8

    (8) father_rule -> expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression

    KW_PRINT        reduce using rule 8 (father_rule -> expression .)
    KW_LET          reduce using rule 8 (father_rule -> expression .)
    KW_FN           reduce using rule 8 (father_rule -> expression .)
    VARIABLE        reduce using rule 8 (father_rule -> expression .)
    LPAREN          reduce using rule 8 (father_rule -> expression .)
    LBRACKET        reduce using rule 8 (father_rule -> expression .)
    KW_FOR          reduce using rule 8 (father_rule -> expression .)
    KW_IF           reduce using rule 8 (father_rule -> expression .)
    KW_ELSE         reduce using rule 8 (father_rule -> expression .)
    KW_WHILE        reduce using rule 8 (father_rule -> expression .)
    INTEGER         reduce using rule 8 (father_rule -> expression .)
    FLOAT           reduce using rule 8 (father_rule -> expression .)
    KW_CONST        reduce using rule 8 (father_rule -> expression .)
    QUOTE           reduce using rule 8 (father_rule -> expression .)
    $end            reduce using rule 8 (father_rule -> expression .)
    RBRACE          reduce using rule 8 (father_rule -> expression .)
    KW_RETURN       reduce using rule 8 (father_rule -> expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 9

    (9) father_rule -> void .

    KW_PRINT        reduce using rule 9 (father_rule -> void .)
    KW_LET          reduce using rule 9 (father_rule -> void .)
    KW_FN           reduce using rule 9 (father_rule -> void .)
    VARIABLE        reduce using rule 9 (father_rule -> void .)
    LPAREN          reduce using rule 9 (father_rule -> void .)
    LBRACKET        reduce using rule 9 (father_rule -> void .)
    KW_FOR          reduce using rule 9 (father_rule -> void .)
    KW_IF           reduce using rule 9 (father_rule -> void .)
    KW_ELSE         reduce using rule 9 (father_rule -> void .)
    KW_WHILE        reduce using rule 9 (father_rule -> void .)
    INTEGER         reduce using rule 9 (father_rule -> void .)
    FLOAT           reduce using rule 9 (father_rule -> void .)
    KW_CONST        reduce using rule 9 (father_rule -> void .)
    QUOTE           reduce using rule 9 (father_rule -> void .)
    $end            reduce using rule 9 (father_rule -> void .)
    RBRACE          reduce using rule 9 (father_rule -> void .)
    KW_RETURN       reduce using rule 9 (father_rule -> void .)


state 10

    (10) father_rule -> data_str .
    (77) initialization -> data_str . SEMI

    KW_PRINT        reduce using rule 10 (father_rule -> data_str .)
    KW_LET          reduce using rule 10 (father_rule -> data_str .)
    KW_FN           reduce using rule 10 (father_rule -> data_str .)
    VARIABLE        reduce using rule 10 (father_rule -> data_str .)
    LPAREN          reduce using rule 10 (father_rule -> data_str .)
    LBRACKET        reduce using rule 10 (father_rule -> data_str .)
    KW_FOR          reduce using rule 10 (father_rule -> data_str .)
    KW_IF           reduce using rule 10 (father_rule -> data_str .)
    KW_ELSE         reduce using rule 10 (father_rule -> data_str .)
    KW_WHILE        reduce using rule 10 (father_rule -> data_str .)
    INTEGER         reduce using rule 10 (father_rule -> data_str .)
    FLOAT           reduce using rule 10 (father_rule -> data_str .)
    KW_CONST        reduce using rule 10 (father_rule -> data_str .)
    QUOTE           reduce using rule 10 (father_rule -> data_str .)
    $end            reduce using rule 10 (father_rule -> data_str .)
    RBRACE          reduce using rule 10 (father_rule -> data_str .)
    KW_RETURN       reduce using rule 10 (father_rule -> data_str .)
    SEMI            shift and go to state 50


state 11

    (11) father_rule -> array .
    (103) data_str -> array .

  ! reduce/reduce conflict for KW_PRINT resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for KW_LET resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for KW_FN resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for LPAREN resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for KW_FOR resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for KW_IF resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for KW_ELSE resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for KW_WHILE resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for INTEGER resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for FLOAT resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for KW_CONST resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for QUOTE resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for $end resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for RBRACE resolved using rule 11 (father_rule -> array .)
  ! reduce/reduce conflict for KW_RETURN resolved using rule 11 (father_rule -> array .)
    KW_PRINT        reduce using rule 11 (father_rule -> array .)
    KW_LET          reduce using rule 11 (father_rule -> array .)
    KW_FN           reduce using rule 11 (father_rule -> array .)
    VARIABLE        reduce using rule 11 (father_rule -> array .)
    LPAREN          reduce using rule 11 (father_rule -> array .)
    LBRACKET        reduce using rule 11 (father_rule -> array .)
    KW_FOR          reduce using rule 11 (father_rule -> array .)
    KW_IF           reduce using rule 11 (father_rule -> array .)
    KW_ELSE         reduce using rule 11 (father_rule -> array .)
    KW_WHILE        reduce using rule 11 (father_rule -> array .)
    INTEGER         reduce using rule 11 (father_rule -> array .)
    FLOAT           reduce using rule 11 (father_rule -> array .)
    KW_CONST        reduce using rule 11 (father_rule -> array .)
    QUOTE           reduce using rule 11 (father_rule -> array .)
    $end            reduce using rule 11 (father_rule -> array .)
    RBRACE          reduce using rule 11 (father_rule -> array .)
    KW_RETURN       reduce using rule 11 (father_rule -> array .)
    SEMI            reduce using rule 103 (data_str -> array .)

  ! KW_PRINT        [ reduce using rule 103 (data_str -> array .) ]
  ! KW_LET          [ reduce using rule 103 (data_str -> array .) ]
  ! KW_FN           [ reduce using rule 103 (data_str -> array .) ]
  ! VARIABLE        [ reduce using rule 103 (data_str -> array .) ]
  ! LPAREN          [ reduce using rule 103 (data_str -> array .) ]
  ! LBRACKET        [ reduce using rule 103 (data_str -> array .) ]
  ! KW_FOR          [ reduce using rule 103 (data_str -> array .) ]
  ! KW_IF           [ reduce using rule 103 (data_str -> array .) ]
  ! KW_ELSE         [ reduce using rule 103 (data_str -> array .) ]
  ! KW_WHILE        [ reduce using rule 103 (data_str -> array .) ]
  ! INTEGER         [ reduce using rule 103 (data_str -> array .) ]
  ! FLOAT           [ reduce using rule 103 (data_str -> array .) ]
  ! KW_CONST        [ reduce using rule 103 (data_str -> array .) ]
  ! QUOTE           [ reduce using rule 103 (data_str -> array .) ]
  ! $end            [ reduce using rule 103 (data_str -> array .) ]
  ! RBRACE          [ reduce using rule 103 (data_str -> array .) ]
  ! KW_RETURN       [ reduce using rule 103 (data_str -> array .) ]


state 12

    (12) father_rule -> linkedlist_methods .

    KW_PRINT        reduce using rule 12 (father_rule -> linkedlist_methods .)
    KW_LET          reduce using rule 12 (father_rule -> linkedlist_methods .)
    KW_FN           reduce using rule 12 (father_rule -> linkedlist_methods .)
    VARIABLE        reduce using rule 12 (father_rule -> linkedlist_methods .)
    LPAREN          reduce using rule 12 (father_rule -> linkedlist_methods .)
    LBRACKET        reduce using rule 12 (father_rule -> linkedlist_methods .)
    KW_FOR          reduce using rule 12 (father_rule -> linkedlist_methods .)
    KW_IF           reduce using rule 12 (father_rule -> linkedlist_methods .)
    KW_ELSE         reduce using rule 12 (father_rule -> linkedlist_methods .)
    KW_WHILE        reduce using rule 12 (father_rule -> linkedlist_methods .)
    INTEGER         reduce using rule 12 (father_rule -> linkedlist_methods .)
    FLOAT           reduce using rule 12 (father_rule -> linkedlist_methods .)
    KW_CONST        reduce using rule 12 (father_rule -> linkedlist_methods .)
    QUOTE           reduce using rule 12 (father_rule -> linkedlist_methods .)
    $end            reduce using rule 12 (father_rule -> linkedlist_methods .)
    RBRACE          reduce using rule 12 (father_rule -> linkedlist_methods .)
    KW_RETURN       reduce using rule 12 (father_rule -> linkedlist_methods .)


state 13

    (13) father_rule -> hashmap_methods .

    KW_PRINT        reduce using rule 13 (father_rule -> hashmap_methods .)
    KW_LET          reduce using rule 13 (father_rule -> hashmap_methods .)
    KW_FN           reduce using rule 13 (father_rule -> hashmap_methods .)
    VARIABLE        reduce using rule 13 (father_rule -> hashmap_methods .)
    LPAREN          reduce using rule 13 (father_rule -> hashmap_methods .)
    LBRACKET        reduce using rule 13 (father_rule -> hashmap_methods .)
    KW_FOR          reduce using rule 13 (father_rule -> hashmap_methods .)
    KW_IF           reduce using rule 13 (father_rule -> hashmap_methods .)
    KW_ELSE         reduce using rule 13 (father_rule -> hashmap_methods .)
    KW_WHILE        reduce using rule 13 (father_rule -> hashmap_methods .)
    INTEGER         reduce using rule 13 (father_rule -> hashmap_methods .)
    FLOAT           reduce using rule 13 (father_rule -> hashmap_methods .)
    KW_CONST        reduce using rule 13 (father_rule -> hashmap_methods .)
    QUOTE           reduce using rule 13 (father_rule -> hashmap_methods .)
    $end            reduce using rule 13 (father_rule -> hashmap_methods .)
    RBRACE          reduce using rule 13 (father_rule -> hashmap_methods .)
    KW_RETURN       reduce using rule 13 (father_rule -> hashmap_methods .)


state 14

    (14) father_rule -> initialization .

    KW_PRINT        reduce using rule 14 (father_rule -> initialization .)
    KW_LET          reduce using rule 14 (father_rule -> initialization .)
    KW_FN           reduce using rule 14 (father_rule -> initialization .)
    VARIABLE        reduce using rule 14 (father_rule -> initialization .)
    LPAREN          reduce using rule 14 (father_rule -> initialization .)
    LBRACKET        reduce using rule 14 (father_rule -> initialization .)
    KW_FOR          reduce using rule 14 (father_rule -> initialization .)
    KW_IF           reduce using rule 14 (father_rule -> initialization .)
    KW_ELSE         reduce using rule 14 (father_rule -> initialization .)
    KW_WHILE        reduce using rule 14 (father_rule -> initialization .)
    INTEGER         reduce using rule 14 (father_rule -> initialization .)
    FLOAT           reduce using rule 14 (father_rule -> initialization .)
    KW_CONST        reduce using rule 14 (father_rule -> initialization .)
    QUOTE           reduce using rule 14 (father_rule -> initialization .)
    $end            reduce using rule 14 (father_rule -> initialization .)
    RBRACE          reduce using rule 14 (father_rule -> initialization .)
    KW_RETURN       reduce using rule 14 (father_rule -> initialization .)


state 15

    (15) father_rule -> input .

    KW_PRINT        reduce using rule 15 (father_rule -> input .)
    KW_LET          reduce using rule 15 (father_rule -> input .)
    KW_FN           reduce using rule 15 (father_rule -> input .)
    VARIABLE        reduce using rule 15 (father_rule -> input .)
    LPAREN          reduce using rule 15 (father_rule -> input .)
    LBRACKET        reduce using rule 15 (father_rule -> input .)
    KW_FOR          reduce using rule 15 (father_rule -> input .)
    KW_IF           reduce using rule 15 (father_rule -> input .)
    KW_ELSE         reduce using rule 15 (father_rule -> input .)
    KW_WHILE        reduce using rule 15 (father_rule -> input .)
    INTEGER         reduce using rule 15 (father_rule -> input .)
    FLOAT           reduce using rule 15 (father_rule -> input .)
    KW_CONST        reduce using rule 15 (father_rule -> input .)
    QUOTE           reduce using rule 15 (father_rule -> input .)
    $end            reduce using rule 15 (father_rule -> input .)
    RBRACE          reduce using rule 15 (father_rule -> input .)
    KW_RETURN       reduce using rule 15 (father_rule -> input .)


state 16

    (16) father_rule -> assignation .

    KW_PRINT        reduce using rule 16 (father_rule -> assignation .)
    KW_LET          reduce using rule 16 (father_rule -> assignation .)
    KW_FN           reduce using rule 16 (father_rule -> assignation .)
    VARIABLE        reduce using rule 16 (father_rule -> assignation .)
    LPAREN          reduce using rule 16 (father_rule -> assignation .)
    LBRACKET        reduce using rule 16 (father_rule -> assignation .)
    KW_FOR          reduce using rule 16 (father_rule -> assignation .)
    KW_IF           reduce using rule 16 (father_rule -> assignation .)
    KW_ELSE         reduce using rule 16 (father_rule -> assignation .)
    KW_WHILE        reduce using rule 16 (father_rule -> assignation .)
    INTEGER         reduce using rule 16 (father_rule -> assignation .)
    FLOAT           reduce using rule 16 (father_rule -> assignation .)
    KW_CONST        reduce using rule 16 (father_rule -> assignation .)
    QUOTE           reduce using rule 16 (father_rule -> assignation .)
    $end            reduce using rule 16 (father_rule -> assignation .)
    RBRACE          reduce using rule 16 (father_rule -> assignation .)
    KW_RETURN       reduce using rule 16 (father_rule -> assignation .)


state 17

    (17) father_rule -> declare_data_type .

    KW_PRINT        reduce using rule 17 (father_rule -> declare_data_type .)
    KW_LET          reduce using rule 17 (father_rule -> declare_data_type .)
    KW_FN           reduce using rule 17 (father_rule -> declare_data_type .)
    VARIABLE        reduce using rule 17 (father_rule -> declare_data_type .)
    LPAREN          reduce using rule 17 (father_rule -> declare_data_type .)
    LBRACKET        reduce using rule 17 (father_rule -> declare_data_type .)
    KW_FOR          reduce using rule 17 (father_rule -> declare_data_type .)
    KW_IF           reduce using rule 17 (father_rule -> declare_data_type .)
    KW_ELSE         reduce using rule 17 (father_rule -> declare_data_type .)
    KW_WHILE        reduce using rule 17 (father_rule -> declare_data_type .)
    INTEGER         reduce using rule 17 (father_rule -> declare_data_type .)
    FLOAT           reduce using rule 17 (father_rule -> declare_data_type .)
    KW_CONST        reduce using rule 17 (father_rule -> declare_data_type .)
    QUOTE           reduce using rule 17 (father_rule -> declare_data_type .)
    $end            reduce using rule 17 (father_rule -> declare_data_type .)
    RBRACE          reduce using rule 17 (father_rule -> declare_data_type .)
    KW_RETURN       reduce using rule 17 (father_rule -> declare_data_type .)


state 18

    (67) print -> KW_PRINT . LPAREN CADENA RPAREN SEMI

    LPAREN          shift and go to state 51


state 19

    (22) expression -> LPAREN . expression RPAREN
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE

    LPAREN          shift and go to state 19
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    VARIABLE        shift and go to state 53

    expression                     shift and go to state 52
    number                         shift and go to state 29

state 20

    (68) dvariable -> KW_LET . VARIABLE SEMI
    (69) array -> KW_LET . VARIABLE EQUALS LBRACKET mdata RBRACKET
    (134) declare_data_type -> KW_LET . VARIABLE COLON data_type SEMI
    (106) hashmap -> KW_LET . VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (107) hashmap -> KW_LET . KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> KW_LET . VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (109) hashmap -> KW_LET . KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (115) linkedlist -> KW_LET . VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (116) linkedlist -> KW_LET . KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (117) linkedlist -> KW_LET . VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (118) linkedlist -> KW_LET . KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> KW_LET . VARIABLE EQUALS data
    (80) let_initialization -> KW_LET . VARIABLE COLON data_type EQUALS data
    (81) let_initialization -> KW_LET . KW_MUT VARIABLE EQUALS data
    (82) let_initialization -> KW_LET . KW_MUT VARIABLE COLON data_type EQUALS data
    (83) let_initialization -> KW_LET . VARIABLE EQUALS expression_var
    (84) let_initialization -> KW_LET . VARIABLE COLON data_type EQUALS expression_var
    (85) let_initialization -> KW_LET . KW_MUT VARIABLE EQUALS expression_var
    (86) let_initialization -> KW_LET . KW_MUT VARIABLE COLON data_type EQUALS expression_var
    (131) input_init -> KW_LET . VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN

    VARIABLE        shift and go to state 54
    KW_MUT          shift and go to state 55


state 21

    (71) variables -> VARIABLE .
    (72) variables -> VARIABLE . COMMA variables
    (119) linkedlist_methods -> VARIABLE . linkedlist_push
    (120) linkedlist_methods -> VARIABLE . linkedlist_remove
    (110) hashmap_methods -> VARIABLE . hashmap_insert
    (111) hashmap_methods -> VARIABLE . hashmap_remove
    (132) input -> VARIABLE . DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
    (133) assignation -> VARIABLE . assign_operators number
    (26) number -> VARIABLE .
    (121) linkedlist_push -> . DOT KW_PUSH_BACK LPAREN data RPAREN SEMI
    (122) linkedlist_remove -> . DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI
    (112) hashmap_insert -> . DOT KW_INSERT LPAREN mdata RPAREN SEMI
    (113) hashmap_remove -> . DOT KW_REMOVE LPAREN AND data RPAREN SEMI
    (41) assign_operators -> . EQUALS
    (42) assign_operators -> . TIMESEQUAL
    (43) assign_operators -> . DIVEQUAL
    (44) assign_operators -> . MODULUSEQUAL
    (45) assign_operators -> . PLUSEQUAL
    (46) assign_operators -> . MINUSEQUAL

  ! reduce/reduce conflict for KW_PRINT resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for KW_LET resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for KW_FN resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for KW_FOR resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for KW_IF resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for KW_ELSE resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for KW_WHILE resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for INTEGER resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for KW_CONST resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for QUOTE resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for RBRACE resolved using rule 26 (number -> VARIABLE .)
  ! reduce/reduce conflict for KW_RETURN resolved using rule 26 (number -> VARIABLE .)
    COMMA           shift and go to state 56
    DOT             shift and go to state 61
    PLUS            reduce using rule 26 (number -> VARIABLE .)
    MINUS           reduce using rule 26 (number -> VARIABLE .)
    TIMES           reduce using rule 26 (number -> VARIABLE .)
    DIVIDE          reduce using rule 26 (number -> VARIABLE .)
    KW_PRINT        reduce using rule 26 (number -> VARIABLE .)
    KW_LET          reduce using rule 26 (number -> VARIABLE .)
    KW_FN           reduce using rule 26 (number -> VARIABLE .)
    VARIABLE        reduce using rule 26 (number -> VARIABLE .)
    LPAREN          reduce using rule 26 (number -> VARIABLE .)
    LBRACKET        reduce using rule 26 (number -> VARIABLE .)
    KW_FOR          reduce using rule 26 (number -> VARIABLE .)
    KW_IF           reduce using rule 26 (number -> VARIABLE .)
    KW_ELSE         reduce using rule 26 (number -> VARIABLE .)
    KW_WHILE        reduce using rule 26 (number -> VARIABLE .)
    INTEGER         reduce using rule 26 (number -> VARIABLE .)
    FLOAT           reduce using rule 26 (number -> VARIABLE .)
    KW_CONST        reduce using rule 26 (number -> VARIABLE .)
    QUOTE           reduce using rule 26 (number -> VARIABLE .)
    $end            reduce using rule 26 (number -> VARIABLE .)
    RBRACE          reduce using rule 26 (number -> VARIABLE .)
    KW_RETURN       reduce using rule 26 (number -> VARIABLE .)
    EQUALS          shift and go to state 63
    TIMESEQUAL      shift and go to state 64
    DIVEQUAL        shift and go to state 65
    MODULUSEQUAL    shift and go to state 66
    PLUSEQUAL       shift and go to state 67
    MINUSEQUAL      shift and go to state 68

  ! KW_PRINT        [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! KW_LET          [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! KW_FN           [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! LPAREN          [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! LBRACKET        [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! KW_FOR          [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! KW_IF           [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! KW_ELSE         [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! KW_WHILE        [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! INTEGER         [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! FLOAT           [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! KW_CONST        [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! QUOTE           [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! $end            [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! RBRACE          [ reduce using rule 71 (variables -> VARIABLE .) ]
  ! KW_RETURN       [ reduce using rule 71 (variables -> VARIABLE .) ]

    linkedlist_push                shift and go to state 57
    linkedlist_remove              shift and go to state 58
    hashmap_insert                 shift and go to state 59
    hashmap_remove                 shift and go to state 60
    assign_operators               shift and go to state 62

state 22

    (90) function -> KW_FN . VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> KW_FN . VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE

    VARIABLE        shift and go to state 69


state 23

    (91) control_str -> for_str .

    KW_PRINT        reduce using rule 91 (control_str -> for_str .)
    KW_LET          reduce using rule 91 (control_str -> for_str .)
    KW_FN           reduce using rule 91 (control_str -> for_str .)
    VARIABLE        reduce using rule 91 (control_str -> for_str .)
    LPAREN          reduce using rule 91 (control_str -> for_str .)
    LBRACKET        reduce using rule 91 (control_str -> for_str .)
    KW_FOR          reduce using rule 91 (control_str -> for_str .)
    KW_IF           reduce using rule 91 (control_str -> for_str .)
    KW_ELSE         reduce using rule 91 (control_str -> for_str .)
    KW_WHILE        reduce using rule 91 (control_str -> for_str .)
    INTEGER         reduce using rule 91 (control_str -> for_str .)
    FLOAT           reduce using rule 91 (control_str -> for_str .)
    KW_CONST        reduce using rule 91 (control_str -> for_str .)
    QUOTE           reduce using rule 91 (control_str -> for_str .)
    $end            reduce using rule 91 (control_str -> for_str .)
    RBRACE          reduce using rule 91 (control_str -> for_str .)
    KW_RETURN       reduce using rule 91 (control_str -> for_str .)


state 24

    (92) control_str -> for_str_tagged .

    KW_PRINT        reduce using rule 92 (control_str -> for_str_tagged .)
    KW_LET          reduce using rule 92 (control_str -> for_str_tagged .)
    KW_FN           reduce using rule 92 (control_str -> for_str_tagged .)
    VARIABLE        reduce using rule 92 (control_str -> for_str_tagged .)
    LPAREN          reduce using rule 92 (control_str -> for_str_tagged .)
    LBRACKET        reduce using rule 92 (control_str -> for_str_tagged .)
    KW_FOR          reduce using rule 92 (control_str -> for_str_tagged .)
    KW_IF           reduce using rule 92 (control_str -> for_str_tagged .)
    KW_ELSE         reduce using rule 92 (control_str -> for_str_tagged .)
    KW_WHILE        reduce using rule 92 (control_str -> for_str_tagged .)
    INTEGER         reduce using rule 92 (control_str -> for_str_tagged .)
    FLOAT           reduce using rule 92 (control_str -> for_str_tagged .)
    KW_CONST        reduce using rule 92 (control_str -> for_str_tagged .)
    QUOTE           reduce using rule 92 (control_str -> for_str_tagged .)
    $end            reduce using rule 92 (control_str -> for_str_tagged .)
    RBRACE          reduce using rule 92 (control_str -> for_str_tagged .)
    KW_RETURN       reduce using rule 92 (control_str -> for_str_tagged .)


state 25

    (93) control_str -> if .

    KW_PRINT        reduce using rule 93 (control_str -> if .)
    KW_LET          reduce using rule 93 (control_str -> if .)
    KW_FN           reduce using rule 93 (control_str -> if .)
    VARIABLE        reduce using rule 93 (control_str -> if .)
    LPAREN          reduce using rule 93 (control_str -> if .)
    LBRACKET        reduce using rule 93 (control_str -> if .)
    KW_FOR          reduce using rule 93 (control_str -> if .)
    KW_IF           reduce using rule 93 (control_str -> if .)
    KW_ELSE         reduce using rule 93 (control_str -> if .)
    KW_WHILE        reduce using rule 93 (control_str -> if .)
    INTEGER         reduce using rule 93 (control_str -> if .)
    FLOAT           reduce using rule 93 (control_str -> if .)
    KW_CONST        reduce using rule 93 (control_str -> if .)
    QUOTE           reduce using rule 93 (control_str -> if .)
    $end            reduce using rule 93 (control_str -> if .)
    RBRACE          reduce using rule 93 (control_str -> if .)
    KW_RETURN       reduce using rule 93 (control_str -> if .)


state 26

    (94) control_str -> else .

    KW_PRINT        reduce using rule 94 (control_str -> else .)
    KW_LET          reduce using rule 94 (control_str -> else .)
    KW_FN           reduce using rule 94 (control_str -> else .)
    VARIABLE        reduce using rule 94 (control_str -> else .)
    LPAREN          reduce using rule 94 (control_str -> else .)
    LBRACKET        reduce using rule 94 (control_str -> else .)
    KW_FOR          reduce using rule 94 (control_str -> else .)
    KW_IF           reduce using rule 94 (control_str -> else .)
    KW_ELSE         reduce using rule 94 (control_str -> else .)
    KW_WHILE        reduce using rule 94 (control_str -> else .)
    INTEGER         reduce using rule 94 (control_str -> else .)
    FLOAT           reduce using rule 94 (control_str -> else .)
    KW_CONST        reduce using rule 94 (control_str -> else .)
    QUOTE           reduce using rule 94 (control_str -> else .)
    $end            reduce using rule 94 (control_str -> else .)
    RBRACE          reduce using rule 94 (control_str -> else .)
    KW_RETURN       reduce using rule 94 (control_str -> else .)


state 27

    (95) control_str -> else_if .

    KW_PRINT        reduce using rule 95 (control_str -> else_if .)
    KW_LET          reduce using rule 95 (control_str -> else_if .)
    KW_FN           reduce using rule 95 (control_str -> else_if .)
    VARIABLE        reduce using rule 95 (control_str -> else_if .)
    LPAREN          reduce using rule 95 (control_str -> else_if .)
    LBRACKET        reduce using rule 95 (control_str -> else_if .)
    KW_FOR          reduce using rule 95 (control_str -> else_if .)
    KW_IF           reduce using rule 95 (control_str -> else_if .)
    KW_ELSE         reduce using rule 95 (control_str -> else_if .)
    KW_WHILE        reduce using rule 95 (control_str -> else_if .)
    INTEGER         reduce using rule 95 (control_str -> else_if .)
    FLOAT           reduce using rule 95 (control_str -> else_if .)
    KW_CONST        reduce using rule 95 (control_str -> else_if .)
    QUOTE           reduce using rule 95 (control_str -> else_if .)
    $end            reduce using rule 95 (control_str -> else_if .)
    RBRACE          reduce using rule 95 (control_str -> else_if .)
    KW_RETURN       reduce using rule 95 (control_str -> else_if .)


state 28

    (96) control_str -> while .

    KW_PRINT        reduce using rule 96 (control_str -> while .)
    KW_LET          reduce using rule 96 (control_str -> while .)
    KW_FN           reduce using rule 96 (control_str -> while .)
    VARIABLE        reduce using rule 96 (control_str -> while .)
    LPAREN          reduce using rule 96 (control_str -> while .)
    LBRACKET        reduce using rule 96 (control_str -> while .)
    KW_FOR          reduce using rule 96 (control_str -> while .)
    KW_IF           reduce using rule 96 (control_str -> while .)
    KW_ELSE         reduce using rule 96 (control_str -> while .)
    KW_WHILE        reduce using rule 96 (control_str -> while .)
    INTEGER         reduce using rule 96 (control_str -> while .)
    FLOAT           reduce using rule 96 (control_str -> while .)
    KW_CONST        reduce using rule 96 (control_str -> while .)
    QUOTE           reduce using rule 96 (control_str -> while .)
    $end            reduce using rule 96 (control_str -> while .)
    RBRACE          reduce using rule 96 (control_str -> while .)
    KW_RETURN       reduce using rule 96 (control_str -> while .)


state 29

    (23) expression -> number .

    PLUS            reduce using rule 23 (expression -> number .)
    MINUS           reduce using rule 23 (expression -> number .)
    TIMES           reduce using rule 23 (expression -> number .)
    DIVIDE          reduce using rule 23 (expression -> number .)
    KW_PRINT        reduce using rule 23 (expression -> number .)
    KW_LET          reduce using rule 23 (expression -> number .)
    KW_FN           reduce using rule 23 (expression -> number .)
    VARIABLE        reduce using rule 23 (expression -> number .)
    LPAREN          reduce using rule 23 (expression -> number .)
    LBRACKET        reduce using rule 23 (expression -> number .)
    KW_FOR          reduce using rule 23 (expression -> number .)
    KW_IF           reduce using rule 23 (expression -> number .)
    KW_ELSE         reduce using rule 23 (expression -> number .)
    KW_WHILE        reduce using rule 23 (expression -> number .)
    INTEGER         reduce using rule 23 (expression -> number .)
    FLOAT           reduce using rule 23 (expression -> number .)
    KW_CONST        reduce using rule 23 (expression -> number .)
    QUOTE           reduce using rule 23 (expression -> number .)
    $end            reduce using rule 23 (expression -> number .)
    RBRACE          reduce using rule 23 (expression -> number .)
    KW_RETURN       reduce using rule 23 (expression -> number .)
    RPAREN          reduce using rule 23 (expression -> number .)
    SEMI            reduce using rule 23 (expression -> number .)


state 30

    (104) data_str -> hashmap .

    SEMI            reduce using rule 104 (data_str -> hashmap .)
    KW_PRINT        reduce using rule 104 (data_str -> hashmap .)
    KW_LET          reduce using rule 104 (data_str -> hashmap .)
    KW_FN           reduce using rule 104 (data_str -> hashmap .)
    VARIABLE        reduce using rule 104 (data_str -> hashmap .)
    LPAREN          reduce using rule 104 (data_str -> hashmap .)
    LBRACKET        reduce using rule 104 (data_str -> hashmap .)
    KW_FOR          reduce using rule 104 (data_str -> hashmap .)
    KW_IF           reduce using rule 104 (data_str -> hashmap .)
    KW_ELSE         reduce using rule 104 (data_str -> hashmap .)
    KW_WHILE        reduce using rule 104 (data_str -> hashmap .)
    INTEGER         reduce using rule 104 (data_str -> hashmap .)
    FLOAT           reduce using rule 104 (data_str -> hashmap .)
    KW_CONST        reduce using rule 104 (data_str -> hashmap .)
    QUOTE           reduce using rule 104 (data_str -> hashmap .)
    $end            reduce using rule 104 (data_str -> hashmap .)
    RBRACE          reduce using rule 104 (data_str -> hashmap .)
    KW_RETURN       reduce using rule 104 (data_str -> hashmap .)


state 31

    (105) data_str -> linkedlist .

    SEMI            reduce using rule 105 (data_str -> linkedlist .)
    KW_PRINT        reduce using rule 105 (data_str -> linkedlist .)
    KW_LET          reduce using rule 105 (data_str -> linkedlist .)
    KW_FN           reduce using rule 105 (data_str -> linkedlist .)
    VARIABLE        reduce using rule 105 (data_str -> linkedlist .)
    LPAREN          reduce using rule 105 (data_str -> linkedlist .)
    LBRACKET        reduce using rule 105 (data_str -> linkedlist .)
    KW_FOR          reduce using rule 105 (data_str -> linkedlist .)
    KW_IF           reduce using rule 105 (data_str -> linkedlist .)
    KW_ELSE         reduce using rule 105 (data_str -> linkedlist .)
    KW_WHILE        reduce using rule 105 (data_str -> linkedlist .)
    INTEGER         reduce using rule 105 (data_str -> linkedlist .)
    FLOAT           reduce using rule 105 (data_str -> linkedlist .)
    KW_CONST        reduce using rule 105 (data_str -> linkedlist .)
    QUOTE           reduce using rule 105 (data_str -> linkedlist .)
    $end            reduce using rule 105 (data_str -> linkedlist .)
    RBRACE          reduce using rule 105 (data_str -> linkedlist .)
    KW_RETURN       reduce using rule 105 (data_str -> linkedlist .)


state 32

    (70) array -> LBRACKET . mdata RBRACKET
    (65) mdata -> . data
    (66) mdata -> . data COMMA mdata
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (74) tuple -> . LPAREN mdata RPAREN

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 73
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 75
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    LPAREN          shift and go to state 79

    mdata                          shift and go to state 70
    data                           shift and go to state 71
    tuple                          shift and go to state 78

state 33

    (75) initialization -> let_initialization . SEMI

    SEMI            shift and go to state 80


state 34

    (76) initialization -> const_initialization . SEMI

    SEMI            shift and go to state 81


state 35

    (78) initialization -> input_init . SEMI

    SEMI            shift and go to state 82


state 36

    (97) for_str -> KW_FOR . VARIABLE KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> KW_FOR . VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE

    VARIABLE        shift and go to state 83


state 37

    (99) for_str_tagged -> label . COLON for_str

    COLON           shift and go to state 84


state 38

    (123) if -> KW_IF . conditional LBRACE main_rule RBRACE
    (62) conditional -> . VARIABLE comparator data
    (63) conditional -> . and comparator data
    (61) and -> . VARIABLE LAND VARIABLE

    VARIABLE        shift and go to state 86

    conditional                    shift and go to state 85
    and                            shift and go to state 87

state 39

    (124) else -> KW_ELSE . LBRACE main_rule RBRACE
    (125) else_if -> KW_ELSE . KW_IF conditional LBRACE main_rule RBRACE

    LBRACE          shift and go to state 88
    KW_IF           shift and go to state 89


state 40

    (73) while -> KW_WHILE . LPAREN VARIABLE

    LPAREN          shift and go to state 90


state 41

    (24) number -> INTEGER .

    PLUS            reduce using rule 24 (number -> INTEGER .)
    MINUS           reduce using rule 24 (number -> INTEGER .)
    TIMES           reduce using rule 24 (number -> INTEGER .)
    DIVIDE          reduce using rule 24 (number -> INTEGER .)
    KW_PRINT        reduce using rule 24 (number -> INTEGER .)
    KW_LET          reduce using rule 24 (number -> INTEGER .)
    KW_FN           reduce using rule 24 (number -> INTEGER .)
    VARIABLE        reduce using rule 24 (number -> INTEGER .)
    LPAREN          reduce using rule 24 (number -> INTEGER .)
    LBRACKET        reduce using rule 24 (number -> INTEGER .)
    KW_FOR          reduce using rule 24 (number -> INTEGER .)
    KW_IF           reduce using rule 24 (number -> INTEGER .)
    KW_ELSE         reduce using rule 24 (number -> INTEGER .)
    KW_WHILE        reduce using rule 24 (number -> INTEGER .)
    INTEGER         reduce using rule 24 (number -> INTEGER .)
    FLOAT           reduce using rule 24 (number -> INTEGER .)
    KW_CONST        reduce using rule 24 (number -> INTEGER .)
    QUOTE           reduce using rule 24 (number -> INTEGER .)
    $end            reduce using rule 24 (number -> INTEGER .)
    RBRACE          reduce using rule 24 (number -> INTEGER .)
    KW_RETURN       reduce using rule 24 (number -> INTEGER .)
    RPAREN          reduce using rule 24 (number -> INTEGER .)
    SEMI            reduce using rule 24 (number -> INTEGER .)


state 42

    (25) number -> FLOAT .

    PLUS            reduce using rule 25 (number -> FLOAT .)
    MINUS           reduce using rule 25 (number -> FLOAT .)
    TIMES           reduce using rule 25 (number -> FLOAT .)
    DIVIDE          reduce using rule 25 (number -> FLOAT .)
    KW_PRINT        reduce using rule 25 (number -> FLOAT .)
    KW_LET          reduce using rule 25 (number -> FLOAT .)
    KW_FN           reduce using rule 25 (number -> FLOAT .)
    VARIABLE        reduce using rule 25 (number -> FLOAT .)
    LPAREN          reduce using rule 25 (number -> FLOAT .)
    LBRACKET        reduce using rule 25 (number -> FLOAT .)
    KW_FOR          reduce using rule 25 (number -> FLOAT .)
    KW_IF           reduce using rule 25 (number -> FLOAT .)
    KW_ELSE         reduce using rule 25 (number -> FLOAT .)
    KW_WHILE        reduce using rule 25 (number -> FLOAT .)
    INTEGER         reduce using rule 25 (number -> FLOAT .)
    FLOAT           reduce using rule 25 (number -> FLOAT .)
    KW_CONST        reduce using rule 25 (number -> FLOAT .)
    QUOTE           reduce using rule 25 (number -> FLOAT .)
    $end            reduce using rule 25 (number -> FLOAT .)
    RBRACE          reduce using rule 25 (number -> FLOAT .)
    KW_RETURN       reduce using rule 25 (number -> FLOAT .)
    RPAREN          reduce using rule 25 (number -> FLOAT .)
    SEMI            reduce using rule 25 (number -> FLOAT .)


state 43

    (87) const_initialization -> KW_CONST . VARIABLE COLON data_type EQUALS data

    VARIABLE        shift and go to state 91


state 44

    (102) label -> QUOTE . VARIABLE

    VARIABLE        shift and go to state 92


state 45

    (2) main_rule -> father_rule main_rule .

    $end            reduce using rule 2 (main_rule -> father_rule main_rule .)
    RBRACE          reduce using rule 2 (main_rule -> father_rule main_rule .)
    KW_RETURN       reduce using rule 2 (main_rule -> father_rule main_rule .)


state 46

    (18) expression -> expression PLUS . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE

    LPAREN          shift and go to state 19
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    VARIABLE        shift and go to state 53

    expression                     shift and go to state 93
    number                         shift and go to state 29

state 47

    (19) expression -> expression MINUS . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE

    LPAREN          shift and go to state 19
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    VARIABLE        shift and go to state 53

    expression                     shift and go to state 94
    number                         shift and go to state 29

state 48

    (20) expression -> expression TIMES . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE

    LPAREN          shift and go to state 19
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    VARIABLE        shift and go to state 53

    expression                     shift and go to state 95
    number                         shift and go to state 29

state 49

    (21) expression -> expression DIVIDE . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE

    LPAREN          shift and go to state 19
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    VARIABLE        shift and go to state 53

    expression                     shift and go to state 96
    number                         shift and go to state 29

state 50

    (77) initialization -> data_str SEMI .

    KW_PRINT        reduce using rule 77 (initialization -> data_str SEMI .)
    KW_LET          reduce using rule 77 (initialization -> data_str SEMI .)
    KW_FN           reduce using rule 77 (initialization -> data_str SEMI .)
    VARIABLE        reduce using rule 77 (initialization -> data_str SEMI .)
    LPAREN          reduce using rule 77 (initialization -> data_str SEMI .)
    LBRACKET        reduce using rule 77 (initialization -> data_str SEMI .)
    KW_FOR          reduce using rule 77 (initialization -> data_str SEMI .)
    KW_IF           reduce using rule 77 (initialization -> data_str SEMI .)
    KW_ELSE         reduce using rule 77 (initialization -> data_str SEMI .)
    KW_WHILE        reduce using rule 77 (initialization -> data_str SEMI .)
    INTEGER         reduce using rule 77 (initialization -> data_str SEMI .)
    FLOAT           reduce using rule 77 (initialization -> data_str SEMI .)
    KW_CONST        reduce using rule 77 (initialization -> data_str SEMI .)
    QUOTE           reduce using rule 77 (initialization -> data_str SEMI .)
    $end            reduce using rule 77 (initialization -> data_str SEMI .)
    RBRACE          reduce using rule 77 (initialization -> data_str SEMI .)
    KW_RETURN       reduce using rule 77 (initialization -> data_str SEMI .)


state 51

    (67) print -> KW_PRINT LPAREN . CADENA RPAREN SEMI

    CADENA          shift and go to state 97


state 52

    (22) expression -> LPAREN expression . RPAREN
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 98
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 53

    (26) number -> VARIABLE .

    RPAREN          reduce using rule 26 (number -> VARIABLE .)
    PLUS            reduce using rule 26 (number -> VARIABLE .)
    MINUS           reduce using rule 26 (number -> VARIABLE .)
    TIMES           reduce using rule 26 (number -> VARIABLE .)
    DIVIDE          reduce using rule 26 (number -> VARIABLE .)
    KW_PRINT        reduce using rule 26 (number -> VARIABLE .)
    KW_LET          reduce using rule 26 (number -> VARIABLE .)
    KW_FN           reduce using rule 26 (number -> VARIABLE .)
    VARIABLE        reduce using rule 26 (number -> VARIABLE .)
    LPAREN          reduce using rule 26 (number -> VARIABLE .)
    LBRACKET        reduce using rule 26 (number -> VARIABLE .)
    KW_FOR          reduce using rule 26 (number -> VARIABLE .)
    KW_IF           reduce using rule 26 (number -> VARIABLE .)
    KW_ELSE         reduce using rule 26 (number -> VARIABLE .)
    KW_WHILE        reduce using rule 26 (number -> VARIABLE .)
    INTEGER         reduce using rule 26 (number -> VARIABLE .)
    FLOAT           reduce using rule 26 (number -> VARIABLE .)
    KW_CONST        reduce using rule 26 (number -> VARIABLE .)
    QUOTE           reduce using rule 26 (number -> VARIABLE .)
    $end            reduce using rule 26 (number -> VARIABLE .)
    RBRACE          reduce using rule 26 (number -> VARIABLE .)
    KW_RETURN       reduce using rule 26 (number -> VARIABLE .)
    SEMI            reduce using rule 26 (number -> VARIABLE .)


state 54

    (68) dvariable -> KW_LET VARIABLE . SEMI
    (69) array -> KW_LET VARIABLE . EQUALS LBRACKET mdata RBRACKET
    (134) declare_data_type -> KW_LET VARIABLE . COLON data_type SEMI
    (106) hashmap -> KW_LET VARIABLE . EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> KW_LET VARIABLE . EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (115) linkedlist -> KW_LET VARIABLE . COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (117) linkedlist -> KW_LET VARIABLE . EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> KW_LET VARIABLE . EQUALS data
    (80) let_initialization -> KW_LET VARIABLE . COLON data_type EQUALS data
    (83) let_initialization -> KW_LET VARIABLE . EQUALS expression_var
    (84) let_initialization -> KW_LET VARIABLE . COLON data_type EQUALS expression_var
    (131) input_init -> KW_LET VARIABLE . EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN

    SEMI            shift and go to state 99
    EQUALS          shift and go to state 100
    COLON           shift and go to state 101


state 55

    (107) hashmap -> KW_LET KW_MUT . VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (109) hashmap -> KW_LET KW_MUT . VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (116) linkedlist -> KW_LET KW_MUT . VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (118) linkedlist -> KW_LET KW_MUT . VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (81) let_initialization -> KW_LET KW_MUT . VARIABLE EQUALS data
    (82) let_initialization -> KW_LET KW_MUT . VARIABLE COLON data_type EQUALS data
    (85) let_initialization -> KW_LET KW_MUT . VARIABLE EQUALS expression_var
    (86) let_initialization -> KW_LET KW_MUT . VARIABLE COLON data_type EQUALS expression_var

    VARIABLE        shift and go to state 102


state 56

    (72) variables -> VARIABLE COMMA . variables
    (71) variables -> . VARIABLE
    (72) variables -> . VARIABLE COMMA variables

    VARIABLE        shift and go to state 103

    variables                      shift and go to state 104

state 57

    (119) linkedlist_methods -> VARIABLE linkedlist_push .

    KW_PRINT        reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    KW_LET          reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    KW_FN           reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    VARIABLE        reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    LPAREN          reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    LBRACKET        reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    KW_FOR          reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    KW_IF           reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    KW_ELSE         reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    KW_WHILE        reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    INTEGER         reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    FLOAT           reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    KW_CONST        reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    QUOTE           reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    $end            reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    RBRACE          reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)
    KW_RETURN       reduce using rule 119 (linkedlist_methods -> VARIABLE linkedlist_push .)


state 58

    (120) linkedlist_methods -> VARIABLE linkedlist_remove .

    KW_PRINT        reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    KW_LET          reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    KW_FN           reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    VARIABLE        reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    LPAREN          reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    LBRACKET        reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    KW_FOR          reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    KW_IF           reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    KW_ELSE         reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    KW_WHILE        reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    INTEGER         reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    FLOAT           reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    KW_CONST        reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    QUOTE           reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    $end            reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    RBRACE          reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)
    KW_RETURN       reduce using rule 120 (linkedlist_methods -> VARIABLE linkedlist_remove .)


state 59

    (110) hashmap_methods -> VARIABLE hashmap_insert .

    KW_PRINT        reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    KW_LET          reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    KW_FN           reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    VARIABLE        reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    LPAREN          reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    LBRACKET        reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    KW_FOR          reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    KW_IF           reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    KW_ELSE         reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    KW_WHILE        reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    INTEGER         reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    FLOAT           reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    KW_CONST        reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    QUOTE           reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    $end            reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    RBRACE          reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)
    KW_RETURN       reduce using rule 110 (hashmap_methods -> VARIABLE hashmap_insert .)


state 60

    (111) hashmap_methods -> VARIABLE hashmap_remove .

    KW_PRINT        reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    KW_LET          reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    KW_FN           reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    VARIABLE        reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    LPAREN          reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    LBRACKET        reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    KW_FOR          reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    KW_IF           reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    KW_ELSE         reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    KW_WHILE        reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    INTEGER         reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    FLOAT           reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    KW_CONST        reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    QUOTE           reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    $end            reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    RBRACE          reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)
    KW_RETURN       reduce using rule 111 (hashmap_methods -> VARIABLE hashmap_remove .)


state 61

    (132) input -> VARIABLE DOT . KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
    (121) linkedlist_push -> DOT . KW_PUSH_BACK LPAREN data RPAREN SEMI
    (122) linkedlist_remove -> DOT . KW_REMOVE LPAREN INTEGER RPAREN SEMI
    (112) hashmap_insert -> DOT . KW_INSERT LPAREN mdata RPAREN SEMI
    (113) hashmap_remove -> DOT . KW_REMOVE LPAREN AND data RPAREN SEMI

    KW_READ_LINE    shift and go to state 105
    KW_PUSH_BACK    shift and go to state 106
    KW_REMOVE       shift and go to state 107
    KW_INSERT       shift and go to state 108


state 62

    (133) assignation -> VARIABLE assign_operators . number
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE

    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    VARIABLE        shift and go to state 53

    number                         shift and go to state 109

state 63

    (41) assign_operators -> EQUALS .

    INTEGER         reduce using rule 41 (assign_operators -> EQUALS .)
    FLOAT           reduce using rule 41 (assign_operators -> EQUALS .)
    VARIABLE        reduce using rule 41 (assign_operators -> EQUALS .)


state 64

    (42) assign_operators -> TIMESEQUAL .

    INTEGER         reduce using rule 42 (assign_operators -> TIMESEQUAL .)
    FLOAT           reduce using rule 42 (assign_operators -> TIMESEQUAL .)
    VARIABLE        reduce using rule 42 (assign_operators -> TIMESEQUAL .)


state 65

    (43) assign_operators -> DIVEQUAL .

    INTEGER         reduce using rule 43 (assign_operators -> DIVEQUAL .)
    FLOAT           reduce using rule 43 (assign_operators -> DIVEQUAL .)
    VARIABLE        reduce using rule 43 (assign_operators -> DIVEQUAL .)


state 66

    (44) assign_operators -> MODULUSEQUAL .

    INTEGER         reduce using rule 44 (assign_operators -> MODULUSEQUAL .)
    FLOAT           reduce using rule 44 (assign_operators -> MODULUSEQUAL .)
    VARIABLE        reduce using rule 44 (assign_operators -> MODULUSEQUAL .)


state 67

    (45) assign_operators -> PLUSEQUAL .

    INTEGER         reduce using rule 45 (assign_operators -> PLUSEQUAL .)
    FLOAT           reduce using rule 45 (assign_operators -> PLUSEQUAL .)
    VARIABLE        reduce using rule 45 (assign_operators -> PLUSEQUAL .)


state 68

    (46) assign_operators -> MINUSEQUAL .

    INTEGER         reduce using rule 46 (assign_operators -> MINUSEQUAL .)
    FLOAT           reduce using rule 46 (assign_operators -> MINUSEQUAL .)
    VARIABLE        reduce using rule 46 (assign_operators -> MINUSEQUAL .)


state 69

    (90) function -> KW_FN VARIABLE . LPAREN arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> KW_FN VARIABLE . LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE

    LPAREN          shift and go to state 110


state 70

    (70) array -> LBRACKET mdata . RBRACKET

    RBRACKET        shift and go to state 111


state 71

    (65) mdata -> data .
    (66) mdata -> data . COMMA mdata

    RBRACKET        reduce using rule 65 (mdata -> data .)
    RPAREN          reduce using rule 65 (mdata -> data .)
    COMMA           shift and go to state 112


state 72

    (47) data -> CADENA .

    COMMA           reduce using rule 47 (data -> CADENA .)
    RBRACKET        reduce using rule 47 (data -> CADENA .)
    RPAREN          reduce using rule 47 (data -> CADENA .)
    SEMI            reduce using rule 47 (data -> CADENA .)
    LBRACE          reduce using rule 47 (data -> CADENA .)


state 73

    (48) data -> INTEGER .

    COMMA           reduce using rule 48 (data -> INTEGER .)
    RBRACKET        reduce using rule 48 (data -> INTEGER .)
    RPAREN          reduce using rule 48 (data -> INTEGER .)
    LBRACE          reduce using rule 48 (data -> INTEGER .)
    SEMI            reduce using rule 48 (data -> INTEGER .)


state 74

    (49) data -> CHAR .

    COMMA           reduce using rule 49 (data -> CHAR .)
    RBRACKET        reduce using rule 49 (data -> CHAR .)
    RPAREN          reduce using rule 49 (data -> CHAR .)
    SEMI            reduce using rule 49 (data -> CHAR .)
    LBRACE          reduce using rule 49 (data -> CHAR .)


state 75

    (50) data -> FLOAT .

    COMMA           reduce using rule 50 (data -> FLOAT .)
    RBRACKET        reduce using rule 50 (data -> FLOAT .)
    RPAREN          reduce using rule 50 (data -> FLOAT .)
    LBRACE          reduce using rule 50 (data -> FLOAT .)
    SEMI            reduce using rule 50 (data -> FLOAT .)


state 76

    (51) data -> KW_FALSE .

    COMMA           reduce using rule 51 (data -> KW_FALSE .)
    RBRACKET        reduce using rule 51 (data -> KW_FALSE .)
    RPAREN          reduce using rule 51 (data -> KW_FALSE .)
    SEMI            reduce using rule 51 (data -> KW_FALSE .)
    LBRACE          reduce using rule 51 (data -> KW_FALSE .)


state 77

    (52) data -> KW_TRUE .

    COMMA           reduce using rule 52 (data -> KW_TRUE .)
    RBRACKET        reduce using rule 52 (data -> KW_TRUE .)
    RPAREN          reduce using rule 52 (data -> KW_TRUE .)
    SEMI            reduce using rule 52 (data -> KW_TRUE .)
    LBRACE          reduce using rule 52 (data -> KW_TRUE .)


state 78

    (53) data -> tuple .

    COMMA           reduce using rule 53 (data -> tuple .)
    RBRACKET        reduce using rule 53 (data -> tuple .)
    RPAREN          reduce using rule 53 (data -> tuple .)
    SEMI            reduce using rule 53 (data -> tuple .)
    LBRACE          reduce using rule 53 (data -> tuple .)


state 79

    (74) tuple -> LPAREN . mdata RPAREN
    (65) mdata -> . data
    (66) mdata -> . data COMMA mdata
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (74) tuple -> . LPAREN mdata RPAREN

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 73
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 75
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    LPAREN          shift and go to state 79

    mdata                          shift and go to state 113
    data                           shift and go to state 71
    tuple                          shift and go to state 78

state 80

    (75) initialization -> let_initialization SEMI .

    KW_PRINT        reduce using rule 75 (initialization -> let_initialization SEMI .)
    KW_LET          reduce using rule 75 (initialization -> let_initialization SEMI .)
    KW_FN           reduce using rule 75 (initialization -> let_initialization SEMI .)
    VARIABLE        reduce using rule 75 (initialization -> let_initialization SEMI .)
    LPAREN          reduce using rule 75 (initialization -> let_initialization SEMI .)
    LBRACKET        reduce using rule 75 (initialization -> let_initialization SEMI .)
    KW_FOR          reduce using rule 75 (initialization -> let_initialization SEMI .)
    KW_IF           reduce using rule 75 (initialization -> let_initialization SEMI .)
    KW_ELSE         reduce using rule 75 (initialization -> let_initialization SEMI .)
    KW_WHILE        reduce using rule 75 (initialization -> let_initialization SEMI .)
    INTEGER         reduce using rule 75 (initialization -> let_initialization SEMI .)
    FLOAT           reduce using rule 75 (initialization -> let_initialization SEMI .)
    KW_CONST        reduce using rule 75 (initialization -> let_initialization SEMI .)
    QUOTE           reduce using rule 75 (initialization -> let_initialization SEMI .)
    $end            reduce using rule 75 (initialization -> let_initialization SEMI .)
    RBRACE          reduce using rule 75 (initialization -> let_initialization SEMI .)
    KW_RETURN       reduce using rule 75 (initialization -> let_initialization SEMI .)


state 81

    (76) initialization -> const_initialization SEMI .

    KW_PRINT        reduce using rule 76 (initialization -> const_initialization SEMI .)
    KW_LET          reduce using rule 76 (initialization -> const_initialization SEMI .)
    KW_FN           reduce using rule 76 (initialization -> const_initialization SEMI .)
    VARIABLE        reduce using rule 76 (initialization -> const_initialization SEMI .)
    LPAREN          reduce using rule 76 (initialization -> const_initialization SEMI .)
    LBRACKET        reduce using rule 76 (initialization -> const_initialization SEMI .)
    KW_FOR          reduce using rule 76 (initialization -> const_initialization SEMI .)
    KW_IF           reduce using rule 76 (initialization -> const_initialization SEMI .)
    KW_ELSE         reduce using rule 76 (initialization -> const_initialization SEMI .)
    KW_WHILE        reduce using rule 76 (initialization -> const_initialization SEMI .)
    INTEGER         reduce using rule 76 (initialization -> const_initialization SEMI .)
    FLOAT           reduce using rule 76 (initialization -> const_initialization SEMI .)
    KW_CONST        reduce using rule 76 (initialization -> const_initialization SEMI .)
    QUOTE           reduce using rule 76 (initialization -> const_initialization SEMI .)
    $end            reduce using rule 76 (initialization -> const_initialization SEMI .)
    RBRACE          reduce using rule 76 (initialization -> const_initialization SEMI .)
    KW_RETURN       reduce using rule 76 (initialization -> const_initialization SEMI .)


state 82

    (78) initialization -> input_init SEMI .

    KW_PRINT        reduce using rule 78 (initialization -> input_init SEMI .)
    KW_LET          reduce using rule 78 (initialization -> input_init SEMI .)
    KW_FN           reduce using rule 78 (initialization -> input_init SEMI .)
    VARIABLE        reduce using rule 78 (initialization -> input_init SEMI .)
    LPAREN          reduce using rule 78 (initialization -> input_init SEMI .)
    LBRACKET        reduce using rule 78 (initialization -> input_init SEMI .)
    KW_FOR          reduce using rule 78 (initialization -> input_init SEMI .)
    KW_IF           reduce using rule 78 (initialization -> input_init SEMI .)
    KW_ELSE         reduce using rule 78 (initialization -> input_init SEMI .)
    KW_WHILE        reduce using rule 78 (initialization -> input_init SEMI .)
    INTEGER         reduce using rule 78 (initialization -> input_init SEMI .)
    FLOAT           reduce using rule 78 (initialization -> input_init SEMI .)
    KW_CONST        reduce using rule 78 (initialization -> input_init SEMI .)
    QUOTE           reduce using rule 78 (initialization -> input_init SEMI .)
    $end            reduce using rule 78 (initialization -> input_init SEMI .)
    RBRACE          reduce using rule 78 (initialization -> input_init SEMI .)
    KW_RETURN       reduce using rule 78 (initialization -> input_init SEMI .)


state 83

    (97) for_str -> KW_FOR VARIABLE . KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> KW_FOR VARIABLE . KW_IN VARIABLE LBRACE main_rule RBRACE

    KW_IN           shift and go to state 114


state 84

    (99) for_str_tagged -> label COLON . for_str
    (97) for_str -> . KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> . KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE

    KW_FOR          shift and go to state 36

    for_str                        shift and go to state 115

state 85

    (123) if -> KW_IF conditional . LBRACE main_rule RBRACE

    LBRACE          shift and go to state 116


state 86

    (62) conditional -> VARIABLE . comparator data
    (61) and -> VARIABLE . LAND VARIABLE
    (54) comparator -> .
    (55) comparator -> . EQ
    (56) comparator -> . NE
    (57) comparator -> . GE
    (58) comparator -> . LE
    (59) comparator -> . GT
    (60) comparator -> . LT

    LAND            shift and go to state 118
    CADENA          reduce using rule 54 (comparator -> .)
    INTEGER         reduce using rule 54 (comparator -> .)
    CHAR            reduce using rule 54 (comparator -> .)
    FLOAT           reduce using rule 54 (comparator -> .)
    KW_FALSE        reduce using rule 54 (comparator -> .)
    KW_TRUE         reduce using rule 54 (comparator -> .)
    LPAREN          reduce using rule 54 (comparator -> .)
    EQ              shift and go to state 119
    NE              shift and go to state 120
    GE              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    LT              shift and go to state 124

    comparator                     shift and go to state 117

state 87

    (63) conditional -> and . comparator data
    (54) comparator -> .
    (55) comparator -> . EQ
    (56) comparator -> . NE
    (57) comparator -> . GE
    (58) comparator -> . LE
    (59) comparator -> . GT
    (60) comparator -> . LT

    CADENA          reduce using rule 54 (comparator -> .)
    INTEGER         reduce using rule 54 (comparator -> .)
    CHAR            reduce using rule 54 (comparator -> .)
    FLOAT           reduce using rule 54 (comparator -> .)
    KW_FALSE        reduce using rule 54 (comparator -> .)
    KW_TRUE         reduce using rule 54 (comparator -> .)
    LPAREN          reduce using rule 54 (comparator -> .)
    EQ              shift and go to state 119
    NE              shift and go to state 120
    GE              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    LT              shift and go to state 124

    comparator                     shift and go to state 125

state 88

    (124) else -> KW_ELSE LBRACE . main_rule RBRACE
    (1) main_rule -> . father_rule
    (2) main_rule -> . father_rule main_rule
    (3) father_rule -> . print
    (4) father_rule -> . dvariable
    (5) father_rule -> . function
    (6) father_rule -> . variables
    (7) father_rule -> . control_str
    (8) father_rule -> . expression
    (9) father_rule -> . void
    (10) father_rule -> . data_str
    (11) father_rule -> . array
    (12) father_rule -> . linkedlist_methods
    (13) father_rule -> . hashmap_methods
    (14) father_rule -> . initialization
    (15) father_rule -> . input
    (16) father_rule -> . assignation
    (17) father_rule -> . declare_data_type
    (67) print -> . KW_PRINT LPAREN CADENA RPAREN SEMI
    (68) dvariable -> . KW_LET VARIABLE SEMI
    (90) function -> . KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> . KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE
    (71) variables -> . VARIABLE
    (72) variables -> . VARIABLE COMMA variables
    (91) control_str -> . for_str
    (92) control_str -> . for_str_tagged
    (93) control_str -> . if
    (94) control_str -> . else
    (95) control_str -> . else_if
    (96) control_str -> . while
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (114) void -> .
    (103) data_str -> . array
    (104) data_str -> . hashmap
    (105) data_str -> . linkedlist
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET
    (119) linkedlist_methods -> . VARIABLE linkedlist_push
    (120) linkedlist_methods -> . VARIABLE linkedlist_remove
    (110) hashmap_methods -> . VARIABLE hashmap_insert
    (111) hashmap_methods -> . VARIABLE hashmap_remove
    (75) initialization -> . let_initialization SEMI
    (76) initialization -> . const_initialization SEMI
    (77) initialization -> . data_str SEMI
    (78) initialization -> . input_init SEMI
    (132) input -> . VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
    (133) assignation -> . VARIABLE assign_operators number
    (134) declare_data_type -> . KW_LET VARIABLE COLON data_type SEMI
    (97) for_str -> . KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> . KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE
    (99) for_str_tagged -> . label COLON for_str
    (123) if -> . KW_IF conditional LBRACE main_rule RBRACE
    (124) else -> . KW_ELSE LBRACE main_rule RBRACE
    (125) else_if -> . KW_ELSE KW_IF conditional LBRACE main_rule RBRACE
    (73) while -> . KW_WHILE LPAREN VARIABLE
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE
    (106) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (107) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (109) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (115) linkedlist -> . KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (116) linkedlist -> . KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (117) linkedlist -> . KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (118) linkedlist -> . KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> . KW_LET VARIABLE EQUALS data
    (80) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS data
    (81) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS data
    (82) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS data
    (83) let_initialization -> . KW_LET VARIABLE EQUALS expression_var
    (84) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS expression_var
    (85) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS expression_var
    (86) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var
    (87) const_initialization -> . KW_CONST VARIABLE COLON data_type EQUALS data
    (131) input_init -> . KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN
    (102) label -> . QUOTE VARIABLE

  ! shift/reduce conflict for KW_PRINT resolved as shift
  ! shift/reduce conflict for KW_LET resolved as shift
  ! shift/reduce conflict for KW_FN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for KW_FOR resolved as shift
  ! shift/reduce conflict for KW_IF resolved as shift
  ! shift/reduce conflict for KW_ELSE resolved as shift
  ! shift/reduce conflict for KW_WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for KW_CONST resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
    KW_PRINT        shift and go to state 18
    KW_LET          shift and go to state 20
    KW_FN           shift and go to state 22
    VARIABLE        shift and go to state 21
    LPAREN          shift and go to state 19
    RBRACE          reduce using rule 114 (void -> .)
    LBRACKET        shift and go to state 32
    KW_FOR          shift and go to state 36
    KW_IF           shift and go to state 38
    KW_ELSE         shift and go to state 39
    KW_WHILE        shift and go to state 40
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    KW_CONST        shift and go to state 43
    QUOTE           shift and go to state 44

  ! KW_PRINT        [ reduce using rule 114 (void -> .) ]
  ! KW_LET          [ reduce using rule 114 (void -> .) ]
  ! KW_FN           [ reduce using rule 114 (void -> .) ]
  ! VARIABLE        [ reduce using rule 114 (void -> .) ]
  ! LPAREN          [ reduce using rule 114 (void -> .) ]
  ! LBRACKET        [ reduce using rule 114 (void -> .) ]
  ! KW_FOR          [ reduce using rule 114 (void -> .) ]
  ! KW_IF           [ reduce using rule 114 (void -> .) ]
  ! KW_ELSE         [ reduce using rule 114 (void -> .) ]
  ! KW_WHILE        [ reduce using rule 114 (void -> .) ]
  ! INTEGER         [ reduce using rule 114 (void -> .) ]
  ! FLOAT           [ reduce using rule 114 (void -> .) ]
  ! KW_CONST        [ reduce using rule 114 (void -> .) ]
  ! QUOTE           [ reduce using rule 114 (void -> .) ]

    main_rule                      shift and go to state 126
    father_rule                    shift and go to state 2
    print                          shift and go to state 3
    dvariable                      shift and go to state 4
    function                       shift and go to state 5
    variables                      shift and go to state 6
    control_str                    shift and go to state 7
    expression                     shift and go to state 8
    void                           shift and go to state 9
    data_str                       shift and go to state 10
    array                          shift and go to state 11
    linkedlist_methods             shift and go to state 12
    hashmap_methods                shift and go to state 13
    initialization                 shift and go to state 14
    input                          shift and go to state 15
    assignation                    shift and go to state 16
    declare_data_type              shift and go to state 17
    for_str                        shift and go to state 23
    for_str_tagged                 shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    else_if                        shift and go to state 27
    while                          shift and go to state 28
    number                         shift and go to state 29
    hashmap                        shift and go to state 30
    linkedlist                     shift and go to state 31
    let_initialization             shift and go to state 33
    const_initialization           shift and go to state 34
    input_init                     shift and go to state 35
    label                          shift and go to state 37

state 89

    (125) else_if -> KW_ELSE KW_IF . conditional LBRACE main_rule RBRACE
    (62) conditional -> . VARIABLE comparator data
    (63) conditional -> . and comparator data
    (61) and -> . VARIABLE LAND VARIABLE

    VARIABLE        shift and go to state 86

    conditional                    shift and go to state 127
    and                            shift and go to state 87

state 90

    (73) while -> KW_WHILE LPAREN . VARIABLE

    VARIABLE        shift and go to state 128


state 91

    (87) const_initialization -> KW_CONST VARIABLE . COLON data_type EQUALS data

    COLON           shift and go to state 129


state 92

    (102) label -> QUOTE VARIABLE .

    COLON           reduce using rule 102 (label -> QUOTE VARIABLE .)


state 93

    (18) expression -> expression PLUS expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    KW_PRINT        reduce using rule 18 (expression -> expression PLUS expression .)
    KW_LET          reduce using rule 18 (expression -> expression PLUS expression .)
    KW_FN           reduce using rule 18 (expression -> expression PLUS expression .)
    VARIABLE        reduce using rule 18 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 18 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 18 (expression -> expression PLUS expression .)
    KW_FOR          reduce using rule 18 (expression -> expression PLUS expression .)
    KW_IF           reduce using rule 18 (expression -> expression PLUS expression .)
    KW_ELSE         reduce using rule 18 (expression -> expression PLUS expression .)
    KW_WHILE        reduce using rule 18 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 18 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 18 (expression -> expression PLUS expression .)
    KW_CONST        reduce using rule 18 (expression -> expression PLUS expression .)
    QUOTE           reduce using rule 18 (expression -> expression PLUS expression .)
    $end            reduce using rule 18 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 18 (expression -> expression PLUS expression .)
    KW_RETURN       reduce using rule 18 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 18 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 18 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression PLUS expression .) ]


state 94

    (19) expression -> expression MINUS expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    KW_PRINT        reduce using rule 19 (expression -> expression MINUS expression .)
    KW_LET          reduce using rule 19 (expression -> expression MINUS expression .)
    KW_FN           reduce using rule 19 (expression -> expression MINUS expression .)
    VARIABLE        reduce using rule 19 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 19 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 19 (expression -> expression MINUS expression .)
    KW_FOR          reduce using rule 19 (expression -> expression MINUS expression .)
    KW_IF           reduce using rule 19 (expression -> expression MINUS expression .)
    KW_ELSE         reduce using rule 19 (expression -> expression MINUS expression .)
    KW_WHILE        reduce using rule 19 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 19 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 19 (expression -> expression MINUS expression .)
    KW_CONST        reduce using rule 19 (expression -> expression MINUS expression .)
    QUOTE           reduce using rule 19 (expression -> expression MINUS expression .)
    $end            reduce using rule 19 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 19 (expression -> expression MINUS expression .)
    KW_RETURN       reduce using rule 19 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 19 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 19 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression MINUS expression .) ]


state 95

    (20) expression -> expression TIMES expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    KW_PRINT        reduce using rule 20 (expression -> expression TIMES expression .)
    KW_LET          reduce using rule 20 (expression -> expression TIMES expression .)
    KW_FN           reduce using rule 20 (expression -> expression TIMES expression .)
    VARIABLE        reduce using rule 20 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 20 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 20 (expression -> expression TIMES expression .)
    KW_FOR          reduce using rule 20 (expression -> expression TIMES expression .)
    KW_IF           reduce using rule 20 (expression -> expression TIMES expression .)
    KW_ELSE         reduce using rule 20 (expression -> expression TIMES expression .)
    KW_WHILE        reduce using rule 20 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 20 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 20 (expression -> expression TIMES expression .)
    KW_CONST        reduce using rule 20 (expression -> expression TIMES expression .)
    QUOTE           reduce using rule 20 (expression -> expression TIMES expression .)
    $end            reduce using rule 20 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 20 (expression -> expression TIMES expression .)
    KW_RETURN       reduce using rule 20 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 20 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 20 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression TIMES expression .) ]


state 96

    (21) expression -> expression DIVIDE expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    KW_PRINT        reduce using rule 21 (expression -> expression DIVIDE expression .)
    KW_LET          reduce using rule 21 (expression -> expression DIVIDE expression .)
    KW_FN           reduce using rule 21 (expression -> expression DIVIDE expression .)
    VARIABLE        reduce using rule 21 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 21 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 21 (expression -> expression DIVIDE expression .)
    KW_FOR          reduce using rule 21 (expression -> expression DIVIDE expression .)
    KW_IF           reduce using rule 21 (expression -> expression DIVIDE expression .)
    KW_ELSE         reduce using rule 21 (expression -> expression DIVIDE expression .)
    KW_WHILE        reduce using rule 21 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 21 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 21 (expression -> expression DIVIDE expression .)
    KW_CONST        reduce using rule 21 (expression -> expression DIVIDE expression .)
    QUOTE           reduce using rule 21 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 21 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 21 (expression -> expression DIVIDE expression .)
    KW_RETURN       reduce using rule 21 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 21 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 21 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]


state 97

    (67) print -> KW_PRINT LPAREN CADENA . RPAREN SEMI

    RPAREN          shift and go to state 130


state 98

    (22) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    KW_PRINT        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    KW_LET          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    KW_FN           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    VARIABLE        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    KW_FOR          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    KW_IF           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    KW_ELSE         reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    KW_WHILE        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    KW_CONST        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    QUOTE           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    KW_RETURN       reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 22 (expression -> LPAREN expression RPAREN .)


state 99

    (68) dvariable -> KW_LET VARIABLE SEMI .

    KW_PRINT        reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    KW_LET          reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    KW_FN           reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    VARIABLE        reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    LPAREN          reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    LBRACKET        reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    KW_FOR          reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    KW_IF           reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    KW_ELSE         reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    KW_WHILE        reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    INTEGER         reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    FLOAT           reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    KW_CONST        reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    QUOTE           reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    $end            reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    RBRACE          reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)
    KW_RETURN       reduce using rule 68 (dvariable -> KW_LET VARIABLE SEMI .)


state 100

    (69) array -> KW_LET VARIABLE EQUALS . LBRACKET mdata RBRACKET
    (106) hashmap -> KW_LET VARIABLE EQUALS . KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> KW_LET VARIABLE EQUALS . KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (117) linkedlist -> KW_LET VARIABLE EQUALS . KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> KW_LET VARIABLE EQUALS . data
    (83) let_initialization -> KW_LET VARIABLE EQUALS . expression_var
    (131) input_init -> KW_LET VARIABLE EQUALS . KW_IO COLON COLON KW_STDIN LPAREN RPAREN
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (127) expression_var -> . expression
    (128) expression_var -> . VARIABLE
    (74) tuple -> . LPAREN mdata RPAREN
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE

    LBRACKET        shift and go to state 132
    KW_HASHMAP      shift and go to state 133
    KW_LINKEDLIST   shift and go to state 135
    KW_IO           shift and go to state 138
    CADENA          shift and go to state 72
    INTEGER         shift and go to state 139
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 140
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    VARIABLE        shift and go to state 131
    LPAREN          shift and go to state 134

    data                           shift and go to state 136
    expression_var                 shift and go to state 137
    tuple                          shift and go to state 78
    expression                     shift and go to state 141
    number                         shift and go to state 29

state 101

    (134) declare_data_type -> KW_LET VARIABLE COLON . data_type SEMI
    (115) linkedlist -> KW_LET VARIABLE COLON . KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (80) let_initialization -> KW_LET VARIABLE COLON . data_type EQUALS data
    (84) let_initialization -> KW_LET VARIABLE COLON . data_type EQUALS expression_var
    (27) data_type -> . UNSIG_INT_8
    (28) data_type -> . UNSIG_INT_16
    (29) data_type -> . UNSIG_INT_32
    (30) data_type -> . UNSIG_INT_64
    (31) data_type -> . UNSIG_INT_128
    (32) data_type -> . SIG_INT_8
    (33) data_type -> . SIG_INT_16
    (34) data_type -> . SIG_INT_32
    (35) data_type -> . SIG_INT_64
    (36) data_type -> . SIG_INT_128
    (37) data_type -> . FLOAT_32
    (38) data_type -> . FLOAT_64
    (39) data_type -> . KW_BOOLEAN
    (40) data_type -> . KW_STRING

    KW_LINKEDLIST   shift and go to state 143
    UNSIG_INT_8     shift and go to state 144
    UNSIG_INT_16    shift and go to state 145
    UNSIG_INT_32    shift and go to state 146
    UNSIG_INT_64    shift and go to state 147
    UNSIG_INT_128   shift and go to state 148
    SIG_INT_8       shift and go to state 149
    SIG_INT_16      shift and go to state 150
    SIG_INT_32      shift and go to state 151
    SIG_INT_64      shift and go to state 152
    SIG_INT_128     shift and go to state 153
    FLOAT_32        shift and go to state 154
    FLOAT_64        shift and go to state 155
    KW_BOOLEAN      shift and go to state 156
    KW_STRING       shift and go to state 157

    data_type                      shift and go to state 142

state 102

    (107) hashmap -> KW_LET KW_MUT VARIABLE . EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (109) hashmap -> KW_LET KW_MUT VARIABLE . EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (116) linkedlist -> KW_LET KW_MUT VARIABLE . COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (118) linkedlist -> KW_LET KW_MUT VARIABLE . EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (81) let_initialization -> KW_LET KW_MUT VARIABLE . EQUALS data
    (82) let_initialization -> KW_LET KW_MUT VARIABLE . COLON data_type EQUALS data
    (85) let_initialization -> KW_LET KW_MUT VARIABLE . EQUALS expression_var
    (86) let_initialization -> KW_LET KW_MUT VARIABLE . COLON data_type EQUALS expression_var

    EQUALS          shift and go to state 158
    COLON           shift and go to state 159


state 103

    (71) variables -> VARIABLE .
    (72) variables -> VARIABLE . COMMA variables

    KW_PRINT        reduce using rule 71 (variables -> VARIABLE .)
    KW_LET          reduce using rule 71 (variables -> VARIABLE .)
    KW_FN           reduce using rule 71 (variables -> VARIABLE .)
    VARIABLE        reduce using rule 71 (variables -> VARIABLE .)
    LPAREN          reduce using rule 71 (variables -> VARIABLE .)
    LBRACKET        reduce using rule 71 (variables -> VARIABLE .)
    KW_FOR          reduce using rule 71 (variables -> VARIABLE .)
    KW_IF           reduce using rule 71 (variables -> VARIABLE .)
    KW_ELSE         reduce using rule 71 (variables -> VARIABLE .)
    KW_WHILE        reduce using rule 71 (variables -> VARIABLE .)
    INTEGER         reduce using rule 71 (variables -> VARIABLE .)
    FLOAT           reduce using rule 71 (variables -> VARIABLE .)
    KW_CONST        reduce using rule 71 (variables -> VARIABLE .)
    QUOTE           reduce using rule 71 (variables -> VARIABLE .)
    $end            reduce using rule 71 (variables -> VARIABLE .)
    RBRACE          reduce using rule 71 (variables -> VARIABLE .)
    KW_RETURN       reduce using rule 71 (variables -> VARIABLE .)
    RPAREN          reduce using rule 71 (variables -> VARIABLE .)
    COMMA           shift and go to state 56


state 104

    (72) variables -> VARIABLE COMMA variables .

    KW_PRINT        reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    KW_LET          reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    KW_FN           reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    VARIABLE        reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    LPAREN          reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    LBRACKET        reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    KW_FOR          reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    KW_IF           reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    KW_ELSE         reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    KW_WHILE        reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    INTEGER         reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    FLOAT           reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    KW_CONST        reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    QUOTE           reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    $end            reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    RBRACE          reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    KW_RETURN       reduce using rule 72 (variables -> VARIABLE COMMA variables .)
    RPAREN          reduce using rule 72 (variables -> VARIABLE COMMA variables .)


state 105

    (132) input -> VARIABLE DOT KW_READ_LINE . LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI

    LPAREN          shift and go to state 160


state 106

    (121) linkedlist_push -> DOT KW_PUSH_BACK . LPAREN data RPAREN SEMI

    LPAREN          shift and go to state 161


state 107

    (122) linkedlist_remove -> DOT KW_REMOVE . LPAREN INTEGER RPAREN SEMI
    (113) hashmap_remove -> DOT KW_REMOVE . LPAREN AND data RPAREN SEMI

    LPAREN          shift and go to state 162


state 108

    (112) hashmap_insert -> DOT KW_INSERT . LPAREN mdata RPAREN SEMI

    LPAREN          shift and go to state 163


state 109

    (133) assignation -> VARIABLE assign_operators number .

    KW_PRINT        reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    KW_LET          reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    KW_FN           reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    VARIABLE        reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    LPAREN          reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    LBRACKET        reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    KW_FOR          reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    KW_IF           reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    KW_ELSE         reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    KW_WHILE        reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    INTEGER         reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    FLOAT           reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    KW_CONST        reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    QUOTE           reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    $end            reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    RBRACE          reduce using rule 133 (assignation -> VARIABLE assign_operators number .)
    KW_RETURN       reduce using rule 133 (assignation -> VARIABLE assign_operators number .)


state 110

    (90) function -> KW_FN VARIABLE LPAREN . arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> KW_FN VARIABLE LPAREN . arguments RPAREN MINUS GT data_type LBRACE return RBRACE
    (88) arguments -> . void
    (89) arguments -> . variables
    (114) void -> .
    (71) variables -> . VARIABLE
    (72) variables -> . VARIABLE COMMA variables

    RPAREN          reduce using rule 114 (void -> .)
    VARIABLE        shift and go to state 103

    arguments                      shift and go to state 164
    void                           shift and go to state 165
    variables                      shift and go to state 166

state 111

    (70) array -> LBRACKET mdata RBRACKET .

    KW_PRINT        reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    KW_LET          reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    KW_FN           reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    VARIABLE        reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    LPAREN          reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    LBRACKET        reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    KW_FOR          reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    KW_IF           reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    KW_ELSE         reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    KW_WHILE        reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    INTEGER         reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    FLOAT           reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    KW_CONST        reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    QUOTE           reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    $end            reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    SEMI            reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    RBRACE          reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    KW_RETURN       reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)
    RPAREN          reduce using rule 70 (array -> LBRACKET mdata RBRACKET .)


state 112

    (66) mdata -> data COMMA . mdata
    (65) mdata -> . data
    (66) mdata -> . data COMMA mdata
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (74) tuple -> . LPAREN mdata RPAREN

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 73
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 75
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    LPAREN          shift and go to state 79

    data                           shift and go to state 71
    mdata                          shift and go to state 167
    tuple                          shift and go to state 78

state 113

    (74) tuple -> LPAREN mdata . RPAREN

    RPAREN          shift and go to state 168


state 114

    (97) for_str -> KW_FOR VARIABLE KW_IN . range LBRACE main_rule RBRACE
    (98) for_str -> KW_FOR VARIABLE KW_IN . VARIABLE LBRACE main_rule RBRACE
    (100) range -> . INTEGER DOT DOT INTEGER
    (101) range -> . VARIABLE DOT DOT VARIABLE

    VARIABLE        shift and go to state 169
    INTEGER         shift and go to state 171

    range                          shift and go to state 170

state 115

    (99) for_str_tagged -> label COLON for_str .

    KW_PRINT        reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    KW_LET          reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    KW_FN           reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    VARIABLE        reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    LPAREN          reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    LBRACKET        reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    KW_FOR          reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    KW_IF           reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    KW_ELSE         reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    KW_WHILE        reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    INTEGER         reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    FLOAT           reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    KW_CONST        reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    QUOTE           reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    $end            reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    RBRACE          reduce using rule 99 (for_str_tagged -> label COLON for_str .)
    KW_RETURN       reduce using rule 99 (for_str_tagged -> label COLON for_str .)


state 116

    (123) if -> KW_IF conditional LBRACE . main_rule RBRACE
    (1) main_rule -> . father_rule
    (2) main_rule -> . father_rule main_rule
    (3) father_rule -> . print
    (4) father_rule -> . dvariable
    (5) father_rule -> . function
    (6) father_rule -> . variables
    (7) father_rule -> . control_str
    (8) father_rule -> . expression
    (9) father_rule -> . void
    (10) father_rule -> . data_str
    (11) father_rule -> . array
    (12) father_rule -> . linkedlist_methods
    (13) father_rule -> . hashmap_methods
    (14) father_rule -> . initialization
    (15) father_rule -> . input
    (16) father_rule -> . assignation
    (17) father_rule -> . declare_data_type
    (67) print -> . KW_PRINT LPAREN CADENA RPAREN SEMI
    (68) dvariable -> . KW_LET VARIABLE SEMI
    (90) function -> . KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> . KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE
    (71) variables -> . VARIABLE
    (72) variables -> . VARIABLE COMMA variables
    (91) control_str -> . for_str
    (92) control_str -> . for_str_tagged
    (93) control_str -> . if
    (94) control_str -> . else
    (95) control_str -> . else_if
    (96) control_str -> . while
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (114) void -> .
    (103) data_str -> . array
    (104) data_str -> . hashmap
    (105) data_str -> . linkedlist
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET
    (119) linkedlist_methods -> . VARIABLE linkedlist_push
    (120) linkedlist_methods -> . VARIABLE linkedlist_remove
    (110) hashmap_methods -> . VARIABLE hashmap_insert
    (111) hashmap_methods -> . VARIABLE hashmap_remove
    (75) initialization -> . let_initialization SEMI
    (76) initialization -> . const_initialization SEMI
    (77) initialization -> . data_str SEMI
    (78) initialization -> . input_init SEMI
    (132) input -> . VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
    (133) assignation -> . VARIABLE assign_operators number
    (134) declare_data_type -> . KW_LET VARIABLE COLON data_type SEMI
    (97) for_str -> . KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> . KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE
    (99) for_str_tagged -> . label COLON for_str
    (123) if -> . KW_IF conditional LBRACE main_rule RBRACE
    (124) else -> . KW_ELSE LBRACE main_rule RBRACE
    (125) else_if -> . KW_ELSE KW_IF conditional LBRACE main_rule RBRACE
    (73) while -> . KW_WHILE LPAREN VARIABLE
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE
    (106) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (107) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (109) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (115) linkedlist -> . KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (116) linkedlist -> . KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (117) linkedlist -> . KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (118) linkedlist -> . KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> . KW_LET VARIABLE EQUALS data
    (80) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS data
    (81) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS data
    (82) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS data
    (83) let_initialization -> . KW_LET VARIABLE EQUALS expression_var
    (84) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS expression_var
    (85) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS expression_var
    (86) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var
    (87) const_initialization -> . KW_CONST VARIABLE COLON data_type EQUALS data
    (131) input_init -> . KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN
    (102) label -> . QUOTE VARIABLE

  ! shift/reduce conflict for KW_PRINT resolved as shift
  ! shift/reduce conflict for KW_LET resolved as shift
  ! shift/reduce conflict for KW_FN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for KW_FOR resolved as shift
  ! shift/reduce conflict for KW_IF resolved as shift
  ! shift/reduce conflict for KW_ELSE resolved as shift
  ! shift/reduce conflict for KW_WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for KW_CONST resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
    KW_PRINT        shift and go to state 18
    KW_LET          shift and go to state 20
    KW_FN           shift and go to state 22
    VARIABLE        shift and go to state 21
    LPAREN          shift and go to state 19
    RBRACE          reduce using rule 114 (void -> .)
    LBRACKET        shift and go to state 32
    KW_FOR          shift and go to state 36
    KW_IF           shift and go to state 38
    KW_ELSE         shift and go to state 39
    KW_WHILE        shift and go to state 40
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    KW_CONST        shift and go to state 43
    QUOTE           shift and go to state 44

  ! KW_PRINT        [ reduce using rule 114 (void -> .) ]
  ! KW_LET          [ reduce using rule 114 (void -> .) ]
  ! KW_FN           [ reduce using rule 114 (void -> .) ]
  ! VARIABLE        [ reduce using rule 114 (void -> .) ]
  ! LPAREN          [ reduce using rule 114 (void -> .) ]
  ! LBRACKET        [ reduce using rule 114 (void -> .) ]
  ! KW_FOR          [ reduce using rule 114 (void -> .) ]
  ! KW_IF           [ reduce using rule 114 (void -> .) ]
  ! KW_ELSE         [ reduce using rule 114 (void -> .) ]
  ! KW_WHILE        [ reduce using rule 114 (void -> .) ]
  ! INTEGER         [ reduce using rule 114 (void -> .) ]
  ! FLOAT           [ reduce using rule 114 (void -> .) ]
  ! KW_CONST        [ reduce using rule 114 (void -> .) ]
  ! QUOTE           [ reduce using rule 114 (void -> .) ]

    main_rule                      shift and go to state 172
    father_rule                    shift and go to state 2
    print                          shift and go to state 3
    dvariable                      shift and go to state 4
    function                       shift and go to state 5
    variables                      shift and go to state 6
    control_str                    shift and go to state 7
    expression                     shift and go to state 8
    void                           shift and go to state 9
    data_str                       shift and go to state 10
    array                          shift and go to state 11
    linkedlist_methods             shift and go to state 12
    hashmap_methods                shift and go to state 13
    initialization                 shift and go to state 14
    input                          shift and go to state 15
    assignation                    shift and go to state 16
    declare_data_type              shift and go to state 17
    for_str                        shift and go to state 23
    for_str_tagged                 shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    else_if                        shift and go to state 27
    while                          shift and go to state 28
    number                         shift and go to state 29
    hashmap                        shift and go to state 30
    linkedlist                     shift and go to state 31
    let_initialization             shift and go to state 33
    const_initialization           shift and go to state 34
    input_init                     shift and go to state 35
    label                          shift and go to state 37

state 117

    (62) conditional -> VARIABLE comparator . data
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (74) tuple -> . LPAREN mdata RPAREN

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 73
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 75
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    LPAREN          shift and go to state 79

    data                           shift and go to state 173
    tuple                          shift and go to state 78

state 118

    (61) and -> VARIABLE LAND . VARIABLE

    VARIABLE        shift and go to state 174


state 119

    (55) comparator -> EQ .

    CADENA          reduce using rule 55 (comparator -> EQ .)
    INTEGER         reduce using rule 55 (comparator -> EQ .)
    CHAR            reduce using rule 55 (comparator -> EQ .)
    FLOAT           reduce using rule 55 (comparator -> EQ .)
    KW_FALSE        reduce using rule 55 (comparator -> EQ .)
    KW_TRUE         reduce using rule 55 (comparator -> EQ .)
    LPAREN          reduce using rule 55 (comparator -> EQ .)


state 120

    (56) comparator -> NE .

    CADENA          reduce using rule 56 (comparator -> NE .)
    INTEGER         reduce using rule 56 (comparator -> NE .)
    CHAR            reduce using rule 56 (comparator -> NE .)
    FLOAT           reduce using rule 56 (comparator -> NE .)
    KW_FALSE        reduce using rule 56 (comparator -> NE .)
    KW_TRUE         reduce using rule 56 (comparator -> NE .)
    LPAREN          reduce using rule 56 (comparator -> NE .)


state 121

    (57) comparator -> GE .

    CADENA          reduce using rule 57 (comparator -> GE .)
    INTEGER         reduce using rule 57 (comparator -> GE .)
    CHAR            reduce using rule 57 (comparator -> GE .)
    FLOAT           reduce using rule 57 (comparator -> GE .)
    KW_FALSE        reduce using rule 57 (comparator -> GE .)
    KW_TRUE         reduce using rule 57 (comparator -> GE .)
    LPAREN          reduce using rule 57 (comparator -> GE .)


state 122

    (58) comparator -> LE .

    CADENA          reduce using rule 58 (comparator -> LE .)
    INTEGER         reduce using rule 58 (comparator -> LE .)
    CHAR            reduce using rule 58 (comparator -> LE .)
    FLOAT           reduce using rule 58 (comparator -> LE .)
    KW_FALSE        reduce using rule 58 (comparator -> LE .)
    KW_TRUE         reduce using rule 58 (comparator -> LE .)
    LPAREN          reduce using rule 58 (comparator -> LE .)


state 123

    (59) comparator -> GT .

    CADENA          reduce using rule 59 (comparator -> GT .)
    INTEGER         reduce using rule 59 (comparator -> GT .)
    CHAR            reduce using rule 59 (comparator -> GT .)
    FLOAT           reduce using rule 59 (comparator -> GT .)
    KW_FALSE        reduce using rule 59 (comparator -> GT .)
    KW_TRUE         reduce using rule 59 (comparator -> GT .)
    LPAREN          reduce using rule 59 (comparator -> GT .)


state 124

    (60) comparator -> LT .

    CADENA          reduce using rule 60 (comparator -> LT .)
    INTEGER         reduce using rule 60 (comparator -> LT .)
    CHAR            reduce using rule 60 (comparator -> LT .)
    FLOAT           reduce using rule 60 (comparator -> LT .)
    KW_FALSE        reduce using rule 60 (comparator -> LT .)
    KW_TRUE         reduce using rule 60 (comparator -> LT .)
    LPAREN          reduce using rule 60 (comparator -> LT .)


state 125

    (63) conditional -> and comparator . data
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (74) tuple -> . LPAREN mdata RPAREN

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 73
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 75
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    LPAREN          shift and go to state 79

    data                           shift and go to state 175
    tuple                          shift and go to state 78

state 126

    (124) else -> KW_ELSE LBRACE main_rule . RBRACE

    RBRACE          shift and go to state 176


state 127

    (125) else_if -> KW_ELSE KW_IF conditional . LBRACE main_rule RBRACE

    LBRACE          shift and go to state 177


state 128

    (73) while -> KW_WHILE LPAREN VARIABLE .

    KW_PRINT        reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    KW_LET          reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    KW_FN           reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    VARIABLE        reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    LPAREN          reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    LBRACKET        reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    KW_FOR          reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    KW_IF           reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    KW_ELSE         reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    KW_WHILE        reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    INTEGER         reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    FLOAT           reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    KW_CONST        reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    QUOTE           reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    $end            reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    RBRACE          reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)
    KW_RETURN       reduce using rule 73 (while -> KW_WHILE LPAREN VARIABLE .)


state 129

    (87) const_initialization -> KW_CONST VARIABLE COLON . data_type EQUALS data
    (27) data_type -> . UNSIG_INT_8
    (28) data_type -> . UNSIG_INT_16
    (29) data_type -> . UNSIG_INT_32
    (30) data_type -> . UNSIG_INT_64
    (31) data_type -> . UNSIG_INT_128
    (32) data_type -> . SIG_INT_8
    (33) data_type -> . SIG_INT_16
    (34) data_type -> . SIG_INT_32
    (35) data_type -> . SIG_INT_64
    (36) data_type -> . SIG_INT_128
    (37) data_type -> . FLOAT_32
    (38) data_type -> . FLOAT_64
    (39) data_type -> . KW_BOOLEAN
    (40) data_type -> . KW_STRING

    UNSIG_INT_8     shift and go to state 144
    UNSIG_INT_16    shift and go to state 145
    UNSIG_INT_32    shift and go to state 146
    UNSIG_INT_64    shift and go to state 147
    UNSIG_INT_128   shift and go to state 148
    SIG_INT_8       shift and go to state 149
    SIG_INT_16      shift and go to state 150
    SIG_INT_32      shift and go to state 151
    SIG_INT_64      shift and go to state 152
    SIG_INT_128     shift and go to state 153
    FLOAT_32        shift and go to state 154
    FLOAT_64        shift and go to state 155
    KW_BOOLEAN      shift and go to state 156
    KW_STRING       shift and go to state 157

    data_type                      shift and go to state 178

state 130

    (67) print -> KW_PRINT LPAREN CADENA RPAREN . SEMI

    SEMI            shift and go to state 179


state 131

    (128) expression_var -> VARIABLE .
    (26) number -> VARIABLE .

  ! reduce/reduce conflict for SEMI resolved using rule 26 (number -> VARIABLE .)
    PLUS            reduce using rule 26 (number -> VARIABLE .)
    MINUS           reduce using rule 26 (number -> VARIABLE .)
    TIMES           reduce using rule 26 (number -> VARIABLE .)
    DIVIDE          reduce using rule 26 (number -> VARIABLE .)
    SEMI            reduce using rule 26 (number -> VARIABLE .)

  ! SEMI            [ reduce using rule 128 (expression_var -> VARIABLE .) ]


state 132

    (69) array -> KW_LET VARIABLE EQUALS LBRACKET . mdata RBRACKET
    (65) mdata -> . data
    (66) mdata -> . data COMMA mdata
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (74) tuple -> . LPAREN mdata RPAREN

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 73
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 75
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    LPAREN          shift and go to state 79

    mdata                          shift and go to state 180
    data                           shift and go to state 71
    tuple                          shift and go to state 78

state 133

    (106) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP . COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP . COLON COLON KW_FROM LPAREN array RPAREN

    COLON           shift and go to state 181


state 134

    (74) tuple -> LPAREN . mdata RPAREN
    (22) expression -> LPAREN . expression RPAREN
    (65) mdata -> . data
    (66) mdata -> . data COMMA mdata
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE
    (74) tuple -> . LPAREN mdata RPAREN

    LPAREN          shift and go to state 182
    CADENA          shift and go to state 72
    INTEGER         shift and go to state 139
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 140
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    VARIABLE        shift and go to state 53

    mdata                          shift and go to state 113
    expression                     shift and go to state 52
    data                           shift and go to state 71
    number                         shift and go to state 29
    tuple                          shift and go to state 78

state 135

    (117) linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST . COLON COLON KW_FROM LPAREN array RPAREN

    COLON           shift and go to state 183


state 136

    (79) let_initialization -> KW_LET VARIABLE EQUALS data .

    SEMI            reduce using rule 79 (let_initialization -> KW_LET VARIABLE EQUALS data .)


state 137

    (83) let_initialization -> KW_LET VARIABLE EQUALS expression_var .

    SEMI            reduce using rule 83 (let_initialization -> KW_LET VARIABLE EQUALS expression_var .)


state 138

    (131) input_init -> KW_LET VARIABLE EQUALS KW_IO . COLON COLON KW_STDIN LPAREN RPAREN

    COLON           shift and go to state 184


state 139

    (48) data -> INTEGER .
    (24) number -> INTEGER .

  ! reduce/reduce conflict for SEMI resolved using rule 24 (number -> INTEGER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 24 (number -> INTEGER .)
    COMMA           reduce using rule 48 (data -> INTEGER .)
    PLUS            reduce using rule 24 (number -> INTEGER .)
    MINUS           reduce using rule 24 (number -> INTEGER .)
    TIMES           reduce using rule 24 (number -> INTEGER .)
    DIVIDE          reduce using rule 24 (number -> INTEGER .)
    SEMI            reduce using rule 24 (number -> INTEGER .)
    RPAREN          reduce using rule 24 (number -> INTEGER .)

  ! SEMI            [ reduce using rule 48 (data -> INTEGER .) ]
  ! RPAREN          [ reduce using rule 48 (data -> INTEGER .) ]


state 140

    (50) data -> FLOAT .
    (25) number -> FLOAT .

  ! reduce/reduce conflict for SEMI resolved using rule 25 (number -> FLOAT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 25 (number -> FLOAT .)
    COMMA           reduce using rule 50 (data -> FLOAT .)
    PLUS            reduce using rule 25 (number -> FLOAT .)
    MINUS           reduce using rule 25 (number -> FLOAT .)
    TIMES           reduce using rule 25 (number -> FLOAT .)
    DIVIDE          reduce using rule 25 (number -> FLOAT .)
    SEMI            reduce using rule 25 (number -> FLOAT .)
    RPAREN          reduce using rule 25 (number -> FLOAT .)

  ! SEMI            [ reduce using rule 50 (data -> FLOAT .) ]
  ! RPAREN          [ reduce using rule 50 (data -> FLOAT .) ]


state 141

    (127) expression_var -> expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression

    SEMI            reduce using rule 127 (expression_var -> expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49


state 142

    (134) declare_data_type -> KW_LET VARIABLE COLON data_type . SEMI
    (80) let_initialization -> KW_LET VARIABLE COLON data_type . EQUALS data
    (84) let_initialization -> KW_LET VARIABLE COLON data_type . EQUALS expression_var

    SEMI            shift and go to state 185
    EQUALS          shift and go to state 186


state 143

    (115) linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST . LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN

    LT              shift and go to state 187


state 144

    (27) data_type -> UNSIG_INT_8 .

    SEMI            reduce using rule 27 (data_type -> UNSIG_INT_8 .)
    EQUALS          reduce using rule 27 (data_type -> UNSIG_INT_8 .)
    GT              reduce using rule 27 (data_type -> UNSIG_INT_8 .)
    LBRACE          reduce using rule 27 (data_type -> UNSIG_INT_8 .)


state 145

    (28) data_type -> UNSIG_INT_16 .

    SEMI            reduce using rule 28 (data_type -> UNSIG_INT_16 .)
    EQUALS          reduce using rule 28 (data_type -> UNSIG_INT_16 .)
    GT              reduce using rule 28 (data_type -> UNSIG_INT_16 .)
    LBRACE          reduce using rule 28 (data_type -> UNSIG_INT_16 .)


state 146

    (29) data_type -> UNSIG_INT_32 .

    SEMI            reduce using rule 29 (data_type -> UNSIG_INT_32 .)
    EQUALS          reduce using rule 29 (data_type -> UNSIG_INT_32 .)
    GT              reduce using rule 29 (data_type -> UNSIG_INT_32 .)
    LBRACE          reduce using rule 29 (data_type -> UNSIG_INT_32 .)


state 147

    (30) data_type -> UNSIG_INT_64 .

    SEMI            reduce using rule 30 (data_type -> UNSIG_INT_64 .)
    EQUALS          reduce using rule 30 (data_type -> UNSIG_INT_64 .)
    GT              reduce using rule 30 (data_type -> UNSIG_INT_64 .)
    LBRACE          reduce using rule 30 (data_type -> UNSIG_INT_64 .)


state 148

    (31) data_type -> UNSIG_INT_128 .

    SEMI            reduce using rule 31 (data_type -> UNSIG_INT_128 .)
    EQUALS          reduce using rule 31 (data_type -> UNSIG_INT_128 .)
    GT              reduce using rule 31 (data_type -> UNSIG_INT_128 .)
    LBRACE          reduce using rule 31 (data_type -> UNSIG_INT_128 .)


state 149

    (32) data_type -> SIG_INT_8 .

    SEMI            reduce using rule 32 (data_type -> SIG_INT_8 .)
    EQUALS          reduce using rule 32 (data_type -> SIG_INT_8 .)
    GT              reduce using rule 32 (data_type -> SIG_INT_8 .)
    LBRACE          reduce using rule 32 (data_type -> SIG_INT_8 .)


state 150

    (33) data_type -> SIG_INT_16 .

    SEMI            reduce using rule 33 (data_type -> SIG_INT_16 .)
    EQUALS          reduce using rule 33 (data_type -> SIG_INT_16 .)
    GT              reduce using rule 33 (data_type -> SIG_INT_16 .)
    LBRACE          reduce using rule 33 (data_type -> SIG_INT_16 .)


state 151

    (34) data_type -> SIG_INT_32 .

    SEMI            reduce using rule 34 (data_type -> SIG_INT_32 .)
    EQUALS          reduce using rule 34 (data_type -> SIG_INT_32 .)
    GT              reduce using rule 34 (data_type -> SIG_INT_32 .)
    LBRACE          reduce using rule 34 (data_type -> SIG_INT_32 .)


state 152

    (35) data_type -> SIG_INT_64 .

    SEMI            reduce using rule 35 (data_type -> SIG_INT_64 .)
    EQUALS          reduce using rule 35 (data_type -> SIG_INT_64 .)
    GT              reduce using rule 35 (data_type -> SIG_INT_64 .)
    LBRACE          reduce using rule 35 (data_type -> SIG_INT_64 .)


state 153

    (36) data_type -> SIG_INT_128 .

    SEMI            reduce using rule 36 (data_type -> SIG_INT_128 .)
    EQUALS          reduce using rule 36 (data_type -> SIG_INT_128 .)
    GT              reduce using rule 36 (data_type -> SIG_INT_128 .)
    LBRACE          reduce using rule 36 (data_type -> SIG_INT_128 .)


state 154

    (37) data_type -> FLOAT_32 .

    SEMI            reduce using rule 37 (data_type -> FLOAT_32 .)
    EQUALS          reduce using rule 37 (data_type -> FLOAT_32 .)
    GT              reduce using rule 37 (data_type -> FLOAT_32 .)
    LBRACE          reduce using rule 37 (data_type -> FLOAT_32 .)


state 155

    (38) data_type -> FLOAT_64 .

    SEMI            reduce using rule 38 (data_type -> FLOAT_64 .)
    EQUALS          reduce using rule 38 (data_type -> FLOAT_64 .)
    GT              reduce using rule 38 (data_type -> FLOAT_64 .)
    LBRACE          reduce using rule 38 (data_type -> FLOAT_64 .)


state 156

    (39) data_type -> KW_BOOLEAN .

    SEMI            reduce using rule 39 (data_type -> KW_BOOLEAN .)
    EQUALS          reduce using rule 39 (data_type -> KW_BOOLEAN .)
    GT              reduce using rule 39 (data_type -> KW_BOOLEAN .)
    LBRACE          reduce using rule 39 (data_type -> KW_BOOLEAN .)


state 157

    (40) data_type -> KW_STRING .

    SEMI            reduce using rule 40 (data_type -> KW_STRING .)
    EQUALS          reduce using rule 40 (data_type -> KW_STRING .)
    GT              reduce using rule 40 (data_type -> KW_STRING .)
    LBRACE          reduce using rule 40 (data_type -> KW_STRING .)


state 158

    (107) hashmap -> KW_LET KW_MUT VARIABLE EQUALS . KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (109) hashmap -> KW_LET KW_MUT VARIABLE EQUALS . KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (118) linkedlist -> KW_LET KW_MUT VARIABLE EQUALS . KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (81) let_initialization -> KW_LET KW_MUT VARIABLE EQUALS . data
    (85) let_initialization -> KW_LET KW_MUT VARIABLE EQUALS . expression_var
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (127) expression_var -> . expression
    (128) expression_var -> . VARIABLE
    (74) tuple -> . LPAREN mdata RPAREN
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE

    KW_HASHMAP      shift and go to state 188
    KW_LINKEDLIST   shift and go to state 189
    CADENA          shift and go to state 72
    INTEGER         shift and go to state 139
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 140
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    VARIABLE        shift and go to state 131
    LPAREN          shift and go to state 134

    data                           shift and go to state 190
    expression_var                 shift and go to state 191
    tuple                          shift and go to state 78
    expression                     shift and go to state 141
    number                         shift and go to state 29

state 159

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON . KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (82) let_initialization -> KW_LET KW_MUT VARIABLE COLON . data_type EQUALS data
    (86) let_initialization -> KW_LET KW_MUT VARIABLE COLON . data_type EQUALS expression_var
    (27) data_type -> . UNSIG_INT_8
    (28) data_type -> . UNSIG_INT_16
    (29) data_type -> . UNSIG_INT_32
    (30) data_type -> . UNSIG_INT_64
    (31) data_type -> . UNSIG_INT_128
    (32) data_type -> . SIG_INT_8
    (33) data_type -> . SIG_INT_16
    (34) data_type -> . SIG_INT_32
    (35) data_type -> . SIG_INT_64
    (36) data_type -> . SIG_INT_128
    (37) data_type -> . FLOAT_32
    (38) data_type -> . FLOAT_64
    (39) data_type -> . KW_BOOLEAN
    (40) data_type -> . KW_STRING

    KW_LINKEDLIST   shift and go to state 192
    UNSIG_INT_8     shift and go to state 144
    UNSIG_INT_16    shift and go to state 145
    UNSIG_INT_32    shift and go to state 146
    UNSIG_INT_64    shift and go to state 147
    UNSIG_INT_128   shift and go to state 148
    SIG_INT_8       shift and go to state 149
    SIG_INT_16      shift and go to state 150
    SIG_INT_32      shift and go to state 151
    SIG_INT_64      shift and go to state 152
    SIG_INT_128     shift and go to state 153
    FLOAT_32        shift and go to state 154
    FLOAT_64        shift and go to state 155
    KW_BOOLEAN      shift and go to state 156
    KW_STRING       shift and go to state 157

    data_type                      shift and go to state 193

state 160

    (132) input -> VARIABLE DOT KW_READ_LINE LPAREN . AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI

    AND             shift and go to state 194


state 161

    (121) linkedlist_push -> DOT KW_PUSH_BACK LPAREN . data RPAREN SEMI
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (74) tuple -> . LPAREN mdata RPAREN

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 73
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 75
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    LPAREN          shift and go to state 79

    data                           shift and go to state 195
    tuple                          shift and go to state 78

state 162

    (122) linkedlist_remove -> DOT KW_REMOVE LPAREN . INTEGER RPAREN SEMI
    (113) hashmap_remove -> DOT KW_REMOVE LPAREN . AND data RPAREN SEMI

    INTEGER         shift and go to state 196
    AND             shift and go to state 197


state 163

    (112) hashmap_insert -> DOT KW_INSERT LPAREN . mdata RPAREN SEMI
    (65) mdata -> . data
    (66) mdata -> . data COMMA mdata
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (74) tuple -> . LPAREN mdata RPAREN

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 73
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 75
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    LPAREN          shift and go to state 79

    mdata                          shift and go to state 198
    data                           shift and go to state 71
    tuple                          shift and go to state 78

state 164

    (90) function -> KW_FN VARIABLE LPAREN arguments . RPAREN LBRACE main_rule RBRACE
    (126) function -> KW_FN VARIABLE LPAREN arguments . RPAREN MINUS GT data_type LBRACE return RBRACE

    RPAREN          shift and go to state 199


state 165

    (88) arguments -> void .

    RPAREN          reduce using rule 88 (arguments -> void .)


state 166

    (89) arguments -> variables .

    RPAREN          reduce using rule 89 (arguments -> variables .)


state 167

    (66) mdata -> data COMMA mdata .

    RBRACKET        reduce using rule 66 (mdata -> data COMMA mdata .)
    RPAREN          reduce using rule 66 (mdata -> data COMMA mdata .)


state 168

    (74) tuple -> LPAREN mdata RPAREN .

    COMMA           reduce using rule 74 (tuple -> LPAREN mdata RPAREN .)
    RBRACKET        reduce using rule 74 (tuple -> LPAREN mdata RPAREN .)
    RPAREN          reduce using rule 74 (tuple -> LPAREN mdata RPAREN .)
    SEMI            reduce using rule 74 (tuple -> LPAREN mdata RPAREN .)
    LBRACE          reduce using rule 74 (tuple -> LPAREN mdata RPAREN .)


state 169

    (98) for_str -> KW_FOR VARIABLE KW_IN VARIABLE . LBRACE main_rule RBRACE
    (101) range -> VARIABLE . DOT DOT VARIABLE

    LBRACE          shift and go to state 200
    DOT             shift and go to state 201


state 170

    (97) for_str -> KW_FOR VARIABLE KW_IN range . LBRACE main_rule RBRACE

    LBRACE          shift and go to state 202


state 171

    (100) range -> INTEGER . DOT DOT INTEGER

    DOT             shift and go to state 203


state 172

    (123) if -> KW_IF conditional LBRACE main_rule . RBRACE

    RBRACE          shift and go to state 204


state 173

    (62) conditional -> VARIABLE comparator data .

    LBRACE          reduce using rule 62 (conditional -> VARIABLE comparator data .)


state 174

    (61) and -> VARIABLE LAND VARIABLE .

    EQ              reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    NE              reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    GE              reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    LE              reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    GT              reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    LT              reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    CADENA          reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    INTEGER         reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    CHAR            reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    FLOAT           reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    KW_FALSE        reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    KW_TRUE         reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)
    LPAREN          reduce using rule 61 (and -> VARIABLE LAND VARIABLE .)


state 175

    (63) conditional -> and comparator data .

    LBRACE          reduce using rule 63 (conditional -> and comparator data .)


state 176

    (124) else -> KW_ELSE LBRACE main_rule RBRACE .

    KW_PRINT        reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    KW_LET          reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    KW_FN           reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    VARIABLE        reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    LPAREN          reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    LBRACKET        reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    KW_FOR          reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    KW_IF           reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    KW_ELSE         reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    KW_WHILE        reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    INTEGER         reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    FLOAT           reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    KW_CONST        reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    QUOTE           reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    $end            reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    RBRACE          reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)
    KW_RETURN       reduce using rule 124 (else -> KW_ELSE LBRACE main_rule RBRACE .)


state 177

    (125) else_if -> KW_ELSE KW_IF conditional LBRACE . main_rule RBRACE
    (1) main_rule -> . father_rule
    (2) main_rule -> . father_rule main_rule
    (3) father_rule -> . print
    (4) father_rule -> . dvariable
    (5) father_rule -> . function
    (6) father_rule -> . variables
    (7) father_rule -> . control_str
    (8) father_rule -> . expression
    (9) father_rule -> . void
    (10) father_rule -> . data_str
    (11) father_rule -> . array
    (12) father_rule -> . linkedlist_methods
    (13) father_rule -> . hashmap_methods
    (14) father_rule -> . initialization
    (15) father_rule -> . input
    (16) father_rule -> . assignation
    (17) father_rule -> . declare_data_type
    (67) print -> . KW_PRINT LPAREN CADENA RPAREN SEMI
    (68) dvariable -> . KW_LET VARIABLE SEMI
    (90) function -> . KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> . KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE
    (71) variables -> . VARIABLE
    (72) variables -> . VARIABLE COMMA variables
    (91) control_str -> . for_str
    (92) control_str -> . for_str_tagged
    (93) control_str -> . if
    (94) control_str -> . else
    (95) control_str -> . else_if
    (96) control_str -> . while
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (114) void -> .
    (103) data_str -> . array
    (104) data_str -> . hashmap
    (105) data_str -> . linkedlist
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET
    (119) linkedlist_methods -> . VARIABLE linkedlist_push
    (120) linkedlist_methods -> . VARIABLE linkedlist_remove
    (110) hashmap_methods -> . VARIABLE hashmap_insert
    (111) hashmap_methods -> . VARIABLE hashmap_remove
    (75) initialization -> . let_initialization SEMI
    (76) initialization -> . const_initialization SEMI
    (77) initialization -> . data_str SEMI
    (78) initialization -> . input_init SEMI
    (132) input -> . VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
    (133) assignation -> . VARIABLE assign_operators number
    (134) declare_data_type -> . KW_LET VARIABLE COLON data_type SEMI
    (97) for_str -> . KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> . KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE
    (99) for_str_tagged -> . label COLON for_str
    (123) if -> . KW_IF conditional LBRACE main_rule RBRACE
    (124) else -> . KW_ELSE LBRACE main_rule RBRACE
    (125) else_if -> . KW_ELSE KW_IF conditional LBRACE main_rule RBRACE
    (73) while -> . KW_WHILE LPAREN VARIABLE
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE
    (106) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (107) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (109) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (115) linkedlist -> . KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (116) linkedlist -> . KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (117) linkedlist -> . KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (118) linkedlist -> . KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> . KW_LET VARIABLE EQUALS data
    (80) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS data
    (81) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS data
    (82) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS data
    (83) let_initialization -> . KW_LET VARIABLE EQUALS expression_var
    (84) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS expression_var
    (85) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS expression_var
    (86) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var
    (87) const_initialization -> . KW_CONST VARIABLE COLON data_type EQUALS data
    (131) input_init -> . KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN
    (102) label -> . QUOTE VARIABLE

  ! shift/reduce conflict for KW_PRINT resolved as shift
  ! shift/reduce conflict for KW_LET resolved as shift
  ! shift/reduce conflict for KW_FN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for KW_FOR resolved as shift
  ! shift/reduce conflict for KW_IF resolved as shift
  ! shift/reduce conflict for KW_ELSE resolved as shift
  ! shift/reduce conflict for KW_WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for KW_CONST resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
    KW_PRINT        shift and go to state 18
    KW_LET          shift and go to state 20
    KW_FN           shift and go to state 22
    VARIABLE        shift and go to state 21
    LPAREN          shift and go to state 19
    RBRACE          reduce using rule 114 (void -> .)
    LBRACKET        shift and go to state 32
    KW_FOR          shift and go to state 36
    KW_IF           shift and go to state 38
    KW_ELSE         shift and go to state 39
    KW_WHILE        shift and go to state 40
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    KW_CONST        shift and go to state 43
    QUOTE           shift and go to state 44

  ! KW_PRINT        [ reduce using rule 114 (void -> .) ]
  ! KW_LET          [ reduce using rule 114 (void -> .) ]
  ! KW_FN           [ reduce using rule 114 (void -> .) ]
  ! VARIABLE        [ reduce using rule 114 (void -> .) ]
  ! LPAREN          [ reduce using rule 114 (void -> .) ]
  ! LBRACKET        [ reduce using rule 114 (void -> .) ]
  ! KW_FOR          [ reduce using rule 114 (void -> .) ]
  ! KW_IF           [ reduce using rule 114 (void -> .) ]
  ! KW_ELSE         [ reduce using rule 114 (void -> .) ]
  ! KW_WHILE        [ reduce using rule 114 (void -> .) ]
  ! INTEGER         [ reduce using rule 114 (void -> .) ]
  ! FLOAT           [ reduce using rule 114 (void -> .) ]
  ! KW_CONST        [ reduce using rule 114 (void -> .) ]
  ! QUOTE           [ reduce using rule 114 (void -> .) ]

    main_rule                      shift and go to state 205
    father_rule                    shift and go to state 2
    print                          shift and go to state 3
    dvariable                      shift and go to state 4
    function                       shift and go to state 5
    variables                      shift and go to state 6
    control_str                    shift and go to state 7
    expression                     shift and go to state 8
    void                           shift and go to state 9
    data_str                       shift and go to state 10
    array                          shift and go to state 11
    linkedlist_methods             shift and go to state 12
    hashmap_methods                shift and go to state 13
    initialization                 shift and go to state 14
    input                          shift and go to state 15
    assignation                    shift and go to state 16
    declare_data_type              shift and go to state 17
    for_str                        shift and go to state 23
    for_str_tagged                 shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    else_if                        shift and go to state 27
    while                          shift and go to state 28
    number                         shift and go to state 29
    hashmap                        shift and go to state 30
    linkedlist                     shift and go to state 31
    let_initialization             shift and go to state 33
    const_initialization           shift and go to state 34
    input_init                     shift and go to state 35
    label                          shift and go to state 37

state 178

    (87) const_initialization -> KW_CONST VARIABLE COLON data_type . EQUALS data

    EQUALS          shift and go to state 206


state 179

    (67) print -> KW_PRINT LPAREN CADENA RPAREN SEMI .

    KW_PRINT        reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    KW_LET          reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    KW_FN           reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    LBRACKET        reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    KW_FOR          reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    KW_IF           reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    KW_ELSE         reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    KW_WHILE        reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    INTEGER         reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    FLOAT           reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    KW_CONST        reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    QUOTE           reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    $end            reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)
    KW_RETURN       reduce using rule 67 (print -> KW_PRINT LPAREN CADENA RPAREN SEMI .)


state 180

    (69) array -> KW_LET VARIABLE EQUALS LBRACKET mdata . RBRACKET

    RBRACKET        shift and go to state 207


state 181

    (106) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON . COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON . COLON KW_FROM LPAREN array RPAREN

    COLON           shift and go to state 208


state 182

    (22) expression -> LPAREN . expression RPAREN
    (74) tuple -> LPAREN . mdata RPAREN
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (65) mdata -> . data
    (66) mdata -> . data COMMA mdata
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (74) tuple -> . LPAREN mdata RPAREN

    LPAREN          shift and go to state 182
    INTEGER         shift and go to state 209
    FLOAT           shift and go to state 210
    VARIABLE        shift and go to state 53
    CADENA          shift and go to state 72
    CHAR            shift and go to state 74
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77

    expression                     shift and go to state 52
    mdata                          shift and go to state 113
    number                         shift and go to state 29
    data                           shift and go to state 71
    tuple                          shift and go to state 78

state 183

    (117) linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON . COLON KW_FROM LPAREN array RPAREN

    COLON           shift and go to state 211


state 184

    (131) input_init -> KW_LET VARIABLE EQUALS KW_IO COLON . COLON KW_STDIN LPAREN RPAREN

    COLON           shift and go to state 212


state 185

    (134) declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .

    KW_PRINT        reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    KW_LET          reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    KW_FN           reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    VARIABLE        reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    LPAREN          reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    LBRACKET        reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    KW_FOR          reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    KW_IF           reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    KW_ELSE         reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    KW_WHILE        reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    INTEGER         reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    FLOAT           reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    KW_CONST        reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    QUOTE           reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    $end            reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    RBRACE          reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)
    KW_RETURN       reduce using rule 134 (declare_data_type -> KW_LET VARIABLE COLON data_type SEMI .)


state 186

    (80) let_initialization -> KW_LET VARIABLE COLON data_type EQUALS . data
    (84) let_initialization -> KW_LET VARIABLE COLON data_type EQUALS . expression_var
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (127) expression_var -> . expression
    (128) expression_var -> . VARIABLE
    (74) tuple -> . LPAREN mdata RPAREN
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 139
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 140
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    VARIABLE        shift and go to state 131
    LPAREN          shift and go to state 134

    data                           shift and go to state 213
    expression_var                 shift and go to state 214
    tuple                          shift and go to state 78
    expression                     shift and go to state 141
    number                         shift and go to state 29

state 187

    (115) linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT . data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (27) data_type -> . UNSIG_INT_8
    (28) data_type -> . UNSIG_INT_16
    (29) data_type -> . UNSIG_INT_32
    (30) data_type -> . UNSIG_INT_64
    (31) data_type -> . UNSIG_INT_128
    (32) data_type -> . SIG_INT_8
    (33) data_type -> . SIG_INT_16
    (34) data_type -> . SIG_INT_32
    (35) data_type -> . SIG_INT_64
    (36) data_type -> . SIG_INT_128
    (37) data_type -> . FLOAT_32
    (38) data_type -> . FLOAT_64
    (39) data_type -> . KW_BOOLEAN
    (40) data_type -> . KW_STRING

    UNSIG_INT_8     shift and go to state 144
    UNSIG_INT_16    shift and go to state 145
    UNSIG_INT_32    shift and go to state 146
    UNSIG_INT_64    shift and go to state 147
    UNSIG_INT_128   shift and go to state 148
    SIG_INT_8       shift and go to state 149
    SIG_INT_16      shift and go to state 150
    SIG_INT_32      shift and go to state 151
    SIG_INT_64      shift and go to state 152
    SIG_INT_128     shift and go to state 153
    FLOAT_32        shift and go to state 154
    FLOAT_64        shift and go to state 155
    KW_BOOLEAN      shift and go to state 156
    KW_STRING       shift and go to state 157

    data_type                      shift and go to state 215

state 188

    (107) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP . COLON COLON KW_NEW LPAREN RPAREN
    (109) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP . COLON COLON KW_FROM LPAREN array RPAREN

    COLON           shift and go to state 216


state 189

    (118) linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST . COLON COLON KW_FROM LPAREN array RPAREN

    COLON           shift and go to state 217


state 190

    (81) let_initialization -> KW_LET KW_MUT VARIABLE EQUALS data .

    SEMI            reduce using rule 81 (let_initialization -> KW_LET KW_MUT VARIABLE EQUALS data .)


state 191

    (85) let_initialization -> KW_LET KW_MUT VARIABLE EQUALS expression_var .

    SEMI            reduce using rule 85 (let_initialization -> KW_LET KW_MUT VARIABLE EQUALS expression_var .)


state 192

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST . LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN

    LT              shift and go to state 218


state 193

    (82) let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type . EQUALS data
    (86) let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type . EQUALS expression_var

    EQUALS          shift and go to state 219


state 194

    (132) input -> VARIABLE DOT KW_READ_LINE LPAREN AND . KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI

    KW_MUT          shift and go to state 220


state 195

    (121) linkedlist_push -> DOT KW_PUSH_BACK LPAREN data . RPAREN SEMI

    RPAREN          shift and go to state 221


state 196

    (122) linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER . RPAREN SEMI

    RPAREN          shift and go to state 222


state 197

    (113) hashmap_remove -> DOT KW_REMOVE LPAREN AND . data RPAREN SEMI
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (74) tuple -> . LPAREN mdata RPAREN

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 73
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 75
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    LPAREN          shift and go to state 79

    data                           shift and go to state 223
    tuple                          shift and go to state 78

state 198

    (112) hashmap_insert -> DOT KW_INSERT LPAREN mdata . RPAREN SEMI

    RPAREN          shift and go to state 224


state 199

    (90) function -> KW_FN VARIABLE LPAREN arguments RPAREN . LBRACE main_rule RBRACE
    (126) function -> KW_FN VARIABLE LPAREN arguments RPAREN . MINUS GT data_type LBRACE return RBRACE

    LBRACE          shift and go to state 225
    MINUS           shift and go to state 226


state 200

    (98) for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE . main_rule RBRACE
    (1) main_rule -> . father_rule
    (2) main_rule -> . father_rule main_rule
    (3) father_rule -> . print
    (4) father_rule -> . dvariable
    (5) father_rule -> . function
    (6) father_rule -> . variables
    (7) father_rule -> . control_str
    (8) father_rule -> . expression
    (9) father_rule -> . void
    (10) father_rule -> . data_str
    (11) father_rule -> . array
    (12) father_rule -> . linkedlist_methods
    (13) father_rule -> . hashmap_methods
    (14) father_rule -> . initialization
    (15) father_rule -> . input
    (16) father_rule -> . assignation
    (17) father_rule -> . declare_data_type
    (67) print -> . KW_PRINT LPAREN CADENA RPAREN SEMI
    (68) dvariable -> . KW_LET VARIABLE SEMI
    (90) function -> . KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> . KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE
    (71) variables -> . VARIABLE
    (72) variables -> . VARIABLE COMMA variables
    (91) control_str -> . for_str
    (92) control_str -> . for_str_tagged
    (93) control_str -> . if
    (94) control_str -> . else
    (95) control_str -> . else_if
    (96) control_str -> . while
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (114) void -> .
    (103) data_str -> . array
    (104) data_str -> . hashmap
    (105) data_str -> . linkedlist
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET
    (119) linkedlist_methods -> . VARIABLE linkedlist_push
    (120) linkedlist_methods -> . VARIABLE linkedlist_remove
    (110) hashmap_methods -> . VARIABLE hashmap_insert
    (111) hashmap_methods -> . VARIABLE hashmap_remove
    (75) initialization -> . let_initialization SEMI
    (76) initialization -> . const_initialization SEMI
    (77) initialization -> . data_str SEMI
    (78) initialization -> . input_init SEMI
    (132) input -> . VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
    (133) assignation -> . VARIABLE assign_operators number
    (134) declare_data_type -> . KW_LET VARIABLE COLON data_type SEMI
    (97) for_str -> . KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> . KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE
    (99) for_str_tagged -> . label COLON for_str
    (123) if -> . KW_IF conditional LBRACE main_rule RBRACE
    (124) else -> . KW_ELSE LBRACE main_rule RBRACE
    (125) else_if -> . KW_ELSE KW_IF conditional LBRACE main_rule RBRACE
    (73) while -> . KW_WHILE LPAREN VARIABLE
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE
    (106) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (107) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (109) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (115) linkedlist -> . KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (116) linkedlist -> . KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (117) linkedlist -> . KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (118) linkedlist -> . KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> . KW_LET VARIABLE EQUALS data
    (80) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS data
    (81) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS data
    (82) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS data
    (83) let_initialization -> . KW_LET VARIABLE EQUALS expression_var
    (84) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS expression_var
    (85) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS expression_var
    (86) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var
    (87) const_initialization -> . KW_CONST VARIABLE COLON data_type EQUALS data
    (131) input_init -> . KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN
    (102) label -> . QUOTE VARIABLE

  ! shift/reduce conflict for KW_PRINT resolved as shift
  ! shift/reduce conflict for KW_LET resolved as shift
  ! shift/reduce conflict for KW_FN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for KW_FOR resolved as shift
  ! shift/reduce conflict for KW_IF resolved as shift
  ! shift/reduce conflict for KW_ELSE resolved as shift
  ! shift/reduce conflict for KW_WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for KW_CONST resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
    KW_PRINT        shift and go to state 18
    KW_LET          shift and go to state 20
    KW_FN           shift and go to state 22
    VARIABLE        shift and go to state 21
    LPAREN          shift and go to state 19
    RBRACE          reduce using rule 114 (void -> .)
    LBRACKET        shift and go to state 32
    KW_FOR          shift and go to state 36
    KW_IF           shift and go to state 38
    KW_ELSE         shift and go to state 39
    KW_WHILE        shift and go to state 40
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    KW_CONST        shift and go to state 43
    QUOTE           shift and go to state 44

  ! KW_PRINT        [ reduce using rule 114 (void -> .) ]
  ! KW_LET          [ reduce using rule 114 (void -> .) ]
  ! KW_FN           [ reduce using rule 114 (void -> .) ]
  ! VARIABLE        [ reduce using rule 114 (void -> .) ]
  ! LPAREN          [ reduce using rule 114 (void -> .) ]
  ! LBRACKET        [ reduce using rule 114 (void -> .) ]
  ! KW_FOR          [ reduce using rule 114 (void -> .) ]
  ! KW_IF           [ reduce using rule 114 (void -> .) ]
  ! KW_ELSE         [ reduce using rule 114 (void -> .) ]
  ! KW_WHILE        [ reduce using rule 114 (void -> .) ]
  ! INTEGER         [ reduce using rule 114 (void -> .) ]
  ! FLOAT           [ reduce using rule 114 (void -> .) ]
  ! KW_CONST        [ reduce using rule 114 (void -> .) ]
  ! QUOTE           [ reduce using rule 114 (void -> .) ]

    main_rule                      shift and go to state 227
    father_rule                    shift and go to state 2
    print                          shift and go to state 3
    dvariable                      shift and go to state 4
    function                       shift and go to state 5
    variables                      shift and go to state 6
    control_str                    shift and go to state 7
    expression                     shift and go to state 8
    void                           shift and go to state 9
    data_str                       shift and go to state 10
    array                          shift and go to state 11
    linkedlist_methods             shift and go to state 12
    hashmap_methods                shift and go to state 13
    initialization                 shift and go to state 14
    input                          shift and go to state 15
    assignation                    shift and go to state 16
    declare_data_type              shift and go to state 17
    for_str                        shift and go to state 23
    for_str_tagged                 shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    else_if                        shift and go to state 27
    while                          shift and go to state 28
    number                         shift and go to state 29
    hashmap                        shift and go to state 30
    linkedlist                     shift and go to state 31
    let_initialization             shift and go to state 33
    const_initialization           shift and go to state 34
    input_init                     shift and go to state 35
    label                          shift and go to state 37

state 201

    (101) range -> VARIABLE DOT . DOT VARIABLE

    DOT             shift and go to state 228


state 202

    (97) for_str -> KW_FOR VARIABLE KW_IN range LBRACE . main_rule RBRACE
    (1) main_rule -> . father_rule
    (2) main_rule -> . father_rule main_rule
    (3) father_rule -> . print
    (4) father_rule -> . dvariable
    (5) father_rule -> . function
    (6) father_rule -> . variables
    (7) father_rule -> . control_str
    (8) father_rule -> . expression
    (9) father_rule -> . void
    (10) father_rule -> . data_str
    (11) father_rule -> . array
    (12) father_rule -> . linkedlist_methods
    (13) father_rule -> . hashmap_methods
    (14) father_rule -> . initialization
    (15) father_rule -> . input
    (16) father_rule -> . assignation
    (17) father_rule -> . declare_data_type
    (67) print -> . KW_PRINT LPAREN CADENA RPAREN SEMI
    (68) dvariable -> . KW_LET VARIABLE SEMI
    (90) function -> . KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> . KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE
    (71) variables -> . VARIABLE
    (72) variables -> . VARIABLE COMMA variables
    (91) control_str -> . for_str
    (92) control_str -> . for_str_tagged
    (93) control_str -> . if
    (94) control_str -> . else
    (95) control_str -> . else_if
    (96) control_str -> . while
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (114) void -> .
    (103) data_str -> . array
    (104) data_str -> . hashmap
    (105) data_str -> . linkedlist
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET
    (119) linkedlist_methods -> . VARIABLE linkedlist_push
    (120) linkedlist_methods -> . VARIABLE linkedlist_remove
    (110) hashmap_methods -> . VARIABLE hashmap_insert
    (111) hashmap_methods -> . VARIABLE hashmap_remove
    (75) initialization -> . let_initialization SEMI
    (76) initialization -> . const_initialization SEMI
    (77) initialization -> . data_str SEMI
    (78) initialization -> . input_init SEMI
    (132) input -> . VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
    (133) assignation -> . VARIABLE assign_operators number
    (134) declare_data_type -> . KW_LET VARIABLE COLON data_type SEMI
    (97) for_str -> . KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> . KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE
    (99) for_str_tagged -> . label COLON for_str
    (123) if -> . KW_IF conditional LBRACE main_rule RBRACE
    (124) else -> . KW_ELSE LBRACE main_rule RBRACE
    (125) else_if -> . KW_ELSE KW_IF conditional LBRACE main_rule RBRACE
    (73) while -> . KW_WHILE LPAREN VARIABLE
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE
    (106) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (107) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (109) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (115) linkedlist -> . KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (116) linkedlist -> . KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (117) linkedlist -> . KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (118) linkedlist -> . KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> . KW_LET VARIABLE EQUALS data
    (80) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS data
    (81) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS data
    (82) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS data
    (83) let_initialization -> . KW_LET VARIABLE EQUALS expression_var
    (84) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS expression_var
    (85) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS expression_var
    (86) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var
    (87) const_initialization -> . KW_CONST VARIABLE COLON data_type EQUALS data
    (131) input_init -> . KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN
    (102) label -> . QUOTE VARIABLE

  ! shift/reduce conflict for KW_PRINT resolved as shift
  ! shift/reduce conflict for KW_LET resolved as shift
  ! shift/reduce conflict for KW_FN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for KW_FOR resolved as shift
  ! shift/reduce conflict for KW_IF resolved as shift
  ! shift/reduce conflict for KW_ELSE resolved as shift
  ! shift/reduce conflict for KW_WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for KW_CONST resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
    KW_PRINT        shift and go to state 18
    KW_LET          shift and go to state 20
    KW_FN           shift and go to state 22
    VARIABLE        shift and go to state 21
    LPAREN          shift and go to state 19
    RBRACE          reduce using rule 114 (void -> .)
    LBRACKET        shift and go to state 32
    KW_FOR          shift and go to state 36
    KW_IF           shift and go to state 38
    KW_ELSE         shift and go to state 39
    KW_WHILE        shift and go to state 40
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    KW_CONST        shift and go to state 43
    QUOTE           shift and go to state 44

  ! KW_PRINT        [ reduce using rule 114 (void -> .) ]
  ! KW_LET          [ reduce using rule 114 (void -> .) ]
  ! KW_FN           [ reduce using rule 114 (void -> .) ]
  ! VARIABLE        [ reduce using rule 114 (void -> .) ]
  ! LPAREN          [ reduce using rule 114 (void -> .) ]
  ! LBRACKET        [ reduce using rule 114 (void -> .) ]
  ! KW_FOR          [ reduce using rule 114 (void -> .) ]
  ! KW_IF           [ reduce using rule 114 (void -> .) ]
  ! KW_ELSE         [ reduce using rule 114 (void -> .) ]
  ! KW_WHILE        [ reduce using rule 114 (void -> .) ]
  ! INTEGER         [ reduce using rule 114 (void -> .) ]
  ! FLOAT           [ reduce using rule 114 (void -> .) ]
  ! KW_CONST        [ reduce using rule 114 (void -> .) ]
  ! QUOTE           [ reduce using rule 114 (void -> .) ]

    main_rule                      shift and go to state 229
    father_rule                    shift and go to state 2
    print                          shift and go to state 3
    dvariable                      shift and go to state 4
    function                       shift and go to state 5
    variables                      shift and go to state 6
    control_str                    shift and go to state 7
    expression                     shift and go to state 8
    void                           shift and go to state 9
    data_str                       shift and go to state 10
    array                          shift and go to state 11
    linkedlist_methods             shift and go to state 12
    hashmap_methods                shift and go to state 13
    initialization                 shift and go to state 14
    input                          shift and go to state 15
    assignation                    shift and go to state 16
    declare_data_type              shift and go to state 17
    for_str                        shift and go to state 23
    for_str_tagged                 shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    else_if                        shift and go to state 27
    while                          shift and go to state 28
    number                         shift and go to state 29
    hashmap                        shift and go to state 30
    linkedlist                     shift and go to state 31
    let_initialization             shift and go to state 33
    const_initialization           shift and go to state 34
    input_init                     shift and go to state 35
    label                          shift and go to state 37

state 203

    (100) range -> INTEGER DOT . DOT INTEGER

    DOT             shift and go to state 230


state 204

    (123) if -> KW_IF conditional LBRACE main_rule RBRACE .

    KW_PRINT        reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    KW_LET          reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    KW_FN           reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    VARIABLE        reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    LPAREN          reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    LBRACKET        reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    KW_FOR          reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    KW_IF           reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    KW_ELSE         reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    KW_WHILE        reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    INTEGER         reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    FLOAT           reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    KW_CONST        reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    QUOTE           reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    $end            reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    RBRACE          reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)
    KW_RETURN       reduce using rule 123 (if -> KW_IF conditional LBRACE main_rule RBRACE .)


state 205

    (125) else_if -> KW_ELSE KW_IF conditional LBRACE main_rule . RBRACE

    RBRACE          shift and go to state 231


state 206

    (87) const_initialization -> KW_CONST VARIABLE COLON data_type EQUALS . data
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (74) tuple -> . LPAREN mdata RPAREN

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 73
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 75
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    LPAREN          shift and go to state 79

    data                           shift and go to state 232
    tuple                          shift and go to state 78

state 207

    (69) array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .

    KW_PRINT        reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    KW_LET          reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    KW_FN           reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    VARIABLE        reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    LPAREN          reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    LBRACKET        reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    KW_FOR          reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    KW_IF           reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    KW_ELSE         reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    KW_WHILE        reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    INTEGER         reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    FLOAT           reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    KW_CONST        reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    QUOTE           reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    $end            reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    SEMI            reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    RBRACE          reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    KW_RETURN       reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)
    RPAREN          reduce using rule 69 (array -> KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET .)


state 208

    (106) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON . KW_NEW LPAREN RPAREN
    (108) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON . KW_FROM LPAREN array RPAREN

    KW_NEW          shift and go to state 233
    KW_FROM         shift and go to state 234


state 209

    (24) number -> INTEGER .
    (48) data -> INTEGER .

  ! reduce/reduce conflict for RPAREN resolved using rule 24 (number -> INTEGER .)
    RPAREN          reduce using rule 24 (number -> INTEGER .)
    PLUS            reduce using rule 24 (number -> INTEGER .)
    MINUS           reduce using rule 24 (number -> INTEGER .)
    TIMES           reduce using rule 24 (number -> INTEGER .)
    DIVIDE          reduce using rule 24 (number -> INTEGER .)
    COMMA           reduce using rule 48 (data -> INTEGER .)

  ! RPAREN          [ reduce using rule 48 (data -> INTEGER .) ]


state 210

    (25) number -> FLOAT .
    (50) data -> FLOAT .

  ! reduce/reduce conflict for RPAREN resolved using rule 25 (number -> FLOAT .)
    RPAREN          reduce using rule 25 (number -> FLOAT .)
    PLUS            reduce using rule 25 (number -> FLOAT .)
    MINUS           reduce using rule 25 (number -> FLOAT .)
    TIMES           reduce using rule 25 (number -> FLOAT .)
    DIVIDE          reduce using rule 25 (number -> FLOAT .)
    COMMA           reduce using rule 50 (data -> FLOAT .)

  ! RPAREN          [ reduce using rule 50 (data -> FLOAT .) ]


state 211

    (117) linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON . KW_FROM LPAREN array RPAREN

    KW_FROM         shift and go to state 235


state 212

    (131) input_init -> KW_LET VARIABLE EQUALS KW_IO COLON COLON . KW_STDIN LPAREN RPAREN

    KW_STDIN        shift and go to state 236


state 213

    (80) let_initialization -> KW_LET VARIABLE COLON data_type EQUALS data .

    SEMI            reduce using rule 80 (let_initialization -> KW_LET VARIABLE COLON data_type EQUALS data .)


state 214

    (84) let_initialization -> KW_LET VARIABLE COLON data_type EQUALS expression_var .

    SEMI            reduce using rule 84 (let_initialization -> KW_LET VARIABLE COLON data_type EQUALS expression_var .)


state 215

    (115) linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type . GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN

    GT              shift and go to state 237


state 216

    (107) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON . COLON KW_NEW LPAREN RPAREN
    (109) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON . COLON KW_FROM LPAREN array RPAREN

    COLON           shift and go to state 238


state 217

    (118) linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON . COLON KW_FROM LPAREN array RPAREN

    COLON           shift and go to state 239


state 218

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT . data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (27) data_type -> . UNSIG_INT_8
    (28) data_type -> . UNSIG_INT_16
    (29) data_type -> . UNSIG_INT_32
    (30) data_type -> . UNSIG_INT_64
    (31) data_type -> . UNSIG_INT_128
    (32) data_type -> . SIG_INT_8
    (33) data_type -> . SIG_INT_16
    (34) data_type -> . SIG_INT_32
    (35) data_type -> . SIG_INT_64
    (36) data_type -> . SIG_INT_128
    (37) data_type -> . FLOAT_32
    (38) data_type -> . FLOAT_64
    (39) data_type -> . KW_BOOLEAN
    (40) data_type -> . KW_STRING

    UNSIG_INT_8     shift and go to state 144
    UNSIG_INT_16    shift and go to state 145
    UNSIG_INT_32    shift and go to state 146
    UNSIG_INT_64    shift and go to state 147
    UNSIG_INT_128   shift and go to state 148
    SIG_INT_8       shift and go to state 149
    SIG_INT_16      shift and go to state 150
    SIG_INT_32      shift and go to state 151
    SIG_INT_64      shift and go to state 152
    SIG_INT_128     shift and go to state 153
    FLOAT_32        shift and go to state 154
    FLOAT_64        shift and go to state 155
    KW_BOOLEAN      shift and go to state 156
    KW_STRING       shift and go to state 157

    data_type                      shift and go to state 240

state 219

    (82) let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS . data
    (86) let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS . expression_var
    (47) data -> . CADENA
    (48) data -> . INTEGER
    (49) data -> . CHAR
    (50) data -> . FLOAT
    (51) data -> . KW_FALSE
    (52) data -> . KW_TRUE
    (53) data -> . tuple
    (127) expression_var -> . expression
    (128) expression_var -> . VARIABLE
    (74) tuple -> . LPAREN mdata RPAREN
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE

    CADENA          shift and go to state 72
    INTEGER         shift and go to state 139
    CHAR            shift and go to state 74
    FLOAT           shift and go to state 140
    KW_FALSE        shift and go to state 76
    KW_TRUE         shift and go to state 77
    VARIABLE        shift and go to state 131
    LPAREN          shift and go to state 134

    data                           shift and go to state 241
    expression_var                 shift and go to state 242
    tuple                          shift and go to state 78
    expression                     shift and go to state 141
    number                         shift and go to state 29

state 220

    (132) input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT . VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI

    VARIABLE        shift and go to state 243


state 221

    (121) linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN . SEMI

    SEMI            shift and go to state 244


state 222

    (122) linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN . SEMI

    SEMI            shift and go to state 245


state 223

    (113) hashmap_remove -> DOT KW_REMOVE LPAREN AND data . RPAREN SEMI

    RPAREN          shift and go to state 246


state 224

    (112) hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN . SEMI

    SEMI            shift and go to state 247


state 225

    (90) function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE . main_rule RBRACE
    (1) main_rule -> . father_rule
    (2) main_rule -> . father_rule main_rule
    (3) father_rule -> . print
    (4) father_rule -> . dvariable
    (5) father_rule -> . function
    (6) father_rule -> . variables
    (7) father_rule -> . control_str
    (8) father_rule -> . expression
    (9) father_rule -> . void
    (10) father_rule -> . data_str
    (11) father_rule -> . array
    (12) father_rule -> . linkedlist_methods
    (13) father_rule -> . hashmap_methods
    (14) father_rule -> . initialization
    (15) father_rule -> . input
    (16) father_rule -> . assignation
    (17) father_rule -> . declare_data_type
    (67) print -> . KW_PRINT LPAREN CADENA RPAREN SEMI
    (68) dvariable -> . KW_LET VARIABLE SEMI
    (90) function -> . KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> . KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE
    (71) variables -> . VARIABLE
    (72) variables -> . VARIABLE COMMA variables
    (91) control_str -> . for_str
    (92) control_str -> . for_str_tagged
    (93) control_str -> . if
    (94) control_str -> . else
    (95) control_str -> . else_if
    (96) control_str -> . while
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (114) void -> .
    (103) data_str -> . array
    (104) data_str -> . hashmap
    (105) data_str -> . linkedlist
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET
    (119) linkedlist_methods -> . VARIABLE linkedlist_push
    (120) linkedlist_methods -> . VARIABLE linkedlist_remove
    (110) hashmap_methods -> . VARIABLE hashmap_insert
    (111) hashmap_methods -> . VARIABLE hashmap_remove
    (75) initialization -> . let_initialization SEMI
    (76) initialization -> . const_initialization SEMI
    (77) initialization -> . data_str SEMI
    (78) initialization -> . input_init SEMI
    (132) input -> . VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
    (133) assignation -> . VARIABLE assign_operators number
    (134) declare_data_type -> . KW_LET VARIABLE COLON data_type SEMI
    (97) for_str -> . KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> . KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE
    (99) for_str_tagged -> . label COLON for_str
    (123) if -> . KW_IF conditional LBRACE main_rule RBRACE
    (124) else -> . KW_ELSE LBRACE main_rule RBRACE
    (125) else_if -> . KW_ELSE KW_IF conditional LBRACE main_rule RBRACE
    (73) while -> . KW_WHILE LPAREN VARIABLE
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE
    (106) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (107) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (109) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (115) linkedlist -> . KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (116) linkedlist -> . KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (117) linkedlist -> . KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (118) linkedlist -> . KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> . KW_LET VARIABLE EQUALS data
    (80) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS data
    (81) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS data
    (82) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS data
    (83) let_initialization -> . KW_LET VARIABLE EQUALS expression_var
    (84) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS expression_var
    (85) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS expression_var
    (86) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var
    (87) const_initialization -> . KW_CONST VARIABLE COLON data_type EQUALS data
    (131) input_init -> . KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN
    (102) label -> . QUOTE VARIABLE

  ! shift/reduce conflict for KW_PRINT resolved as shift
  ! shift/reduce conflict for KW_LET resolved as shift
  ! shift/reduce conflict for KW_FN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for KW_FOR resolved as shift
  ! shift/reduce conflict for KW_IF resolved as shift
  ! shift/reduce conflict for KW_ELSE resolved as shift
  ! shift/reduce conflict for KW_WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for KW_CONST resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
    KW_PRINT        shift and go to state 18
    KW_LET          shift and go to state 20
    KW_FN           shift and go to state 22
    VARIABLE        shift and go to state 21
    LPAREN          shift and go to state 19
    RBRACE          reduce using rule 114 (void -> .)
    LBRACKET        shift and go to state 32
    KW_FOR          shift and go to state 36
    KW_IF           shift and go to state 38
    KW_ELSE         shift and go to state 39
    KW_WHILE        shift and go to state 40
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    KW_CONST        shift and go to state 43
    QUOTE           shift and go to state 44

  ! KW_PRINT        [ reduce using rule 114 (void -> .) ]
  ! KW_LET          [ reduce using rule 114 (void -> .) ]
  ! KW_FN           [ reduce using rule 114 (void -> .) ]
  ! VARIABLE        [ reduce using rule 114 (void -> .) ]
  ! LPAREN          [ reduce using rule 114 (void -> .) ]
  ! LBRACKET        [ reduce using rule 114 (void -> .) ]
  ! KW_FOR          [ reduce using rule 114 (void -> .) ]
  ! KW_IF           [ reduce using rule 114 (void -> .) ]
  ! KW_ELSE         [ reduce using rule 114 (void -> .) ]
  ! KW_WHILE        [ reduce using rule 114 (void -> .) ]
  ! INTEGER         [ reduce using rule 114 (void -> .) ]
  ! FLOAT           [ reduce using rule 114 (void -> .) ]
  ! KW_CONST        [ reduce using rule 114 (void -> .) ]
  ! QUOTE           [ reduce using rule 114 (void -> .) ]

    main_rule                      shift and go to state 248
    father_rule                    shift and go to state 2
    print                          shift and go to state 3
    dvariable                      shift and go to state 4
    function                       shift and go to state 5
    variables                      shift and go to state 6
    control_str                    shift and go to state 7
    expression                     shift and go to state 8
    void                           shift and go to state 9
    data_str                       shift and go to state 10
    array                          shift and go to state 11
    linkedlist_methods             shift and go to state 12
    hashmap_methods                shift and go to state 13
    initialization                 shift and go to state 14
    input                          shift and go to state 15
    assignation                    shift and go to state 16
    declare_data_type              shift and go to state 17
    for_str                        shift and go to state 23
    for_str_tagged                 shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    else_if                        shift and go to state 27
    while                          shift and go to state 28
    number                         shift and go to state 29
    hashmap                        shift and go to state 30
    linkedlist                     shift and go to state 31
    let_initialization             shift and go to state 33
    const_initialization           shift and go to state 34
    input_init                     shift and go to state 35
    label                          shift and go to state 37

state 226

    (126) function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS . GT data_type LBRACE return RBRACE

    GT              shift and go to state 249


state 227

    (98) for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule . RBRACE

    RBRACE          shift and go to state 250


state 228

    (101) range -> VARIABLE DOT DOT . VARIABLE

    VARIABLE        shift and go to state 251


state 229

    (97) for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule . RBRACE

    RBRACE          shift and go to state 252


state 230

    (100) range -> INTEGER DOT DOT . INTEGER

    INTEGER         shift and go to state 253


state 231

    (125) else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .

    KW_PRINT        reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    KW_LET          reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    KW_FN           reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    VARIABLE        reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    LPAREN          reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    LBRACKET        reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    KW_FOR          reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    KW_IF           reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    KW_ELSE         reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    KW_WHILE        reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    INTEGER         reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    FLOAT           reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    KW_CONST        reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    QUOTE           reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    $end            reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    RBRACE          reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)
    KW_RETURN       reduce using rule 125 (else_if -> KW_ELSE KW_IF conditional LBRACE main_rule RBRACE .)


state 232

    (87) const_initialization -> KW_CONST VARIABLE COLON data_type EQUALS data .

    SEMI            reduce using rule 87 (const_initialization -> KW_CONST VARIABLE COLON data_type EQUALS data .)


state 233

    (106) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW . LPAREN RPAREN

    LPAREN          shift and go to state 254


state 234

    (108) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM . LPAREN array RPAREN

    LPAREN          shift and go to state 255


state 235

    (117) linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM . LPAREN array RPAREN

    LPAREN          shift and go to state 256


state 236

    (131) input_init -> KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN . LPAREN RPAREN

    LPAREN          shift and go to state 257


state 237

    (115) linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT . EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN

    EQUALS          shift and go to state 258


state 238

    (107) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON . KW_NEW LPAREN RPAREN
    (109) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON . KW_FROM LPAREN array RPAREN

    KW_NEW          shift and go to state 259
    KW_FROM         shift and go to state 260


state 239

    (118) linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON . KW_FROM LPAREN array RPAREN

    KW_FROM         shift and go to state 261


state 240

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type . GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN

    GT              shift and go to state 262


state 241

    (82) let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS data .

    SEMI            reduce using rule 82 (let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS data .)


state 242

    (86) let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var .

    SEMI            reduce using rule 86 (let_initialization -> KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var .)


state 243

    (132) input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE . RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI

    RPAREN          shift and go to state 263


state 244

    (121) linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .

    KW_PRINT        reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    KW_LET          reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    KW_FN           reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    VARIABLE        reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    LPAREN          reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    LBRACKET        reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    KW_FOR          reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    KW_IF           reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    KW_ELSE         reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    KW_WHILE        reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    INTEGER         reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    FLOAT           reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    KW_CONST        reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    QUOTE           reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    $end            reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    RBRACE          reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)
    KW_RETURN       reduce using rule 121 (linkedlist_push -> DOT KW_PUSH_BACK LPAREN data RPAREN SEMI .)


state 245

    (122) linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .

    KW_PRINT        reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    KW_LET          reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    KW_FN           reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    VARIABLE        reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    LPAREN          reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    LBRACKET        reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    KW_FOR          reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    KW_IF           reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    KW_ELSE         reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    KW_WHILE        reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    INTEGER         reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    FLOAT           reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    KW_CONST        reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    QUOTE           reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    $end            reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    RBRACE          reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)
    KW_RETURN       reduce using rule 122 (linkedlist_remove -> DOT KW_REMOVE LPAREN INTEGER RPAREN SEMI .)


state 246

    (113) hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN . SEMI

    SEMI            shift and go to state 264


state 247

    (112) hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .

    KW_PRINT        reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    KW_LET          reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    KW_FN           reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    VARIABLE        reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    LPAREN          reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    LBRACKET        reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    KW_FOR          reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    KW_IF           reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    KW_ELSE         reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    KW_WHILE        reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    INTEGER         reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    FLOAT           reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    KW_CONST        reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    QUOTE           reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    $end            reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    RBRACE          reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)
    KW_RETURN       reduce using rule 112 (hashmap_insert -> DOT KW_INSERT LPAREN mdata RPAREN SEMI .)


state 248

    (90) function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule . RBRACE

    RBRACE          shift and go to state 265


state 249

    (126) function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT . data_type LBRACE return RBRACE
    (27) data_type -> . UNSIG_INT_8
    (28) data_type -> . UNSIG_INT_16
    (29) data_type -> . UNSIG_INT_32
    (30) data_type -> . UNSIG_INT_64
    (31) data_type -> . UNSIG_INT_128
    (32) data_type -> . SIG_INT_8
    (33) data_type -> . SIG_INT_16
    (34) data_type -> . SIG_INT_32
    (35) data_type -> . SIG_INT_64
    (36) data_type -> . SIG_INT_128
    (37) data_type -> . FLOAT_32
    (38) data_type -> . FLOAT_64
    (39) data_type -> . KW_BOOLEAN
    (40) data_type -> . KW_STRING

    UNSIG_INT_8     shift and go to state 144
    UNSIG_INT_16    shift and go to state 145
    UNSIG_INT_32    shift and go to state 146
    UNSIG_INT_64    shift and go to state 147
    UNSIG_INT_128   shift and go to state 148
    SIG_INT_8       shift and go to state 149
    SIG_INT_16      shift and go to state 150
    SIG_INT_32      shift and go to state 151
    SIG_INT_64      shift and go to state 152
    SIG_INT_128     shift and go to state 153
    FLOAT_32        shift and go to state 154
    FLOAT_64        shift and go to state 155
    KW_BOOLEAN      shift and go to state 156
    KW_STRING       shift and go to state 157

    data_type                      shift and go to state 266

state 250

    (98) for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .

    KW_PRINT        reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    KW_LET          reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    KW_FN           reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    VARIABLE        reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    LPAREN          reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    LBRACKET        reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    KW_FOR          reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    KW_IF           reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    KW_ELSE         reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    KW_WHILE        reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    INTEGER         reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    FLOAT           reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    KW_CONST        reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    QUOTE           reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    $end            reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    RBRACE          reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)
    KW_RETURN       reduce using rule 98 (for_str -> KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE .)


state 251

    (101) range -> VARIABLE DOT DOT VARIABLE .

    LBRACE          reduce using rule 101 (range -> VARIABLE DOT DOT VARIABLE .)


state 252

    (97) for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .

    KW_PRINT        reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    KW_LET          reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    KW_FN           reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    VARIABLE        reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    LPAREN          reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    LBRACKET        reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    KW_FOR          reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    KW_IF           reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    KW_ELSE         reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    KW_WHILE        reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    INTEGER         reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    FLOAT           reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    KW_CONST        reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    QUOTE           reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    $end            reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    RBRACE          reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)
    KW_RETURN       reduce using rule 97 (for_str -> KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE .)


state 253

    (100) range -> INTEGER DOT DOT INTEGER .

    LBRACE          reduce using rule 100 (range -> INTEGER DOT DOT INTEGER .)


state 254

    (106) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN . RPAREN

    RPAREN          shift and go to state 267


state 255

    (108) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN . array RPAREN
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET

    KW_LET          shift and go to state 268
    LBRACKET        shift and go to state 32

    array                          shift and go to state 269

state 256

    (117) linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN . array RPAREN
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET

    KW_LET          shift and go to state 268
    LBRACKET        shift and go to state 32

    array                          shift and go to state 270

state 257

    (131) input_init -> KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN . RPAREN

    RPAREN          shift and go to state 271


state 258

    (115) linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS . KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN

    KW_LINKEDLIST   shift and go to state 272


state 259

    (107) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW . LPAREN RPAREN

    LPAREN          shift and go to state 273


state 260

    (109) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM . LPAREN array RPAREN

    LPAREN          shift and go to state 274


state 261

    (118) linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM . LPAREN array RPAREN

    LPAREN          shift and go to state 275


state 262

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT . EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN

    EQUALS          shift and go to state 276


state 263

    (132) input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN . DOT KW_EXPECT LPAREN CADENA RPAREN SEMI

    DOT             shift and go to state 277


state 264

    (113) hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .

    KW_PRINT        reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    KW_LET          reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    KW_FN           reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    VARIABLE        reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    LPAREN          reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    LBRACKET        reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    KW_FOR          reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    KW_IF           reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    KW_ELSE         reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    KW_WHILE        reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    INTEGER         reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    FLOAT           reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    KW_CONST        reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    QUOTE           reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    $end            reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    RBRACE          reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)
    KW_RETURN       reduce using rule 113 (hashmap_remove -> DOT KW_REMOVE LPAREN AND data RPAREN SEMI .)


state 265

    (90) function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .

    KW_PRINT        reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    KW_LET          reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    KW_FN           reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    VARIABLE        reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    LPAREN          reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    LBRACKET        reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    KW_FOR          reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    KW_IF           reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    KW_ELSE         reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    KW_WHILE        reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    INTEGER         reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    FLOAT           reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    KW_CONST        reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    QUOTE           reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    $end            reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    RBRACE          reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)
    KW_RETURN       reduce using rule 90 (function -> KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE .)


state 266

    (126) function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type . LBRACE return RBRACE

    LBRACE          shift and go to state 278


state 267

    (106) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .

    SEMI            reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_PRINT        reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_LET          reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_FN           reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    VARIABLE        reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    LPAREN          reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    LBRACKET        reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_FOR          reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_IF           reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_ELSE         reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_WHILE        reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    INTEGER         reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    FLOAT           reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_CONST        reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    QUOTE           reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    $end            reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    RBRACE          reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_RETURN       reduce using rule 106 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)


state 268

    (69) array -> KW_LET . VARIABLE EQUALS LBRACKET mdata RBRACKET

    VARIABLE        shift and go to state 279


state 269

    (108) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array . RPAREN

    RPAREN          shift and go to state 280


state 270

    (117) linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array . RPAREN

    RPAREN          shift and go to state 281


state 271

    (131) input_init -> KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN .

    SEMI            reduce using rule 131 (input_init -> KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN .)


state 272

    (115) linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST . COLON COLON KW_NEW LPAREN RPAREN

    COLON           shift and go to state 282


state 273

    (107) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN . RPAREN

    RPAREN          shift and go to state 283


state 274

    (109) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN . array RPAREN
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET

    KW_LET          shift and go to state 268
    LBRACKET        shift and go to state 32

    array                          shift and go to state 284

state 275

    (118) linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN . array RPAREN
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET

    KW_LET          shift and go to state 268
    LBRACKET        shift and go to state 32

    array                          shift and go to state 285

state 276

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS . KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN

    KW_LINKEDLIST   shift and go to state 286


state 277

    (132) input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT . KW_EXPECT LPAREN CADENA RPAREN SEMI

    KW_EXPECT       shift and go to state 287


state 278

    (126) function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE . return RBRACE
    (129) return -> . main_rule
    (130) return -> . main_rule KW_RETURN expression_var SEMI
    (1) main_rule -> . father_rule
    (2) main_rule -> . father_rule main_rule
    (3) father_rule -> . print
    (4) father_rule -> . dvariable
    (5) father_rule -> . function
    (6) father_rule -> . variables
    (7) father_rule -> . control_str
    (8) father_rule -> . expression
    (9) father_rule -> . void
    (10) father_rule -> . data_str
    (11) father_rule -> . array
    (12) father_rule -> . linkedlist_methods
    (13) father_rule -> . hashmap_methods
    (14) father_rule -> . initialization
    (15) father_rule -> . input
    (16) father_rule -> . assignation
    (17) father_rule -> . declare_data_type
    (67) print -> . KW_PRINT LPAREN CADENA RPAREN SEMI
    (68) dvariable -> . KW_LET VARIABLE SEMI
    (90) function -> . KW_FN VARIABLE LPAREN arguments RPAREN LBRACE main_rule RBRACE
    (126) function -> . KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE
    (71) variables -> . VARIABLE
    (72) variables -> . VARIABLE COMMA variables
    (91) control_str -> . for_str
    (92) control_str -> . for_str_tagged
    (93) control_str -> . if
    (94) control_str -> . else
    (95) control_str -> . else_if
    (96) control_str -> . while
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (114) void -> .
    (103) data_str -> . array
    (104) data_str -> . hashmap
    (105) data_str -> . linkedlist
    (69) array -> . KW_LET VARIABLE EQUALS LBRACKET mdata RBRACKET
    (70) array -> . LBRACKET mdata RBRACKET
    (119) linkedlist_methods -> . VARIABLE linkedlist_push
    (120) linkedlist_methods -> . VARIABLE linkedlist_remove
    (110) hashmap_methods -> . VARIABLE hashmap_insert
    (111) hashmap_methods -> . VARIABLE hashmap_remove
    (75) initialization -> . let_initialization SEMI
    (76) initialization -> . const_initialization SEMI
    (77) initialization -> . data_str SEMI
    (78) initialization -> . input_init SEMI
    (132) input -> . VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI
    (133) assignation -> . VARIABLE assign_operators number
    (134) declare_data_type -> . KW_LET VARIABLE COLON data_type SEMI
    (97) for_str -> . KW_FOR VARIABLE KW_IN range LBRACE main_rule RBRACE
    (98) for_str -> . KW_FOR VARIABLE KW_IN VARIABLE LBRACE main_rule RBRACE
    (99) for_str_tagged -> . label COLON for_str
    (123) if -> . KW_IF conditional LBRACE main_rule RBRACE
    (124) else -> . KW_ELSE LBRACE main_rule RBRACE
    (125) else_if -> . KW_ELSE KW_IF conditional LBRACE main_rule RBRACE
    (73) while -> . KW_WHILE LPAREN VARIABLE
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE
    (106) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (107) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN
    (108) hashmap -> . KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (109) hashmap -> . KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN
    (115) linkedlist -> . KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (116) linkedlist -> . KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN
    (117) linkedlist -> . KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (118) linkedlist -> . KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN
    (79) let_initialization -> . KW_LET VARIABLE EQUALS data
    (80) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS data
    (81) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS data
    (82) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS data
    (83) let_initialization -> . KW_LET VARIABLE EQUALS expression_var
    (84) let_initialization -> . KW_LET VARIABLE COLON data_type EQUALS expression_var
    (85) let_initialization -> . KW_LET KW_MUT VARIABLE EQUALS expression_var
    (86) let_initialization -> . KW_LET KW_MUT VARIABLE COLON data_type EQUALS expression_var
    (87) const_initialization -> . KW_CONST VARIABLE COLON data_type EQUALS data
    (131) input_init -> . KW_LET VARIABLE EQUALS KW_IO COLON COLON KW_STDIN LPAREN RPAREN
    (102) label -> . QUOTE VARIABLE

  ! shift/reduce conflict for KW_PRINT resolved as shift
  ! shift/reduce conflict for KW_LET resolved as shift
  ! shift/reduce conflict for KW_FN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for KW_FOR resolved as shift
  ! shift/reduce conflict for KW_IF resolved as shift
  ! shift/reduce conflict for KW_ELSE resolved as shift
  ! shift/reduce conflict for KW_WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for KW_CONST resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
    KW_PRINT        shift and go to state 18
    KW_LET          shift and go to state 20
    KW_FN           shift and go to state 22
    VARIABLE        shift and go to state 21
    LPAREN          shift and go to state 19
    KW_RETURN       reduce using rule 114 (void -> .)
    RBRACE          reduce using rule 114 (void -> .)
    LBRACKET        shift and go to state 32
    KW_FOR          shift and go to state 36
    KW_IF           shift and go to state 38
    KW_ELSE         shift and go to state 39
    KW_WHILE        shift and go to state 40
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    KW_CONST        shift and go to state 43
    QUOTE           shift and go to state 44

  ! KW_PRINT        [ reduce using rule 114 (void -> .) ]
  ! KW_LET          [ reduce using rule 114 (void -> .) ]
  ! KW_FN           [ reduce using rule 114 (void -> .) ]
  ! VARIABLE        [ reduce using rule 114 (void -> .) ]
  ! LPAREN          [ reduce using rule 114 (void -> .) ]
  ! LBRACKET        [ reduce using rule 114 (void -> .) ]
  ! KW_FOR          [ reduce using rule 114 (void -> .) ]
  ! KW_IF           [ reduce using rule 114 (void -> .) ]
  ! KW_ELSE         [ reduce using rule 114 (void -> .) ]
  ! KW_WHILE        [ reduce using rule 114 (void -> .) ]
  ! INTEGER         [ reduce using rule 114 (void -> .) ]
  ! FLOAT           [ reduce using rule 114 (void -> .) ]
  ! KW_CONST        [ reduce using rule 114 (void -> .) ]
  ! QUOTE           [ reduce using rule 114 (void -> .) ]

    return                         shift and go to state 288
    main_rule                      shift and go to state 289
    father_rule                    shift and go to state 2
    print                          shift and go to state 3
    dvariable                      shift and go to state 4
    function                       shift and go to state 5
    variables                      shift and go to state 6
    control_str                    shift and go to state 7
    expression                     shift and go to state 8
    void                           shift and go to state 9
    data_str                       shift and go to state 10
    array                          shift and go to state 11
    linkedlist_methods             shift and go to state 12
    hashmap_methods                shift and go to state 13
    initialization                 shift and go to state 14
    input                          shift and go to state 15
    assignation                    shift and go to state 16
    declare_data_type              shift and go to state 17
    for_str                        shift and go to state 23
    for_str_tagged                 shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    else_if                        shift and go to state 27
    while                          shift and go to state 28
    number                         shift and go to state 29
    hashmap                        shift and go to state 30
    linkedlist                     shift and go to state 31
    let_initialization             shift and go to state 33
    const_initialization           shift and go to state 34
    input_init                     shift and go to state 35
    label                          shift and go to state 37

state 279

    (69) array -> KW_LET VARIABLE . EQUALS LBRACKET mdata RBRACKET

    EQUALS          shift and go to state 290


state 280

    (108) hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .

    SEMI            reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_PRINT        reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_LET          reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_FN           reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    VARIABLE        reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    LPAREN          reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    LBRACKET        reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_FOR          reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_IF           reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_ELSE         reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_WHILE        reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    INTEGER         reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    FLOAT           reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_CONST        reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    QUOTE           reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    $end            reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    RBRACE          reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_RETURN       reduce using rule 108 (hashmap -> KW_LET VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)


state 281

    (117) linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .

    SEMI            reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_PRINT        reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_LET          reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_FN           reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    VARIABLE        reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    LPAREN          reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    LBRACKET        reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_FOR          reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_IF           reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_ELSE         reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_WHILE        reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    INTEGER         reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    FLOAT           reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_CONST        reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    QUOTE           reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    $end            reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    RBRACE          reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_RETURN       reduce using rule 117 (linkedlist -> KW_LET VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)


state 282

    (115) linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON . COLON KW_NEW LPAREN RPAREN

    COLON           shift and go to state 291


state 283

    (107) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .

    SEMI            reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_PRINT        reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_LET          reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_FN           reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    VARIABLE        reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    LPAREN          reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    LBRACKET        reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_FOR          reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_IF           reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_ELSE         reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_WHILE        reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    INTEGER         reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    FLOAT           reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_CONST        reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    QUOTE           reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    $end            reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    RBRACE          reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)
    KW_RETURN       reduce using rule 107 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_NEW LPAREN RPAREN .)


state 284

    (109) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array . RPAREN

    RPAREN          shift and go to state 292


state 285

    (118) linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array . RPAREN

    RPAREN          shift and go to state 293


state 286

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST . COLON COLON KW_NEW LPAREN RPAREN

    COLON           shift and go to state 294


state 287

    (132) input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT . LPAREN CADENA RPAREN SEMI

    LPAREN          shift and go to state 295


state 288

    (126) function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return . RBRACE

    RBRACE          shift and go to state 296


state 289

    (129) return -> main_rule .
    (130) return -> main_rule . KW_RETURN expression_var SEMI

    RBRACE          reduce using rule 129 (return -> main_rule .)
    KW_RETURN       shift and go to state 297


state 290

    (69) array -> KW_LET VARIABLE EQUALS . LBRACKET mdata RBRACKET

    LBRACKET        shift and go to state 132


state 291

    (115) linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON . KW_NEW LPAREN RPAREN

    KW_NEW          shift and go to state 298


state 292

    (109) hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .

    SEMI            reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_PRINT        reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_LET          reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_FN           reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    VARIABLE        reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    LPAREN          reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    LBRACKET        reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_FOR          reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_IF           reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_ELSE         reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_WHILE        reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    INTEGER         reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    FLOAT           reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_CONST        reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    QUOTE           reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    $end            reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    RBRACE          reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_RETURN       reduce using rule 109 (hashmap -> KW_LET KW_MUT VARIABLE EQUALS KW_HASHMAP COLON COLON KW_FROM LPAREN array RPAREN .)


state 293

    (118) linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .

    SEMI            reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_PRINT        reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_LET          reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_FN           reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    VARIABLE        reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    LPAREN          reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    LBRACKET        reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_FOR          reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_IF           reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_ELSE         reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_WHILE        reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    INTEGER         reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    FLOAT           reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_CONST        reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    QUOTE           reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    $end            reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    RBRACE          reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)
    KW_RETURN       reduce using rule 118 (linkedlist -> KW_LET KW_MUT VARIABLE EQUALS KW_LINKEDLIST COLON COLON KW_FROM LPAREN array RPAREN .)


state 294

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON . COLON KW_NEW LPAREN RPAREN

    COLON           shift and go to state 299


state 295

    (132) input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN . CADENA RPAREN SEMI

    CADENA          shift and go to state 300


state 296

    (126) function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .

    KW_PRINT        reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    KW_LET          reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    KW_FN           reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    VARIABLE        reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    LPAREN          reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    LBRACKET        reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    KW_FOR          reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    KW_IF           reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    KW_ELSE         reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    KW_WHILE        reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    INTEGER         reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    FLOAT           reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    KW_CONST        reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    QUOTE           reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    $end            reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    RBRACE          reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)
    KW_RETURN       reduce using rule 126 (function -> KW_FN VARIABLE LPAREN arguments RPAREN MINUS GT data_type LBRACE return RBRACE .)


state 297

    (130) return -> main_rule KW_RETURN . expression_var SEMI
    (127) expression_var -> . expression
    (128) expression_var -> . VARIABLE
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . number
    (24) number -> . INTEGER
    (25) number -> . FLOAT
    (26) number -> . VARIABLE

    VARIABLE        shift and go to state 131
    LPAREN          shift and go to state 19
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42

    expression_var                 shift and go to state 301
    expression                     shift and go to state 141
    number                         shift and go to state 29

state 298

    (115) linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW . LPAREN RPAREN

    LPAREN          shift and go to state 302


state 299

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON . KW_NEW LPAREN RPAREN

    KW_NEW          shift and go to state 303


state 300

    (132) input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA . RPAREN SEMI

    RPAREN          shift and go to state 304


state 301

    (130) return -> main_rule KW_RETURN expression_var . SEMI

    SEMI            shift and go to state 305


state 302

    (115) linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN . RPAREN

    RPAREN          shift and go to state 306


state 303

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW . LPAREN RPAREN

    LPAREN          shift and go to state 307


state 304

    (132) input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN . SEMI

    SEMI            shift and go to state 308


state 305

    (130) return -> main_rule KW_RETURN expression_var SEMI .

    RBRACE          reduce using rule 130 (return -> main_rule KW_RETURN expression_var SEMI .)


state 306

    (115) linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .

    SEMI            reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_PRINT        reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_LET          reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_FN           reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    VARIABLE        reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    LPAREN          reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    LBRACKET        reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_FOR          reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_IF           reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_ELSE         reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_WHILE        reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    INTEGER         reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    FLOAT           reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_CONST        reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    QUOTE           reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    $end            reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    RBRACE          reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_RETURN       reduce using rule 115 (linkedlist -> KW_LET VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)


state 307

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN . RPAREN

    RPAREN          shift and go to state 309


state 308

    (132) input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .

    KW_PRINT        reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    KW_LET          reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    KW_FN           reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    LBRACKET        reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    KW_FOR          reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    KW_IF           reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    KW_ELSE         reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    KW_WHILE        reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    INTEGER         reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    FLOAT           reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    KW_CONST        reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    QUOTE           reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    $end            reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)
    KW_RETURN       reduce using rule 132 (input -> VARIABLE DOT KW_READ_LINE LPAREN AND KW_MUT VARIABLE RPAREN DOT KW_EXPECT LPAREN CADENA RPAREN SEMI .)


state 309

    (116) linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .

    SEMI            reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_PRINT        reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_LET          reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_FN           reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    VARIABLE        reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    LPAREN          reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    LBRACKET        reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_FOR          reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_IF           reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_ELSE         reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_WHILE        reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    INTEGER         reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    FLOAT           reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_CONST        reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    QUOTE           reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    $end            reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    RBRACE          reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)
    KW_RETURN       reduce using rule 116 (linkedlist -> KW_LET KW_MUT VARIABLE COLON KW_LINKEDLIST LT data_type GT EQUALS KW_LINKEDLIST COLON COLON KW_NEW LPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KW_PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for KW_LET in state 0 resolved as shift
WARNING: shift/reduce conflict for KW_FN in state 0 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 0 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 0 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 0 resolved as shift
WARNING: shift/reduce conflict for KW_FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for KW_IF in state 0 resolved as shift
WARNING: shift/reduce conflict for KW_ELSE in state 0 resolved as shift
WARNING: shift/reduce conflict for KW_WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for KW_CONST in state 0 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 0 resolved as shift
WARNING: shift/reduce conflict for KW_PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for KW_LET in state 2 resolved as shift
WARNING: shift/reduce conflict for KW_FN in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 2 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 2 resolved as shift
WARNING: shift/reduce conflict for KW_FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for KW_IF in state 2 resolved as shift
WARNING: shift/reduce conflict for KW_ELSE in state 2 resolved as shift
WARNING: shift/reduce conflict for KW_WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for KW_CONST in state 2 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 2 resolved as shift
WARNING: shift/reduce conflict for KW_PRINT in state 88 resolved as shift
WARNING: shift/reduce conflict for KW_LET in state 88 resolved as shift
WARNING: shift/reduce conflict for KW_FN in state 88 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 88 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 88 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 88 resolved as shift
WARNING: shift/reduce conflict for KW_FOR in state 88 resolved as shift
WARNING: shift/reduce conflict for KW_IF in state 88 resolved as shift
WARNING: shift/reduce conflict for KW_ELSE in state 88 resolved as shift
WARNING: shift/reduce conflict for KW_WHILE in state 88 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 88 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 88 resolved as shift
WARNING: shift/reduce conflict for KW_CONST in state 88 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 94 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 96 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 96 resolved as shift
WARNING: shift/reduce conflict for KW_PRINT in state 116 resolved as shift
WARNING: shift/reduce conflict for KW_LET in state 116 resolved as shift
WARNING: shift/reduce conflict for KW_FN in state 116 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 116 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 116 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 116 resolved as shift
WARNING: shift/reduce conflict for KW_FOR in state 116 resolved as shift
WARNING: shift/reduce conflict for KW_IF in state 116 resolved as shift
WARNING: shift/reduce conflict for KW_ELSE in state 116 resolved as shift
WARNING: shift/reduce conflict for KW_WHILE in state 116 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 116 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 116 resolved as shift
WARNING: shift/reduce conflict for KW_CONST in state 116 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 116 resolved as shift
WARNING: shift/reduce conflict for KW_PRINT in state 177 resolved as shift
WARNING: shift/reduce conflict for KW_LET in state 177 resolved as shift
WARNING: shift/reduce conflict for KW_FN in state 177 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 177 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 177 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 177 resolved as shift
WARNING: shift/reduce conflict for KW_FOR in state 177 resolved as shift
WARNING: shift/reduce conflict for KW_IF in state 177 resolved as shift
WARNING: shift/reduce conflict for KW_ELSE in state 177 resolved as shift
WARNING: shift/reduce conflict for KW_WHILE in state 177 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 177 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 177 resolved as shift
WARNING: shift/reduce conflict for KW_CONST in state 177 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 177 resolved as shift
WARNING: shift/reduce conflict for KW_PRINT in state 200 resolved as shift
WARNING: shift/reduce conflict for KW_LET in state 200 resolved as shift
WARNING: shift/reduce conflict for KW_FN in state 200 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 200 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 200 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 200 resolved as shift
WARNING: shift/reduce conflict for KW_FOR in state 200 resolved as shift
WARNING: shift/reduce conflict for KW_IF in state 200 resolved as shift
WARNING: shift/reduce conflict for KW_ELSE in state 200 resolved as shift
WARNING: shift/reduce conflict for KW_WHILE in state 200 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 200 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 200 resolved as shift
WARNING: shift/reduce conflict for KW_CONST in state 200 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 200 resolved as shift
WARNING: shift/reduce conflict for KW_PRINT in state 202 resolved as shift
WARNING: shift/reduce conflict for KW_LET in state 202 resolved as shift
WARNING: shift/reduce conflict for KW_FN in state 202 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 202 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 202 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 202 resolved as shift
WARNING: shift/reduce conflict for KW_FOR in state 202 resolved as shift
WARNING: shift/reduce conflict for KW_IF in state 202 resolved as shift
WARNING: shift/reduce conflict for KW_ELSE in state 202 resolved as shift
WARNING: shift/reduce conflict for KW_WHILE in state 202 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 202 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 202 resolved as shift
WARNING: shift/reduce conflict for KW_CONST in state 202 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 202 resolved as shift
WARNING: shift/reduce conflict for KW_PRINT in state 225 resolved as shift
WARNING: shift/reduce conflict for KW_LET in state 225 resolved as shift
WARNING: shift/reduce conflict for KW_FN in state 225 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 225 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 225 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 225 resolved as shift
WARNING: shift/reduce conflict for KW_FOR in state 225 resolved as shift
WARNING: shift/reduce conflict for KW_IF in state 225 resolved as shift
WARNING: shift/reduce conflict for KW_ELSE in state 225 resolved as shift
WARNING: shift/reduce conflict for KW_WHILE in state 225 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 225 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 225 resolved as shift
WARNING: shift/reduce conflict for KW_CONST in state 225 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 225 resolved as shift
WARNING: shift/reduce conflict for KW_PRINT in state 278 resolved as shift
WARNING: shift/reduce conflict for KW_LET in state 278 resolved as shift
WARNING: shift/reduce conflict for KW_FN in state 278 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 278 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 278 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 278 resolved as shift
WARNING: shift/reduce conflict for KW_FOR in state 278 resolved as shift
WARNING: shift/reduce conflict for KW_IF in state 278 resolved as shift
WARNING: shift/reduce conflict for KW_ELSE in state 278 resolved as shift
WARNING: shift/reduce conflict for KW_WHILE in state 278 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 278 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 278 resolved as shift
WARNING: shift/reduce conflict for KW_CONST in state 278 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 278 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (main_rule -> father_rule)
WARNING: rejected rule (void -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 11 resolved using rule (father_rule -> array)
WARNING: rejected rule (data_str -> array) in state 11
WARNING: reduce/reduce conflict in state 21 resolved using rule (number -> VARIABLE)
WARNING: rejected rule (variables -> VARIABLE) in state 21
WARNING: reduce/reduce conflict in state 131 resolved using rule (number -> VARIABLE)
WARNING: rejected rule (expression_var -> VARIABLE) in state 131
WARNING: reduce/reduce conflict in state 139 resolved using rule (number -> INTEGER)
WARNING: rejected rule (data -> INTEGER) in state 139
WARNING: reduce/reduce conflict in state 140 resolved using rule (number -> FLOAT)
WARNING: rejected rule (data -> FLOAT) in state 140
WARNING: reduce/reduce conflict in state 209 resolved using rule (number -> INTEGER)
WARNING: rejected rule (data -> INTEGER) in state 209
WARNING: reduce/reduce conflict in state 210 resolved using rule (number -> FLOAT)
WARNING: rejected rule (data -> FLOAT) in state 210
WARNING: Rule (expression_var -> VARIABLE) is never reduced
